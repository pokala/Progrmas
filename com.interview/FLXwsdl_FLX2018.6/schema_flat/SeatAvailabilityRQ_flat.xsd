<?xml version="1.0" encoding="utf-8"?>
<xsd:schema xmlns="http://farelogix.com/flx/SeatAvailabilityRQ" attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://farelogix.com/flx/SeatAvailabilityRQ" version="1.8" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:attributeGroup name="BalanceAmount">
    <xsd:attribute name="BalanceAmount" type="xsd:string">
      <xsd:annotation>
        <xsd:documentation> Amount (without decimal) available on card. Example: 100 (one hundred)</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:attributeGroup>
  <xsd:attributeGroup name="DistanceUnit">
    <xsd:attribute name="DistanceUnit">
      <xsd:annotation>
        <xsd:documentation>Unit of distance.
Values:
M = Miles
K = Kilometers
Example: K</xsd:documentation>
      </xsd:annotation>
      <xsd:simpleType>
        <xsd:restriction base="xsd:string">
          <xsd:minLength value="1" />
          <xsd:maxLength value="1" />
          <xsd:enumeration value="M" />
          <xsd:enumeration value="K" />
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:attribute>
  </xsd:attributeGroup>
  <xsd:attributeGroup name="OFFPoint">
    <xsd:attribute name="OFFPoint" type="xsd:string">
      <xsd:annotation>
        <xsd:documentation>Identifies the OFF point of each slice of a flight (direct flight w/stop(s) and/or COG flights) using 3-character airport codes.
Example:  LHR</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:attributeGroup>
  <xsd:attributeGroup name="ONPoint">
    <xsd:attribute name="ONPoint" type="xsd:string">
      <xsd:annotation>
        <xsd:documentation>Identifies the ON point of each slice of a flight (direct flight w/stop(s) and/or COG flights) using 3-character airport codes.
Example:  ORD</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:attributeGroup>
  <xsd:attributeGroup name="Radius">
    <xsd:attribute name="Radius">
      <xsd:annotation>
        <xsd:documentation>Radius around the specified location, within which results should be included.
Example: 0.5</xsd:documentation>
      </xsd:annotation>
      <xsd:simpleType>
        <xsd:restriction base="xsd:unsignedLong" />
      </xsd:simpleType>
    </xsd:attribute>
  </xsd:attributeGroup>
  <xsd:attributeGroup name="RefType">
    <xsd:attribute name="RefType" type="xsd:string">
      <xsd:annotation>
        <xsd:documentation>Location of the referenced data. Example: TravelerRefInfo  Accepted Values: Any child node specified in ReferenceData, eg. FlightRefInfo, ServiceRefInfo, FareRefInfo, SeatRefInfo.
</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:attributeGroup>
  <xsd:attributeGroup name="sourceMandatory">
    <xsd:attribute name="Source" use="required">
      <xsd:annotation>
        <xsd:documentation>Identifies the source of this  element. In other words where the content originates from. Not limited to GDS, applicable to direct connect as well. Example: 1A, 1V, or other. </xsd:documentation>
      </xsd:annotation>
      <xsd:simpleType>
        <xsd:restriction base="xsd:string">
          <xsd:minLength value="1" />
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:attribute>
  </xsd:attributeGroup>
  <xsd:attributeGroup name="sourceOptional">
    <xsd:attribute name="Source">
      <xsd:annotation>
        <xsd:documentation>Identifies the source of this  element. In other words where the content originates from. Not limited to GDS, applicable to direct connect as well. Example: 1A, 1V, or other. </xsd:documentation>
      </xsd:annotation>
      <xsd:simpleType>
        <xsd:restriction base="xsd:string">
          <xsd:minLength value="1" />
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:attribute>
  </xsd:attributeGroup>
  <xsd:attributeGroup name="SourceRef">
    <xsd:attribute name="SourceRef">
      <xsd:annotation>
        <xsd:documentation>PNR Record Locator associated to Source attribute.</xsd:documentation>
      </xsd:annotation>
      <xsd:simpleType>
        <xsd:restriction base="xsd:string">
          <xsd:minLength value="1" />
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:attribute>
  </xsd:attributeGroup>
  <xsd:attributeGroup name="PayloadStdAttributes">
    <xsd:annotation>
      <xsd:documentation source="DESCRIPTION" xml:lang="en">NDC schema payload standard attributes.</xsd:documentation>
    </xsd:annotation>
    <xsd:attribute name="Version" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation source="DESCRIPTION" xml:lang="en">Message version number.
Example: 1.0</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="TimeStamp" type="xsd:dateTime" use="optional">
      <xsd:annotation>
        <xsd:documentation source="DESCRIPTION" xml:lang="en">Message creation timestamp.
Example: 2012-01-13T13:59:38Z</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="TransactionIdentifier" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation source="DESCRIPTION" xml:lang="en">Unique relationship identifier for request and response messages that are part of an on-going transaction.
Example: TRN12345</xsd:documentation>
        <xsd:documentation source="GUIDELINES" xml:lang="en">=notes=
1. This is a unique identifier to relate all messages that are part of an on-going transaction.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="PrimaryLangID" use="optional">
      <xsd:annotation>
        <xsd:documentation source="DESCRIPTION" xml:lang="en">Primary language preference for message content.
Example: en-US (English, United States)</xsd:documentation>
        <xsd:documentation source="ENCODING" xml:lang="en">For maximum interoperability, content language designators are specified using Microsoft National Language Support (NLS) encoding.
http://msdn.microsoft.com/en-us/goglobal/bb896001.aspx</xsd:documentation>
      </xsd:annotation>
      <xsd:simpleType>
        <xsd:restriction base="xsd:string">
          <xsd:minLength value="2" />
          <xsd:maxLength value="5" />
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:attribute>
    <xsd:attribute name="AltLangID" use="optional">
      <xsd:annotation>
        <xsd:documentation source="DESCRIPTION" xml:lang="en">Alternate language preference for message content.
Example: en-GB (English, United Kingdom)</xsd:documentation>
        <xsd:documentation source="ENCODING" xml:lang="en">For maximum interoperability, content language designators are specified using Microsoft National Language Support (NLS) encoding.
http://msdn.microsoft.com/en-us/goglobal/bb896001.aspx</xsd:documentation>
      </xsd:annotation>
      <xsd:simpleType>
        <xsd:restriction base="xsd:string">
          <xsd:minLength value="2" />
          <xsd:maxLength value="5" />
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:attribute>
    <xsd:attribute name="TargetSystem" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation source="DESCRIPTION" xml:lang="en">Message target system type.
Examples:
PRODUCTION
STAGING
TEST</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="TargetSystemName" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation source="DESCRIPTION" xml:lang="en">Message target system name.
Example: STG002</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:attributeGroup>
  <xsd:attributeGroup name="version">
    <xsd:attribute name="version" type="xsd:string">
      <xsd:annotation>
        <xsd:documentation>Version of message</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:attributeGroup>
  <xsd:attributeGroup name="Time">
    <xsd:attribute name="Time">
      <xsd:annotation>
        <xsd:documentation>Time in ISO 8601 format.  Example: 12:35 or 19:45</xsd:documentation>
      </xsd:annotation>
      <xsd:simpleType>
        <xsd:restriction base="xsd:string">
          <xsd:pattern value="([0-1][0-9]|2[0-4]):[0-5][0-9]">
            <xsd:annotation>
              <xsd:documentation />
            </xsd:annotation>
          </xsd:pattern>
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:attribute>
  </xsd:attributeGroup>
  <xsd:element name="AirlineCode">
    <xsd:annotation>
      <xsd:documentation>Airline code.  Example: AA</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleType>
      <xsd:restriction base="xsd:string" />
    </xsd:simpleType>
  </xsd:element>
  <xsd:element name="AirportCode">
    <xsd:annotation>
      <xsd:documentation>Airport code.  Example: MIA</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleType>
      <xsd:restriction base="xsd:string">
        <xsd:maxLength value="3" />
        <xsd:minLength value="3" />
      </xsd:restriction>
    </xsd:simpleType>
  </xsd:element>
  <xsd:element name="Arrival">
    <xsd:annotation>
      <xsd:documentation>Flight arrival group</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:annotation>
          <xsd:documentation>IMPORTANT: Note that Date and Time elements are mandatory for regular flight sell. Only optional for OPEN segments . 

See also Flight/@Type=O  attribute of the Flight element.</xsd:documentation>
        </xsd:annotation>
        <xsd:element ref="AirportCode" />
        <xsd:element minOccurs="0" ref="Date" />
        <xsd:element minOccurs="0" ref="Time" />
        <xsd:element minOccurs="0" ref="Terminal" />
        <xsd:element minOccurs="0" name="AirportName" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Airport Name. Example Miami International Airport</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="AltTicketingDate">
    <xsd:annotation>
      <xsd:documentation>This date stamp specifies a future or historic alternative date validation for ticketing.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="Date" type="Date">
          <xsd:annotation>
            <xsd:documentation>Specifies date in ISO 8601 format (yyyy-mm-dd). Example: 2001-12-25</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="BookingSource" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>Agency booking source number.  Example: 99199</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="Certificates">
    <xsd:annotation>
      <xsd:documentation>Electronic Certificate information.

=notes=
1. Supports non-revenue and flightpass certificates.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element maxOccurs="unbounded" name="Certificate" type="CertificateType">
          <xsd:annotation>
            <xsd:documentation>Certificate detail.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="CityCode">
    <xsd:annotation>
      <xsd:documentation>Departure or arrival city code.  Example: MIA</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleType>
      <xsd:restriction base="xsd:string">
        <xsd:maxLength value="3" />
        <xsd:minLength value="3" />
      </xsd:restriction>
    </xsd:simpleType>
  </xsd:element>
  <xsd:element name="ClassOfService" type="COSType">
    <xsd:annotation>
      <xsd:documentation>Class of service.  Example: B</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="Code" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>Error code or equipment type code.  Example: 0104 (error code), 747 (equipment code)</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="Control">
    <xsd:annotation>
      <xsd:documentation>The control(s) needed for this pop-up.a) Textbox

Possible types are:
a) TextBox
b) DropDown w/values
c) OptionGroup</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" maxOccurs="unbounded" name="Value" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Applicable to these control types:

ListBox
DropDown
ComboBox
OptionGroup
CheckBox

The provided values are used to provide a dynamically built list and/or single choice (OptionGroup) or multi-choice (CheckBox) labels.

In case of 'OptionGroup' and 'CheckBox' the value is the description/label for each checkbox or radio button.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
      <xsd:attribute name="Type" type="xsd:string" use="required">
        <xsd:annotation>
          <xsd:documentation>Possible Values:

TextBox
ListBox
DropDown w/values
ComboBox
OptionGroup(radio)
CheckBox
DateInput
TimeInput
TextArea</xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="GUILabel" type="xsd:string" use="required">
        <xsd:annotation>
          <xsd:documentation>Label to describe this control. 
This label is usually placed in front or above the respective control. In case of a 'Button' it is the name of the button.</xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="PNRLabel" type="xsd:string" use="required">
        <xsd:annotation>
          <xsd:documentation>Description to be used to enter the returned value into a PNR General Remark element, if needed or desired.

This label is usually placed in front of the returned value as remark text.

Example:
"ProjectID: 105514"</xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="MouseOverText" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>Freeflow informational text designed to use as a 'mouseover' text or similar</xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="Mandatory" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>Allowed Values: Y or N

If 'Y' the UI needs to identify the control as mandatory input/selection, e.g. with an asteriks or different colored background</xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="Width" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>Width in pixels</xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="SameLine" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>Allowed Values: Y or N

If 'Y' the UI needs to position this control to the right of and on the same line as the preceding control.</xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="Pattern" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>use a regular expression string</xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="MinChar" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>Minimum characters</xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="MaxChar" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>Maximum characters</xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="CountryCode">
    <xsd:annotation>
      <xsd:documentation>Country where sale takes place or Ticket issuing country. Example: US</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleType>
      <xsd:restriction base="xsd:string" />
    </xsd:simpleType>
  </xsd:element>
  <xsd:element name="CurrencyCode">
    <xsd:annotation>
      <xsd:documentation>Currency code.  Example: USD</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:simpleContent>
        <xsd:restriction base="CurrencyCodeType">
          <xsd:pattern value="[A-Z0-9]{3}" />
          <xsd:attribute name="NumberOfDecimals" type="xsd:nonNegativeInteger" use="required">
            <xsd:annotation>
              <xsd:documentation>Decimal position in fare amount.  Example: 2</xsd:documentation>
            </xsd:annotation>
          </xsd:attribute>
        </xsd:restriction>
      </xsd:simpleContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="CustomRequest">
    <xsd:annotation>
      <xsd:documentation>Mostly used when source specific additional input is needed and/or when QC (Quality Control) edits are processed and the POS needs instructions/options how to proceed.

Multiple sources may return a separate 'Error' node with their own CustomRequest request.

the UI must display one screen at a time and respond to each with a separate message.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="DialogTitle" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Freeflow Text to be displayed in the Title Bar of the pop-up window</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="Instructions">
          <xsd:annotation>
            <xsd:documentation>Freeflow lines of text to be displayed inside of the pop-up window to explain or instruct the user of the necessary action(s)</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:sequence>
              <xsd:element maxOccurs="unbounded" name="Text">
                <xsd:annotation>
                  <xsd:documentation>Individual line of freeflow text</xsd:documentation>
                </xsd:annotation>
                <xsd:complexType>
                  <xsd:simpleContent>
                    <xsd:extension base="xsd:string">
                      <xsd:attribute name="Type" type="xsd:string" use="optional">
                        <xsd:annotation>
                          <xsd:documentation>Information content type.</xsd:documentation>
                        </xsd:annotation>
                      </xsd:attribute>
                    </xsd:extension>
                  </xsd:simpleContent>
                </xsd:complexType>
              </xsd:element>
            </xsd:sequence>
          </xsd:complexType>
        </xsd:element>
        <xsd:element maxOccurs="unbounded" ref="Control">
          <xsd:annotation>
            <xsd:documentation>Control(s) needed for this pop-up.

Important: The UI is asked to build the Pop-Up controls in sequential order.

Possible types are:
TextBox
ListBox
DropDown w/values
ComboBox
OptionGroup
CheckBox
DateInput
TimeInput
TextArea</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element maxOccurs="unbounded" name="Button">
          <xsd:annotation>
            <xsd:documentation>The 1st button defined will be the default button for the window.

All buttons will be positioned at the bottom of the forms and arranged from left to right (centered)</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:attribute name="ButtonLabel" type="xsd:string" use="required">
              <xsd:annotation>
                <xsd:documentation>The label to be used for the button.

Example: Submit</xsd:documentation>
              </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="Validate" type="xsd:string">
              <xsd:annotation>
                <xsd:documentation>Possible values Y or N (default)

If "Y" this button will trigger the validation needed by the GUI prior to processing the screen.

Note:  Only a single button can have this attribute set to "Y".  If multiple, the first instance will be used.</xsd:documentation>
              </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="MouseOverText" type="xsd:string">
              <xsd:annotation>
                <xsd:documentation>Freeflow informational text designed to use as a 'mouseover' text or similar</xsd:documentation>
              </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="Width" type="xsd:string">
              <xsd:annotation>
                <xsd:documentation>GUI normally autosizes based on width of label.  A certain width may be defined here in pixels.</xsd:documentation>
              </xsd:annotation>
            </xsd:attribute>
          </xsd:complexType>
        </xsd:element>
        <xsd:element name="OrigMsg" type="MessageStructure">
          <xsd:annotation>
            <xsd:documentation>This is the message originally received by Company</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="Reference" type="MessageStructure">
          <xsd:annotation>
            <xsd:documentation>Reference node to be returned with CustomResponse node - mostly used as a linking reference between CustomRequest and CustomResponse</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="CancelRefKey" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Cancel reference key.
Example: QUERYID=6209000C296C648F?PNR=KSZJ2R?CANCEL_INIT=1548018?REFUND=FULL?REFUND_TYPE=IC?RETAIN_DATE=2014-10-14?H24=Y</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="CustomResponse">
    <xsd:annotation>
      <xsd:documentation>This node is used to return custom data previously requested via an error response using the InfoGroup/Error/ CustomRequest node of any supporting RS message.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element maxOccurs="unbounded" ref="Response">
          <xsd:annotation>
            <xsd:documentation>Custom response to each control sent to the GUI in the "CustomRequest" request.

If Control is of type 'Button' only the control which was clicked is returned with the @PNRLabel value provided or mapped from the associated @GUILabel.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element name="Button">
          <xsd:annotation>
            <xsd:documentation>This node represents the button clicked by the user.</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:attribute name="PNRLabel" type="xsd:string" use="required">
              <xsd:annotation>
                <xsd:documentation>Description to be used to enter the returned value into a PNR General Remark element. Value is passed thru from the request - if provided.</xsd:documentation>
              </xsd:annotation>
            </xsd:attribute>
          </xsd:complexType>
        </xsd:element>
        <xsd:element minOccurs="0" name="Reference" type="MessageStructure">
          <xsd:annotation>
            <xsd:documentation>Custom parameter node received in the CustomRequest node</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
      <xsd:attributeGroup ref="sourceMandatory" />
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="Date" type="xsd:date">
    <xsd:annotation>
      <xsd:documentation>Date in ISO 8601 format (yyyy-mm-dd).  Example: 2001-12-25</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="DateOfBirth" type="xsd:date">
    <xsd:annotation>
      <xsd:documentation>Traveler birth date in ISO 8601 format (yyyy-mm-dd).  Date of birth is not supported in Galileo.  Example: 2001-12-25</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="Departure">
    <xsd:annotation>
      <xsd:documentation>Flight departure group</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:annotation>
          <xsd:documentation>IMPORTANT: Note that Date and Time elements are mandatory for regular flight sell. Only optional for OPEN segments. 

See also Flight/@Type=O  attribute of the Flight element.</xsd:documentation>
        </xsd:annotation>
        <xsd:element ref="AirportCode" />
        <xsd:element minOccurs="0" ref="Date" />
        <xsd:element minOccurs="0" ref="Time" />
        <xsd:element minOccurs="0" ref="Terminal" />
        <xsd:element minOccurs="0" name="AirportName" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Airport Name. Example Miami International Airport</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="Derivation" type="DerivationType">
    <xsd:annotation>
      <xsd:documentation source="DESCRIPTION" xml:lang="en">Price derivation information.

=notes=
1. Used for dynamic price classes to identify the derivation for the designated price class (e.g. which qualifier triggered the creation of this price class.)</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="Diagnostics">
    <xsd:complexType>
      <xsd:simpleContent>
        <xsd:extension base="xsd:string">
          <xsd:attribute name="ID" type="xsd:integer" use="optional" />
        </xsd:extension>
      </xsd:simpleContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="DispAmount" type="xsd:decimal">
    <xsd:annotation>
      <xsd:documentation>Formated Display amount with decimals. e.g 75.00 </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="Error">
    <xsd:annotation>
      <xsd:documentation>Error group</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" ref="Code" />
        <xsd:element maxOccurs="unbounded" ref="Text" />
        <xsd:element minOccurs="0" ref="CustomRequest" />
      </xsd:sequence>
      <xsd:attribute name="ErrorType" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>Type of error.  Example: Air</xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
      <xsd:attributeGroup ref="sourceOptional" />
      <xsd:attributeGroup ref="SourceRef" />
      <xsd:attribute name="SegmentIDRef" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>ID reference used to associate this item to a segment. No comma separated lists and no ranges supported. Example: F1</xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="FareRefKey">
    <xsd:annotation>
      <xsd:documentation>Unique fare reference key. If present in pricing response messages, must be included in FareRulesRQ.</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleType>
      <xsd:restriction base="xsd:string">
        <xsd:minLength value="1" />
      </xsd:restriction>
    </xsd:simpleType>
  </xsd:element>
  <xsd:element name="FiledAmount">
    <xsd:annotation>
      <xsd:documentation>Base Fare Amount as originally filed.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:simpleContent>
        <xsd:extension base="xsd:integer" />
      </xsd:simpleContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="FiledCurrencyCode">
    <xsd:annotation>
      <xsd:documentation>Currency code.  Example: USD</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:simpleContent>
        <xsd:restriction base="CurrencyCodeType">
          <xsd:pattern value="[A-Z0-9]{3}" />
          <xsd:attribute name="NumberOfDecimals" type="xsd:nonNegativeInteger" use="required">
            <xsd:annotation>
              <xsd:documentation>Decimal position in fare amount.  Example: 2</xsd:documentation>
            </xsd:annotation>
          </xsd:attribute>
        </xsd:restriction>
      </xsd:simpleContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="FiledIn">
    <xsd:annotation>
      <xsd:documentation>This group represents fares filed in a currency different from the currency of a point of sale. The content elements represent the original currency and amount as filed.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:all>
        <xsd:element ref="CurrencyCode" />
        <xsd:element name="Amount">
          <xsd:annotation>
            <xsd:documentation>Base Fare Amount as originally filed.</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:simpleContent>
              <xsd:extension base="xsd:integer">
                <xsd:attribute name="BulkMask" type="xsd:string">
                  <xsd:annotation>
                    <xsd:documentation>This mask applies to IT/BT tickets where the masked value may be "BT" or "IT" instead of the true amount.

Note: this mask is ALWAYS used for the passenger ticket image. </xsd:documentation>
                  </xsd:annotation>
                </xsd:attribute>
              </xsd:extension>
            </xsd:simpleContent>
          </xsd:complexType>
        </xsd:element>
        <xsd:element minOccurs="0" name="NUCAmount">
          <xsd:annotation>
            <xsd:documentation>Base Fare Amount as originally filed.</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:simpleContent>
              <xsd:extension base="xsd:integer">
                <xsd:attribute name="ROE" type="xsd:string">
                  <xsd:annotation>
                    <xsd:documentation>Applicable rate of exhange</xsd:documentation>
                  </xsd:annotation>
                </xsd:attribute>
              </xsd:extension>
            </xsd:simpleContent>
          </xsd:complexType>
        </xsd:element>
      </xsd:all>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="FlightNumber" type="FlightNumberWithSuffixType">
    <xsd:annotation>
      <xsd:documentation>Flight number - an integer value within the range of [0,9999].

Example: 1234</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="ForInfo">
    <xsd:annotation>
      <xsd:documentation>Information group</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" ref="Code">
          <xsd:annotation>
            <xsd:documentation>Warning-, error- or equipment type code.  Example: 0104 (error code), 747 (equipment code)</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element maxOccurs="unbounded" ref="Text">
          <xsd:annotation>
            <xsd:documentation>Information text or error text. Example: Free flow text.  Example: Invalid flight number</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
      <xsd:attributeGroup ref="sourceOptional" />
      <xsd:attributeGroup ref="SourceRef" />
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="Gender">
    <xsd:annotation>
      <xsd:documentation>Traveler gender.  Values are: F = Female M = Male U= Unknown at time of booking.  Example: M      NOTE: Always use M or F in the FLX API, even for infants. FLX backend processing will submit alternative indicators (such as MI/FI) as appropriate.</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleType>
      <xsd:restriction base="xsd:string">
        <xsd:minLength value="1" />
        <xsd:maxLength value="2" />
        <xsd:enumeration value="F" />
        <xsd:enumeration value="M" />
        <xsd:enumeration value="U" />
        <xsd:enumeration value="MI" />
        <xsd:enumeration value="FI" />
      </xsd:restriction>
    </xsd:simpleType>
  </xsd:element>
  <xsd:element name="GeoCoded">
    <xsd:annotation>
      <xsd:documentation>Geographical position information. 
Allows search by geographical longitude and latitude and to define a search radius around the specified geo location.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:all>
        <xsd:element ref="Longitude" />
        <xsd:element ref="Latitude" />
      </xsd:all>
      <xsd:attributeGroup ref="Radius" />
      <xsd:attributeGroup ref="DistanceUnit" />
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="GivenName" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>Traveler given (first) name.  Example: JANE</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="HistoricalPricingInfo">
    <xsd:annotation>
      <xsd:documentation>DEPRECATED.
Please use definitions in PricingInfo: ReservationsDateTime, HistoricPricingDate, AltTicketingDate.

Historical pricing group. Required if OriginDestination group includes past date segments.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:choice>
        <xsd:sequence>
          <xsd:element minOccurs="0" name="ReservationDateTime">
            <xsd:annotation>
              <xsd:documentation>This timestamp indetifies when PNR was created client application requests historical pricing for.</xsd:documentation>
            </xsd:annotation>
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="Date" type="Date">
                  <xsd:annotation>
                    <xsd:documentation>Specifies departure or arrival date in ISO 8601 format (yyyy-mm-dd). Example: 2001-12-25</xsd:documentation>
                  </xsd:annotation>
                </xsd:element>
                <xsd:element minOccurs="0" name="Time" type="Time">
                  <xsd:annotation>
                    <xsd:documentation>Departure or arrival time in ISO 8601 twenty-four hour clock format. Example: 14:00</xsd:documentation>
                  </xsd:annotation>
                </xsd:element>
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="TicketedDateTime">
            <xsd:annotation>
              <xsd:documentation>Timestamp of ticket issuance  for past date segments in OriginDestination section.</xsd:documentation>
            </xsd:annotation>
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="Date" type="Date">
                  <xsd:annotation>
                    <xsd:documentation>Specifies departure or arrival date in ISO 8601 format (yyyy-mm-dd). Example: 2001-12-25</xsd:documentation>
                  </xsd:annotation>
                </xsd:element>
                <xsd:element minOccurs="0" name="Time" type="Time">
                  <xsd:annotation>
                    <xsd:documentation>Departure or arrival time in ISO 8601 twenty-four hour clock format. Example: 14:00</xsd:documentation>
                  </xsd:annotation>
                </xsd:element>
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
        <xsd:element minOccurs="0" maxOccurs="0" name="RecordLocator" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>FUTURE USE.
	NOT SUPPORTED.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:choice>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="HistoricPricingDate">
    <xsd:annotation>
      <xsd:documentation>Date for which a historical pricing is requested.  When used for ticket reissue in BSP markets this is commonly the issuance date of the original ticket.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="Date" type="Date">
          <xsd:annotation>
            <xsd:documentation>Specifies the date in ISO 8601 format (yyyy-mm-dd). Example: 2008-05-02</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="HotelRating">
    <xsd:annotation>
      <xsd:documentation>Rating of this hotel. Note that this element will eventually supercede the AAARating element definition. The latter will be deprecated soon.
Example: NTM3  CROWN</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:simpleContent>
        <xsd:extension base="xsd:string">
          <xsd:attribute name="RatingSystem">
            <xsd:annotation>
              <xsd:documentation>Identifies the rating system used to rate the hotel. Values are: 
AAA - AAA in US
GUESTS - Guest rating
HRS - Hotel Reservation System 'stars' rating
NTM - North Star Media 'crown' rating.
HBC - Booking.com rating
UNK - unknown.</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
              <xsd:restriction base="xsd:string">
                <xsd:enumeration value="AAA" />
                <xsd:enumeration value="GUESTS" />
                <xsd:enumeration value="HRS" />
                <xsd:enumeration value="NTM" />
                <xsd:enumeration value="UNK" />
                <xsd:enumeration value="HBC" />
              </xsd:restriction>
            </xsd:simpleType>
          </xsd:attribute>
        </xsd:extension>
      </xsd:simpleContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="Identification">
    <xsd:annotation>
      <xsd:documentation>Identification values for requestor, aggregator and airline</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="RequestorInfo">
          <xsd:annotation>
            <xsd:documentation>Requestor identification values </xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:sequence minOccurs="0">
              <xsd:element minOccurs="0" name="UserInfo">
                <xsd:annotation>
                  <xsd:documentation>User Information.</xsd:documentation>
                </xsd:annotation>
                <xsd:complexType>
                  <xsd:simpleContent>
                    <xsd:extension base="xsd:string">
                      <xsd:attribute name="UserID" type="xsd:string" use="required">
                        <xsd:annotation>
                          <xsd:documentation>In case of an agency this is typically the Agent's ID </xsd:documentation>
                        </xsd:annotation>
                      </xsd:attribute>
                      <xsd:attribute name="UserRole" type="xsd:string" use="optional">
                        <xsd:annotation>
                          <xsd:documentation>User's role as set in system provider's requestor profile</xsd:documentation>
                        </xsd:annotation>
                      </xsd:attribute>
                      <xsd:attribute name="UserPW" type="xsd:string" use="optional">
                        <xsd:annotation>
                          <xsd:documentation>User's password</xsd:documentation>
                        </xsd:annotation>
                      </xsd:attribute>
                      <xsd:attribute name="DutyCode" type="xsd:string" use="optional">
                        <xsd:annotation>
                          <xsd:documentation source="DESCRIPTION" xml:lang="en">Agent duty code.
Example: UZ</xsd:documentation>
                        </xsd:annotation>
                      </xsd:attribute>
                      <xsd:attribute name="SignOn" type="xsd:string" use="optional">
                        <xsd:annotation>
                          <xsd:documentation source="DESCRIPTION" xml:lang="en">Agent sign on (SINE).
Example: 6146TL</xsd:documentation>
                        </xsd:annotation>
                      </xsd:attribute>
                      <xsd:attribute name="LNIATA" type="xsd:string" use="optional">
                        <xsd:annotation>
                          <xsd:documentation source="DESCRIPTION" xml:lang="en">Agent CRT or terminal LNIATA number.
Example: 956301007</xsd:documentation>
                        </xsd:annotation>
                      </xsd:attribute>
                    </xsd:extension>
                  </xsd:simpleContent>
                </xsd:complexType>
              </xsd:element>
              <xsd:element minOccurs="0" name="AccountInfo">
                <xsd:annotation>
                  <xsd:documentation>Account info as it relates to a (customer) account of the requestor such as a corporate booking tool</xsd:documentation>
                </xsd:annotation>
                <xsd:complexType>
                  <xsd:sequence minOccurs="0">
                    <xsd:element name="AccountUserInfo">
                      <xsd:annotation>
                        <xsd:documentation>Account User Info</xsd:documentation>
                      </xsd:annotation>
                      <xsd:complexType>
                        <xsd:simpleContent>
                          <xsd:extension base="xsd:string">
                            <xsd:attribute name="AccountUserID" type="xsd:string" use="required">
                              <xsd:annotation>
                                <xsd:documentation>User ID of the account</xsd:documentation>
                              </xsd:annotation>
                            </xsd:attribute>
                          </xsd:extension>
                        </xsd:simpleContent>
                      </xsd:complexType>
                    </xsd:element>
                    <xsd:element minOccurs="0" name="SourceInfo">
                      <xsd:annotation>
                        <xsd:documentation source="DESCRIPTION" xml:lang="en">System source detail used for auditing and traceability.</xsd:documentation>
                      </xsd:annotation>
                      <xsd:complexType>
                        <xsd:sequence>
                          <xsd:element name="IPAddress" type="xsd:string">
                            <xsd:annotation>
                              <xsd:documentation>IP address of the requestor</xsd:documentation>
                            </xsd:annotation>
                          </xsd:element>
                          <xsd:element minOccurs="0" name="IPPort" type="xsd:string">
                            <xsd:annotation>
                              <xsd:documentation>IP port associated to above IP address</xsd:documentation>
                            </xsd:annotation>
                          </xsd:element>
                        </xsd:sequence>
                      </xsd:complexType>
                    </xsd:element>
                  </xsd:sequence>
                  <xsd:attribute name="AccountID" type="xsd:string" use="required">
                    <xsd:annotation>
                      <xsd:documentation>In case of an agency this is typically the Account ID as set up between requestor and client, such as a corporate booking tool </xsd:documentation>
                    </xsd:annotation>
                  </xsd:attribute>
                </xsd:complexType>
              </xsd:element>
              <xsd:element minOccurs="0" name="SourceInfo">
                <xsd:annotation>
                  <xsd:documentation>System source detail used for auditing and traceability.</xsd:documentation>
                </xsd:annotation>
                <xsd:complexType>
                  <xsd:sequence>
                    <xsd:element name="IPAddress" type="xsd:string">
                      <xsd:annotation>
                        <xsd:documentation>IP address of the requestor</xsd:documentation>
                      </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" name="IPPort" type="xsd:string">
                      <xsd:annotation>
                        <xsd:documentation>IP port associated to above IP address</xsd:documentation>
                      </xsd:annotation>
                    </xsd:element>
                  </xsd:sequence>
                </xsd:complexType>
              </xsd:element>
            </xsd:sequence>
            <xsd:attribute name="RequestorID" type="xsd:string" use="required">
              <xsd:annotation>
                <xsd:documentation>In case of an agency this is typically the PCC of the POS agency (PseudoCityCode)</xsd:documentation>
              </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="RequestorIATA" type="xsd:string" use="optional">
              <xsd:annotation>
                <xsd:documentation>Requestor's IATA number (if applicable)</xsd:documentation>
              </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="ReportingAgency" type="xsd:string" use="optional">
              <xsd:annotation>
                <xsd:documentation source="DESCRIPTION" xml:lang="en">Reporting agency.
Examples:
ARC
BSP
Other</xsd:documentation>
              </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="DocStock" type="xsd:string" use="optional">
              <xsd:annotation>
                <xsd:documentation source="DESCRIPTION" xml:lang="en">Stock to be used.
Examples: BSP, AL</xsd:documentation>
              </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="RequestorName" type="xsd:string" use="optional">
              <xsd:annotation>
                <xsd:documentation source="DESCRIPTION" xml:lang="en">Requestor name.
Example: UNITED AIRLINES</xsd:documentation>
              </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="RequestorPW" type="xsd:string" use="optional">
              <xsd:annotation>
                <xsd:documentation source="DESCRIPTION" xml:lang="en">Requestor password.</xsd:documentation>
              </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="RequestorType" type="xsd:string" use="optional">
              <xsd:annotation>
                <xsd:documentation source="DESCRIPTION" xml:lang="en">Requestor type.
Example:
A (Airline)
C (Consolidator)
E (Electronic Selling System)
G (General Sales Agent)
I (Internal CRS Locations)
T (Travel Agent)
V (Vendor)
W (Wholesaler/Tour Operator)</xsd:documentation>
              </xsd:annotation>
            </xsd:attribute>
          </xsd:complexType>
        </xsd:element>
        <xsd:element minOccurs="0" maxOccurs="2" name="AggregatorInfo">
          <xsd:annotation>
            <xsd:documentation>Aggregator identification values </xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:sequence>
              <xsd:element minOccurs="0" name="SourceInfo">
                <xsd:annotation>
                  <xsd:documentation source="DESCRIPTION" xml:lang="en">System source detail used for auditing and traceability.</xsd:documentation>
                </xsd:annotation>
                <xsd:complexType>
                  <xsd:sequence>
                    <xsd:element name="IPAddress" type="xsd:string">
                      <xsd:annotation>
                        <xsd:documentation>IP address of the requestor</xsd:documentation>
                      </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" name="IPPort" type="xsd:string">
                      <xsd:annotation>
                        <xsd:documentation>IP port associated to above IP address</xsd:documentation>
                      </xsd:annotation>
                    </xsd:element>
                  </xsd:sequence>
                </xsd:complexType>
              </xsd:element>
            </xsd:sequence>
            <xsd:attribute name="AggregatorID" type="xsd:string" use="required">
              <xsd:annotation>
                <xsd:documentation>ID of the aggregating entity, such as GDS, OTA, MetaSearch, etc.</xsd:documentation>
              </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="AggregatorPW" type="xsd:string" use="optional">
              <xsd:annotation>
                <xsd:documentation>Aggregator's password</xsd:documentation>
              </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="AggregatorType" type="xsd:string" use="optional">
              <xsd:annotation>
                <xsd:documentation>Values as per IATA's AIRIMP are as follows:
A - Airline
E - ERSP (Electronic Reservation System Provider)
N - Requestor has no identification
T - Requestor has a user identification number assigned by IATA/ARC other than ERSP</xsd:documentation>
              </xsd:annotation>
            </xsd:attribute>
          </xsd:complexType>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="InfoGroup">
    <xsd:annotation>
      <xsd:documentation>Error and information group</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" maxOccurs="unbounded" ref="ForInfo" />
        <xsd:element minOccurs="0" maxOccurs="unbounded" ref="Error" />
        <xsd:element minOccurs="0" maxOccurs="unbounded" ref="MarketingData" />
        <xsd:element minOccurs="0" name="BackOffice">
          <xsd:annotation>
            <xsd:documentation>Used by certain applications to relay data</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:sequence minOccurs="0">
              <xsd:element minOccurs="0" name="Services">
                <xsd:complexType>
                  <xsd:sequence minOccurs="0">
                    <xsd:element minOccurs="0" maxOccurs="unbounded" name="Service">
                      <xsd:complexType>
                        <xsd:sequence minOccurs="0">
                          <xsd:element minOccurs="0" maxOccurs="unbounded" ref="SegmentIDRef" />
                        </xsd:sequence>
                        <xsd:attribute name="Type">
                          <xsd:annotation>
                            <xsd:documentation>Offer Code</xsd:documentation>
                          </xsd:annotation>
                          <xsd:simpleType>
                            <xsd:restriction base="xsd:string">
                              <xsd:enumeration value="CDA" />
                              <xsd:enumeration value="CDD" />
                              <xsd:enumeration value="BSD" />
                              <xsd:enumeration value="BSA" />
                              <xsd:enumeration value="STPC" />
                            </xsd:restriction>
                          </xsd:simpleType>
                        </xsd:attribute>
                        <xsd:attribute name="Text" type="xsd:string">
                          <xsd:annotation>
                            <xsd:documentation>Description</xsd:documentation>
                          </xsd:annotation>
                        </xsd:attribute>
                        <xsd:attribute name="Offer">
                          <xsd:annotation>
                            <xsd:documentation>Offer indicator if present set to Y</xsd:documentation>
                          </xsd:annotation>
                          <xsd:simpleType>
                            <xsd:restriction base="xsd:string">
                              <xsd:enumeration value="Y" />
                            </xsd:restriction>
                          </xsd:simpleType>
                        </xsd:attribute>
                      </xsd:complexType>
                    </xsd:element>
                  </xsd:sequence>
                </xsd:complexType>
              </xsd:element>
              <xsd:element minOccurs="0" name="MerchTxnRef" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>Transaction number returned by Credit Card Merchant Provider</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" name="ReceiptNo" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>Complements the MechTxnRef - returned by Credit Card Merchant Provider</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
            </xsd:sequence>
          </xsd:complexType>
        </xsd:element>
        <xsd:element minOccurs="0" name="FeeGroup">
          <xsd:annotation>
            <xsd:documentation>OB Fees associated with PNR - These are only indicative and actual fees will be calculated an applied udring ticketing. Returned if PNRRetrieveRQ/Display/OBFees is set to "Y" and the carrier files OB fees.</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:sequence>
              <xsd:element ref="CurrencyCode" />
              <xsd:element maxOccurs="unbounded" name="Fee">
                <xsd:complexType>
                  <xsd:sequence>
                    <xsd:element name="Amount" type="xsd:integer">
                      <xsd:annotation>
                        <xsd:documentation>Fee amount. Example: 2000</xsd:documentation>
                      </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" name="Description" type="xsd:string">
                      <xsd:annotation>
                        <xsd:documentation>Title description (Commercial Name) of Fee.

Example: "Credit Card Fee"</xsd:documentation>
                      </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" name="Taxes">
                      <xsd:annotation>
                        <xsd:documentation>Tax Group</xsd:documentation>
                      </xsd:annotation>
                      <xsd:complexType>
                        <xsd:sequence>
                          <xsd:element minOccurs="0" maxOccurs="unbounded" name="Tax">
                            <xsd:annotation>
                              <xsd:documentation>Tax break down information group </xsd:documentation>
                            </xsd:annotation>
                            <xsd:complexType>
                              <xsd:sequence minOccurs="0">
                                <xsd:element name="Designator" type="xsd:string">
                                  <xsd:annotation>
                                    <xsd:documentation>Tax or surcharge designator.  Example: US</xsd:documentation>
                                  </xsd:annotation>
                                </xsd:element>
                                <xsd:element minOccurs="0" name="Description" type="xsd:string">
                                  <xsd:annotation>
                                    <xsd:documentation>Tax or surcharge description.  Example: US national transportation</xsd:documentation>
                                  </xsd:annotation>
                                </xsd:element>
                              </xsd:sequence>
                              <xsd:attribute name="Amount" type="xsd:integer" use="required">
                                <xsd:annotation>
                                  <xsd:documentation>Individual tax amount.  Example: 250</xsd:documentation>
                                </xsd:annotation>
                              </xsd:attribute>
                              <xsd:attribute name="Refundable" use="optional">
                                <xsd:annotation>
                                  <xsd:documentation>Indicates if tax is refundable.  Values are:
Y = Tax refundable (default)
N = Tax not refundable
Example: N</xsd:documentation>
                                </xsd:annotation>
                                <xsd:simpleType>
                                  <xsd:restriction base="xsd:string">
                                    <xsd:enumeration value="Y" />
                                    <xsd:enumeration value="N" />
                                  </xsd:restriction>
                                </xsd:simpleType>
                              </xsd:attribute>
                            </xsd:complexType>
                          </xsd:element>
                        </xsd:sequence>
                        <xsd:attribute name="Amount" type="xsd:integer" use="required">
                          <xsd:annotation>
                            <xsd:documentation>Total taxes amount.  Example: 750</xsd:documentation>
                          </xsd:annotation>
                        </xsd:attribute>
                      </xsd:complexType>
                    </xsd:element>
                    <xsd:element minOccurs="0" name="TravelerElementNumber" type="xsd:string">
                      <xsd:annotation>
                        <xsd:documentation>PNR element number.  Example: 1</xsd:documentation>
                      </xsd:annotation>
                    </xsd:element>
                  </xsd:sequence>
                  <xsd:attribute name="ServiceCode">
                    <xsd:annotation>
                      <xsd:documentation>Additional unique ATPCO code. Please refer to FLX Codeset document for acceptable values.
Example: OC</xsd:documentation>
                    </xsd:annotation>
                  </xsd:attribute>
                  <xsd:attribute name="SubCode">
                    <xsd:annotation>
                      <xsd:documentation>ATPCO RFISC (ReasonForIssuance  Subcode).
Example of RFISC: 0CC</xsd:documentation>
                    </xsd:annotation>
                  </xsd:attribute>
                  <xsd:attribute name="Refundable">
                    <xsd:annotation>
                      <xsd:documentation>Indicates if fee is refundable.  Values are:
Y = Fee refundable  N = Fee not refundable. If attribute is not there then
default is Y.</xsd:documentation>
                    </xsd:annotation>
                    <xsd:simpleType>
                      <xsd:restriction base="xsd:string">
                        <xsd:length value="1" />
                      </xsd:restriction>
                    </xsd:simpleType>
                  </xsd:attribute>
                </xsd:complexType>
              </xsd:element>
            </xsd:sequence>
          </xsd:complexType>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="Initial">
    <xsd:annotation>
      <xsd:documentation>Traveler middle name or  initial.  Example: G or Gary</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleType>
      <xsd:restriction base="xsd:string" />
    </xsd:simpleType>
  </xsd:element>
  <xsd:element name="Latitude">
    <xsd:annotation>
      <xsd:documentation>Geographical information for latitude. If sign attribute is missing, positive values stand for North, negative values for South. Example: 49.9856</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:simpleContent>
        <xsd:extension base="xsd:decimal">
          <xsd:attribute name="Sign">
            <xsd:annotation>
              <xsd:documentation>Latitude Indicator.  Values are: N = North of Equator S = South of Equator  Example: S</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
              <xsd:restriction base="xsd:string">
                <xsd:enumeration value="S" />
                <xsd:enumeration value="N" />
              </xsd:restriction>
            </xsd:simpleType>
          </xsd:attribute>
        </xsd:extension>
      </xsd:simpleContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="Longitude">
    <xsd:annotation>
      <xsd:documentation>Geographical information for longitude. If sign attribute is missing, positive values stand for East, negative values for West. Example: 9.1220</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:simpleContent>
        <xsd:extension base="xsd:decimal">
          <xsd:attribute name="Sign">
            <xsd:annotation>
              <xsd:documentation>Longitude indicator.  Values are: E = East of Meridian, W = West of Meridian  Example: E</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
              <xsd:restriction base="xsd:string">
                <xsd:enumeration value="E" />
                <xsd:enumeration value="W" />
              </xsd:restriction>
            </xsd:simpleType>
          </xsd:attribute>
        </xsd:extension>
      </xsd:simpleContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="MarketingData">
    <xsd:annotation>
      <xsd:documentation>Marketing Messages and Multimedia Links.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" name="MediaContent">
          <xsd:annotation>
            <xsd:documentation source="DESCRIPTION" xml:lang="en">Media content information.</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:sequence>
              <xsd:element minOccurs="0" name="Images">
                <xsd:annotation>
                  <xsd:documentation source="DESCRIPTION" xml:lang="en">Image information.</xsd:documentation>
                </xsd:annotation>
                <xsd:complexType>
                  <xsd:sequence>
                    <xsd:element maxOccurs="unbounded" name="Image">
                      <xsd:annotation>
                        <xsd:documentation source="DESCRIPTION" xml:lang="en">Image detail.</xsd:documentation>
                      </xsd:annotation>
                      <xsd:complexType>
                        <xsd:sequence>
                          <xsd:element name="Height">
                            <xsd:annotation>
                              <xsd:documentation>Height of media content in specified units.</xsd:documentation>
                            </xsd:annotation>
                            <xsd:complexType>
                              <xsd:simpleContent>
                                <xsd:extension base="xsd:int">
                                  <xsd:attribute name="Unit" type="xsd:string" use="required">
                                    <xsd:annotation>
                                      <xsd:documentation source="DESCRIPTION" xml:lang="en">Dimension unit.
Examples:
MM (MILLIMETER)
PX (PIXEL)</xsd:documentation>
                                      <xsd:documentation source="ENCODING" xml:lang="en">Select a value from the enumerated list or enter a string value.
=enumerated values=
MM = MILLIMETER
PX = PIXEL</xsd:documentation>
                                    </xsd:annotation>
                                  </xsd:attribute>
                                </xsd:extension>
                              </xsd:simpleContent>
                            </xsd:complexType>
                          </xsd:element>
                          <xsd:element name="Width">
                            <xsd:annotation>
                              <xsd:documentation>Width of media content in specified units.</xsd:documentation>
                            </xsd:annotation>
                            <xsd:complexType>
                              <xsd:simpleContent>
                                <xsd:extension base="xsd:int">
                                  <xsd:attribute name="Unit" type="xsd:string" use="required">
                                    <xsd:annotation>
                                      <xsd:documentation source="DESCRIPTION" xml:lang="en">Dimension unit.
Examples:
MM (MILLIMETER)
PX (PIXEL)</xsd:documentation>
                                      <xsd:documentation source="ENCODING" xml:lang="en">Select a value from the enumerated list or enter a string value.
=enumerated values=
MM = MILLIMETER
PX = PIXEL</xsd:documentation>
                                    </xsd:annotation>
                                  </xsd:attribute>
                                </xsd:extension>
                              </xsd:simpleContent>
                            </xsd:complexType>
                          </xsd:element>
                          <xsd:element minOccurs="0" name="ImageData" type="xsd:string">
                            <xsd:annotation>
                              <xsd:documentation source="DESCRIPTION" xml:lang="en">Encoded image value, typically in base64.</xsd:documentation>
                            </xsd:annotation>
                          </xsd:element>
                          <xsd:element minOccurs="0" name="ImageText">
                            <xsd:annotation>
                              <xsd:documentation source="DESCRIPTION" xml:lang="en">Media associated text.</xsd:documentation>
                            </xsd:annotation>
                            <xsd:complexType>
                              <xsd:sequence>
                                <xsd:element maxOccurs="unbounded" name="Text">
                                  <xsd:simpleType>
                                    <xsd:restriction base="xsd:string">
                                      <xsd:minLength value="1" />
                                    </xsd:restriction>
                                  </xsd:simpleType>
                                </xsd:element>
                              </xsd:sequence>
                            </xsd:complexType>
                          </xsd:element>
                        </xsd:sequence>
                        <xsd:attribute name="ImageID" type="xsd:string" use="optional">
                          <xsd:annotation>
                            <xsd:documentation source="DESCRIPTION" xml:lang="en">Unique media ID.
Examples:
IMG713
SFO_LOUNGE</xsd:documentation>
                            <xsd:documentation source="GUIDELINES" xml:lang="en">=notes=
1. Provides an unique ID for any available images returned in any responsemessages.
2. FileRetrieveRQ/ FileListRS will utilize these ID's to retrieve the full image(s) as needed.</xsd:documentation>
                          </xsd:annotation>
                        </xsd:attribute>
                        <xsd:attribute name="Caption" type="xsd:string" use="optional">
                          <xsd:annotation>
                            <xsd:documentation source="DESCRIPTION" xml:lang="en">Media caption.
Example: PREMIUM SEAT</xsd:documentation>
                          </xsd:annotation>
                        </xsd:attribute>
                        <xsd:attribute name="Symbology" type="xsd:string" use="optional">
                          <xsd:annotation>
                            <xsd:documentation source="DESCRIPTION" xml:lang="en">Barcode symbology applied.
Example: PDF417</xsd:documentation>
                          </xsd:annotation>
                        </xsd:attribute>
                        <xsd:attribute name="Encoding" type="xsd:string" use="optional">
                          <xsd:annotation>
                            <xsd:documentation source="DESCRIPTION" xml:lang="en">Media encoding method.
Example: BASE64</xsd:documentation>
                          </xsd:annotation>
                        </xsd:attribute>
                        <xsd:attribute name="Format" type="xsd:string" use="optional">
                          <xsd:annotation>
                            <xsd:documentation source="DESCRIPTION" xml:lang="en">Media format.
Example: JPEG</xsd:documentation>
                          </xsd:annotation>
                        </xsd:attribute>
                      </xsd:complexType>
                    </xsd:element>
                  </xsd:sequence>
                </xsd:complexType>
              </xsd:element>
              <xsd:element minOccurs="0" name="MediaLinks">
                <xsd:annotation>
                  <xsd:documentation source="DESCRIPTION" xml:lang="en">Link information.</xsd:documentation>
                </xsd:annotation>
                <xsd:complexType>
                  <xsd:sequence>
                    <xsd:element maxOccurs="unbounded" name="Link">
                      <xsd:annotation>
                        <xsd:documentation source="DESCRIPTION" xml:lang="en">Link detail.</xsd:documentation>
                      </xsd:annotation>
                      <xsd:complexType>
                        <xsd:simpleContent>
                          <xsd:extension base="xsd:anyURI">
                            <xsd:attribute name="LinkID" type="xsd:string" use="optional">
                              <xsd:annotation>
                                <xsd:documentation source="DESCRIPTION" xml:lang="en">Unique link ID.
Example: SFOLOUNGE</xsd:documentation>
                              </xsd:annotation>
                            </xsd:attribute>
                            <xsd:attribute name="Caption" type="xsd:string" use="optional">
                              <xsd:annotation>
                                <xsd:documentation source="DESCRIPTION" xml:lang="en">Caption or label.
Example: PREMIUM SEAT</xsd:documentation>
                              </xsd:annotation>
                            </xsd:attribute>
                            <xsd:attribute name="Type" type="xsd:string" use="optional">
                              <xsd:annotation>
                                <xsd:documentation source="DESCRIPTION" xml:lang="en">Media link type.
Example:
DET (Details)
DIS (Disclosure)
VID (Video)
CAM (Webcam)
PGE (Webpage)</xsd:documentation>
                              </xsd:annotation>
                            </xsd:attribute>
                          </xsd:extension>
                        </xsd:simpleContent>
                      </xsd:complexType>
                    </xsd:element>
                  </xsd:sequence>
                </xsd:complexType>
              </xsd:element>
            </xsd:sequence>
          </xsd:complexType>
        </xsd:element>
        <xsd:element minOccurs="0" maxOccurs="unbounded" name="Message">
          <xsd:annotation>
            <xsd:documentation source="DESCRIPTION" xml:lang="en">Marketing message.
Example: ONE TRAVELER MAY BE ELIGIBLE FOR A FREE SEAT</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:sequence>
              <xsd:element maxOccurs="unbounded" name="Text">
                <xsd:simpleType>
                  <xsd:restriction base="xsd:string">
                    <xsd:minLength value="1" />
                  </xsd:restriction>
                </xsd:simpleType>
              </xsd:element>
            </xsd:sequence>
          </xsd:complexType>
        </xsd:element>
      </xsd:sequence>
      <xsd:attribute name="Source" type="xsd:string" use="optional">
        <xsd:annotation>
          <xsd:documentation>Identifies the source of this  element. In other words where the content originates from. Not limited to GDS, applicable to direct connect as well. Example: 1A, 1V, or other. </xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="NegoRateCode">
    <xsd:annotation>
      <xsd:documentation>Negotiated rate code.</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleType>
      <xsd:restriction base="xsd:string">
        <xsd:minLength value="1" />
      </xsd:restriction>
    </xsd:simpleType>
  </xsd:element>
  <xsd:element name="NVA" type="xsd:date">
    <xsd:annotation>
      <xsd:documentation>Identifies "not valid after" date for a fare.Date in ISO 8601 format (yyyy-mm-dd).  Example: 2001-12-25</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="NVB" type="xsd:date">
    <xsd:annotation>
      <xsd:documentation>Identifies "not valid before" date for a fare. Date in ISO 8601 format (yyyy-mm-dd).  Example: 2001-12-25</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="POIDistance">
    <xsd:annotation>
      <xsd:documentation>Distance to a point of interest. Will somewhen replace DistanceToAirport. Example: 5.5</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:simpleContent>
        <xsd:extension base="xsd:decimal">
          <xsd:attribute name="POIType" use="required">
            <xsd:annotation>
              <xsd:documentation>Point of interest type. Example: AIRPORT</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
              <xsd:restriction base="xsd:string">
                <xsd:enumeration value="AIRPORT" />
                <xsd:enumeration value="TRAIN STATION" />
                <xsd:enumeration value="CITY CENTER" />
                <xsd:enumeration value="HIGHWAY" />
                <xsd:enumeration value="SHOPPING" />
                <xsd:enumeration value="PETROL STATION" />
                <xsd:enumeration value="THEATER" />
                <xsd:enumeration value="CINEMA" />
                <xsd:enumeration value="CAR RENTAL STATION" />
                <xsd:enumeration value="UNKNOWN" />
                <xsd:enumeration value="LOCATION" />
              </xsd:restriction>
            </xsd:simpleType>
          </xsd:attribute>
          <xsd:attribute name="POIName" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>Point of interest name.
Example: FRANKFURT/MAIN </xsd:documentation>
            </xsd:annotation>
          </xsd:attribute>
        </xsd:extension>
      </xsd:simpleContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="PriceRefKey">
    <xsd:annotation>
      <xsd:documentation>Unique price reference key. Key must be included in request message if present in previous offer (response) message, </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleType>
      <xsd:restriction base="xsd:string">
        <xsd:minLength value="1" />
      </xsd:restriction>
    </xsd:simpleType>
  </xsd:element>
  <xsd:element name="ReferenceData">
    <xsd:annotation>
      <xsd:documentation>Displays generic refence data such as aiport code, GEO coordinates, names, car, hotel other.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="Airport">
          <xsd:annotation>
            <xsd:documentation>Aiport code and associated GEO coordinates (latitude and longitude).</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:attribute name="Code" use="required">
              <xsd:annotation>
                <xsd:documentation>IATA 3-letter airport code.
Example: MIA</xsd:documentation>
              </xsd:annotation>
              <xsd:simpleType>
                <xsd:restriction base="xsd:string">
                  <xsd:length value="3" />
                </xsd:restriction>
              </xsd:simpleType>
            </xsd:attribute>
            <xsd:attribute name="Long" type="xsd:double" use="required">
              <xsd:annotation>
                <xsd:documentation>Longitude.
Example: -80.277922</xsd:documentation>
              </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="Lat" type="xsd:double" use="required">
              <xsd:annotation>
                <xsd:documentation>Latitude.
Example: 25.795343</xsd:documentation>
              </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="Name" type="xsd:string">
              <xsd:annotation>
                <xsd:documentation>Airport name</xsd:documentation>
              </xsd:annotation>
            </xsd:attribute>
          </xsd:complexType>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="ReferenceDefinitions">
    <xsd:annotation>
      <xsd:documentation>PNR element association information.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" maxOccurs="unbounded" name="TravelerRefInfo">
          <xsd:complexType>
            <xsd:sequence>
              <xsd:element ref="Surname" />
              <xsd:element ref="GivenName" />
              <xsd:element minOccurs="0" ref="Initial" />
              <xsd:element minOccurs="0" ref="DateOfBirth" />
              <xsd:element minOccurs="0" ref="Gender" />
            </xsd:sequence>
            <xsd:attribute name="PaxType" type="xsd:string" />
            <xsd:attribute name="AssociationID" type="xsd:string" />
          </xsd:complexType>
        </xsd:element>
        <xsd:element minOccurs="0" maxOccurs="unbounded" name="FlightRefInfo">
          <xsd:complexType>
            <xsd:sequence>
              <xsd:element ref="AirlineCode" />
              <xsd:element ref="FlightNumber" />
              <xsd:element ref="Departure" />
              <xsd:element ref="Arrival" />
              <xsd:element ref="ClassOfService" />
            </xsd:sequence>
            <xsd:attribute name="AssociationID" type="xsd:string" />
          </xsd:complexType>
        </xsd:element>
        <xsd:element minOccurs="0" maxOccurs="unbounded" name="ServiceRefInfo">
          <xsd:complexType>
            <xsd:sequence>
              <xsd:element name="ReasonCode" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>IATA RFIC (ReasonFor IssuanceCode, a 1-character main code)
Example of RFIC: A  

Note: Only services of same RFIC code can be combined on an EMD-A document.  For example, if there are services of RFIC code "A" and "B", two separate EMD documents are needed, issuing all services of "A" and "B" on seperate docs.</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element name="SubCode" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>ATPCO RFIS (ReasonForIssuance  Subcode).
Example of RFIS: 0CC </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element ref="TravelerIDRef" />
              <xsd:element minOccurs="0" maxOccurs="unbounded" ref="SegmentIDRef" />
            </xsd:sequence>
            <xsd:attribute name="AssociationID" type="xsd:string" />
          </xsd:complexType>
        </xsd:element>
        <xsd:element minOccurs="0" maxOccurs="unbounded" name="FareRefInfo">
          <xsd:complexType>
            <xsd:sequence>
              <xsd:element maxOccurs="unbounded" name="TravelerGroup">
                <xsd:complexType>
                  <xsd:sequence>
                    <xsd:element name="TypePriced" type="xsd:string">
                      <xsd:annotation>
                        <xsd:documentation>Passenger type being priced. This type can be different from the type requested if there is no available fare for the requested type.  For example the requested type is GOV and the priced type is ADT because there is no available fare for type GOV and there is an available fare for type ADT.  If the passenger type sent by the GDS is not the below predefined list, then it is shown as is.  Predefined values are:
ADT= Adult
CHD = Child
INF = Infant
GOV = Government
MIL = Military
SRC = Senior citizen
STD = Student
YTH = Youth
Example: ADT</xsd:documentation>
                      </xsd:annotation>
                    </xsd:element>
                    <xsd:element maxOccurs="unbounded" ref="TravelerIDRef" />
                    <xsd:element name="FareCalculation">
                      <xsd:annotation>
                        <xsd:documentation>FareCalculation Line</xsd:documentation>
                      </xsd:annotation>
                      <xsd:simpleType>
                        <xsd:restriction base="xsd:string">
                          <xsd:minLength value="1" />
                        </xsd:restriction>
                      </xsd:simpleType>
                    </xsd:element>
                  </xsd:sequence>
                </xsd:complexType>
              </xsd:element>
            </xsd:sequence>
            <xsd:attribute name="AssociationID" type="xsd:string" />
          </xsd:complexType>
        </xsd:element>
        <xsd:element minOccurs="0" maxOccurs="unbounded" name="SeatRefInfo">
          <xsd:complexType>
            <xsd:sequence>
              <xsd:element ref="TravelerIDRef" />
              <xsd:element ref="SegmentIDRef" />
              <xsd:element name="SeatLocation" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>Seat assignment location.  Example: 03A</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
            </xsd:sequence>
            <xsd:attribute name="AssociationID" type="xsd:string" />
          </xsd:complexType>
        </xsd:element>
        <xsd:element minOccurs="0" maxOccurs="unbounded" name="ChangeRefInfo">
          <xsd:complexType>
            <xsd:sequence>
              <xsd:element minOccurs="0" ref="TravelerIDRef" />
              <xsd:element minOccurs="0" ref="SegmentIDRef" />
              <xsd:element minOccurs="0" name="ServiceIDRef">
                <xsd:annotation>
                  <xsd:documentation>ID reference used to associate this item to a service. No comma separated lists and no ranges supported. Example: S1</xsd:documentation>
                </xsd:annotation>
                <xsd:complexType>
                  <xsd:attributeGroup ref="RefType" />
                </xsd:complexType>
              </xsd:element>
              <xsd:element minOccurs="0" name="FFNumber" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>Frequent flyer number.  Example: 0956301007</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" maxOccurs="unbounded" name="FOPOther">
                <xsd:annotation>
                  <xsd:documentation>"Other" FOP such as Check, Cash etc</xsd:documentation>
                </xsd:annotation>
                <xsd:complexType>
                  <xsd:simpleContent>
                    <xsd:extension base="xsd:string" />
                  </xsd:simpleContent>
                </xsd:complexType>
              </xsd:element>
              <xsd:element minOccurs="0" name="CCNumber" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>Credit card number.  Example: 4011236654652341

Can be returned encrypted.
Example: XXXXXXXXXXXX2341</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" name="Email" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>Seat assignment location.  Example: 03A</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" name="TelephoneNumber" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>Seat assignment location.  Example: 03A</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" ref="Text" />
              <xsd:element minOccurs="0" name="SSRCode" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>Special service request code.  IATA standard.  Example: VGML</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" name="TktDate" type="xsd:date">
                <xsd:annotation>
                  <xsd:documentation>Ticketing date </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" name="TktTime" type="xsd:time">
                <xsd:annotation>
                  <xsd:documentation>TicketingTime</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" name="Address" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>Address</xsd:documentation>
                  <xsd:documentation>Address type.  Example: HOME</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" name="CLIDNumber">
                <xsd:annotation>
                  <xsd:documentation>CorporateID. Example: C900395168859</xsd:documentation>
                </xsd:annotation>
                <xsd:simpleType>
                  <xsd:restriction base="xsd:string">
                    <xsd:maxLength value="50" />
                    <xsd:minLength value="1" />
                  </xsd:restriction>
                </xsd:simpleType>
              </xsd:element>
              <xsd:element minOccurs="0" name="CLIDStatus" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>CLID level for this member as provided by airline's database.</xsd:documentation>
                  <xsd:appinfo>
                    <title xmlns="">Schematron Release Notes</title>
                    <change version="2.0" change="V2-Child elements should have defined types." changeDetail="Element typed as xsd:string" xmlns="" />
                  </xsd:appinfo>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" name="CLIDCompanyCode">
                <xsd:annotation>
                  <xsd:documentation source="description" xml:lang="en">Airline code of the program/ membership sponsoring airline.</xsd:documentation>
                </xsd:annotation>
                <xsd:complexType>
                  <xsd:simpleContent>
                    <xsd:extension base="xsd:string" />
                  </xsd:simpleContent>
                </xsd:complexType>
              </xsd:element>
              <xsd:element minOccurs="0" name="CLIDCompanyName">
                <xsd:annotation>
                  <xsd:documentation source="description" xml:lang="en">Name of the program/ membership sponsoring airline.</xsd:documentation>
                </xsd:annotation>
                <xsd:complexType>
                  <xsd:simpleContent>
                    <xsd:extension base="xsd:string" />
                  </xsd:simpleContent>
                </xsd:complexType>
              </xsd:element>
            </xsd:sequence>
            <xsd:attribute name="AssociationID" type="xsd:string" />
          </xsd:complexType>
        </xsd:element>
        <xsd:element minOccurs="0" maxOccurs="unbounded" name="DeleteOtherRefInfo">
          <xsd:complexType>
            <xsd:sequence>
              <xsd:element minOccurs="0" ref="TravelerIDRef" />
              <xsd:element minOccurs="0" ref="SegmentIDRef" />
              <xsd:element minOccurs="0" name="ServiceIDRef">
                <xsd:annotation>
                  <xsd:documentation>ID reference used to associate this item to a service. No comma separated lists and no ranges supported. Example: S1</xsd:documentation>
                </xsd:annotation>
                <xsd:complexType>
                  <xsd:attributeGroup ref="RefType" />
                </xsd:complexType>
              </xsd:element>
              <xsd:element minOccurs="0" name="FFNumber" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>Frequent flyer number.  Example: 0956301007</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" maxOccurs="unbounded" name="FOPOther">
                <xsd:annotation>
                  <xsd:documentation>Form of payment other than credit card</xsd:documentation>
                </xsd:annotation>
                <xsd:complexType>
                  <xsd:simpleContent>
                    <xsd:extension base="xsd:string" />
                  </xsd:simpleContent>
                </xsd:complexType>
              </xsd:element>
              <xsd:element minOccurs="0" name="CCNumber" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>Credit card number.  Example: 4011236654652341

Can be returned encrypted.
Example: XXXXXXXXXXXX2341</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" name="Email" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>Seat assignment location.  Example: 03A</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" name="TelephoneNumber" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>Seat assignment location.  Example: 03A</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" ref="Text" />
              <xsd:element minOccurs="0" name="SSRCode" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>Special service request code.  IATA standard.  Example: VGML</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" name="OSICode" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>Conventional code (AIRIMP code) for other service information. Recommended to use when sending OSI to airline. Example: CTCA</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" name="ServiceTrxRefKey" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>Data binding reference key created for each supported PNR element such as "Services".

Generate standard 36 character GUID (example 540c2d5f-a9ab-4414-bd36-9999f5388773) and convert to base64 (example Xy0MVKupFES9NpmZ9TiHcw).  Result is unique 22 character key.</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" name="TktDate" type="xsd:date">
                <xsd:annotation>
                  <xsd:documentation>Ticketing date </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" name="TktTime" type="xsd:time">
                <xsd:annotation>
                  <xsd:documentation>TicketingTime</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" name="Address" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>Address</xsd:documentation>
                  <xsd:documentation>Address type.  Example: HOME</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" name="CLIDNumber">
                <xsd:annotation>
                  <xsd:documentation>CorporateID. Example: C900395168859</xsd:documentation>
                </xsd:annotation>
                <xsd:simpleType>
                  <xsd:restriction base="xsd:string">
                    <xsd:length value="50" />
                  </xsd:restriction>
                </xsd:simpleType>
              </xsd:element>
              <xsd:element minOccurs="0" name="CLIDStatus" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>CLID level for this member as provided by airline's database.</xsd:documentation>
                  <xsd:appinfo>
                    <title xmlns="">Schematron Release Notes</title>
                    <change version="2.0" change="V2-Child elements should have defined types." changeDetail="Element typed as xsd:string" xmlns="" />
                  </xsd:appinfo>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" name="CLIDCompanyCode">
                <xsd:annotation>
                  <xsd:documentation source="description" xml:lang="en">Airline code of the program/ membership sponsoring airline.</xsd:documentation>
                </xsd:annotation>
                <xsd:complexType>
                  <xsd:simpleContent>
                    <xsd:extension base="xsd:string" />
                  </xsd:simpleContent>
                </xsd:complexType>
              </xsd:element>
              <xsd:element minOccurs="0" name="CLIDCompanyName">
                <xsd:annotation>
                  <xsd:documentation source="description" xml:lang="en">Name of the program/ membership sponsoring airline.</xsd:documentation>
                </xsd:annotation>
                <xsd:complexType>
                  <xsd:simpleContent>
                    <xsd:extension base="xsd:string" />
                  </xsd:simpleContent>
                </xsd:complexType>
              </xsd:element>
            </xsd:sequence>
            <xsd:attribute name="AssociationID" type="xsd:string" />
          </xsd:complexType>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="ReservationsDateTime">
    <xsd:annotation>
      <xsd:documentation>Date/time when the entire booking was reserved.  Alternatively this date/time may be set independently for each flight - see ReservationsDateTime element in the Flight element of the OriginDestination element(s).</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:choice>
        <xsd:sequence>
          <xsd:element name="Date" type="Date">
            <xsd:annotation>
              <xsd:documentation>Specifies date in ISO 8601 format (yyyy-mm-dd). Example: 2001-12-25</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="Time" type="Time">
            <xsd:annotation>
              <xsd:documentation>Specifies time in ISO 8601 twenty-four hour clock format. Example: 14:00</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
        <xsd:element name="TimeStamp" type="xsd:dateTime">
          <xsd:annotation>
            <xsd:documentation source="DESCRIPTION" xml:lang="en">Full timestamp.
Example: 2013-01-13T13:20:00</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:choice>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="Response">
    <xsd:annotation>
      <xsd:documentation>Custom response to each control sent to the GUI in the "CustomRequest" request.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" maxOccurs="unbounded" name="Value" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Value(s) entered or selected by the user.

The value(s) are always the "GUILabel(s)" as selected.

In case of a textbox or combobox entry it is the value entered by the user.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
      <xsd:attribute name="PNRLabel" type="xsd:string" use="required">
        <xsd:annotation>
          <xsd:documentation>Description to be used to enter the returned value into a PNR General Remark element. Value is passed thru from the request - if provided.

This label can be used by the DM rule or the DC adaptor to create a PNR remark storing the returned value.  If e.g. the value here is "ProjectID" then a remark may be added to the PNR like this:

"ProjectID: 105514"</xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="S5">
    <xsd:annotation>
      <xsd:documentation>Shows ATPCO record S5 diagnostic infromation </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:attribute name="uid" type="xsd:integer" />
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="S7">
    <xsd:annotation>
      <xsd:documentation>Shows ATPCO record S7 diagnostic infromation </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:attribute name="uid" type="xsd:integer" />
      <xsd:attribute name="seq" type="xsd:integer">
        <xsd:annotation>
          <xsd:documentation>ATPCO table seq number </xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="excess_first" type="xsd:integer">
        <xsd:annotation>
          <xsd:documentation>represent the first occurrence of the excess bag.</xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="excess_last" type="xsd:integer">
        <xsd:annotation>
          <xsd:documentation>represent the last occurrence of the excess bag.</xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="SaleInfo">
    <xsd:annotation>
      <xsd:documentation>Point of Sale information</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" ref="CityCode">
          <xsd:annotation>
            <xsd:documentation>Point of Sale City Code 
Example: BOS</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" ref="CountryCode">
          <xsd:annotation>
            <xsd:documentation>Point of Sale Country Code 
Example: US</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="CurrencyCode">
          <xsd:annotation>
            <xsd:documentation>Point of Sale Currency Code
Example: USD</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:simpleContent>
              <xsd:restriction base="CurrencyCodeType">
                <xsd:pattern value="[A-Z0-9]{3}" />
                <xsd:attribute name="NumberOfDecimals" type="xsd:integer" use="prohibited">
                  <xsd:annotation>
                    <xsd:documentation>Decimal position in fare amount.  Example: 2</xsd:documentation>
                  </xsd:annotation>
                </xsd:attribute>
              </xsd:restriction>
            </xsd:simpleContent>
          </xsd:complexType>
        </xsd:element>
        <xsd:element minOccurs="0" ref="Identification" />
        <xsd:element minOccurs="0" name="Channel" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Describes the channel through which the request is made. E.g. "WEB"</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="SegmentIDRef">
    <xsd:annotation>
      <xsd:documentation>ID reference used to associate this item to a segment. No comma separated lists and no ranges supported. Example: F1</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:simpleContent>
        <xsd:extension base="xsd:string">
          <xsd:attributeGroup ref="ONPoint" />
          <xsd:attributeGroup ref="OFFPoint" />
          <xsd:attributeGroup ref="RefType" />
        </xsd:extension>
      </xsd:simpleContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="SourceStdAttributes" type="SourceStdAttributes">
    <xsd:annotation>
      <xsd:documentation>Source Aggregation Information. </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="Surname" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>Traveler family (last) name.  Example: SMITH</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="Terminal" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>Airport terminal.  Example: 2B</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="Text" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>Information text or error text. Example: Free flow text.  </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="Time">
    <xsd:annotation>
      <xsd:documentation>Time in ISO 8601 format (hh:mm).  Example: 14:30</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleType>
      <xsd:restriction base="xsd:string" />
    </xsd:simpleType>
  </xsd:element>
  <xsd:element name="TravelerIDRef">
    <xsd:annotation>
      <xsd:documentation>Unique association ID reference of the traveler associated to this item. No comma separated lists and no ranges allowed.        Example: T1</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:simpleContent>
        <xsd:extension base="xsd:string">
          <xsd:attributeGroup ref="RefType" />
        </xsd:extension>
      </xsd:simpleContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="ValidatingCarrier">
    <xsd:annotation>
      <xsd:documentation>The 2-character airline code of the carrier validating this Ticket/Document.</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleType>
      <xsd:restriction base="xsd:string">
        <xsd:length value="2" />
      </xsd:restriction>
    </xsd:simpleType>
  </xsd:element>
  <xsd:element name="SeatAvailabilityRQ">
    <xsd:annotation>
      <xsd:documentation>Seat availability request root element</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" ref="SaleInfo" />
        <xsd:element minOccurs="0" ref="RecordLocator" />
        <xsd:choice>
          <xsd:sequence minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>Deprecated as it only supported single request.  Keeping got backward compatibility</xsd:documentation>
            </xsd:annotation>
            <xsd:element ref="AirlineCode" />
            <xsd:element ref="FlightNumber" />
            <xsd:element minOccurs="0" name="ClassOfService">
              <xsd:annotation>
                <xsd:documentation>Class of service.  Example: B</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
            <xsd:element minOccurs="0" ref="Cabin" />
            <xsd:element minOccurs="0" ref="NumberOfStops" />
            <xsd:element minOccurs="0" name="StopInfo">
              <xsd:annotation>
                <xsd:documentation>Ground and Flight information for the intermediate stop(s) of this flight.</xsd:documentation>
              </xsd:annotation>
              <xsd:complexType>
                <xsd:sequence>
                  <xsd:element maxOccurs="unbounded" name="Stop">
                    <xsd:annotation>
                      <xsd:documentation>Each Stop element represents information about a single intermediate stop point on the way from origin to the destination.</xsd:documentation>
                    </xsd:annotation>
                    <xsd:complexType>
                      <xsd:sequence>
                        <xsd:element name="ArrivingInfo">
                          <xsd:annotation>
                            <xsd:documentation>This section describes the inbound flight information into this intermediate point.</xsd:documentation>
                          </xsd:annotation>
                          <xsd:complexType>
                            <xsd:sequence>
                              <xsd:element name="StopAirportCode">
                                <xsd:annotation>
                                  <xsd:documentation>AirportCode of this stop.
Example: ORD</xsd:documentation>
                                </xsd:annotation>
                                <xsd:simpleType>
                                  <xsd:restriction base="xsd:string">
                                    <xsd:length value="3" />
                                  </xsd:restriction>
                                </xsd:simpleType>
                              </xsd:element>
                              <xsd:element name="Date" type="Date">
                                <xsd:annotation>
                                  <xsd:documentation>Date in ISO 8601 format (yyyy-mm-dd).  Example: 2001-12-25</xsd:documentation>
                                </xsd:annotation>
                              </xsd:element>
                              <xsd:element minOccurs="0" name="Time" type="Time" />
                              <xsd:element minOccurs="0" ref="Terminal" />
                            </xsd:sequence>
                          </xsd:complexType>
                        </xsd:element>
                        <xsd:element name="DepartingInfo">
                          <xsd:annotation>
                            <xsd:documentation>This section describes the outbound flight from this intermediate point onward.</xsd:documentation>
                          </xsd:annotation>
                          <xsd:complexType>
                            <xsd:sequence>
                              <xsd:element name="DestinationAirportCode">
                                <xsd:annotation>
                                  <xsd:documentation>Airport Code of the next destination airport.
Example: CDG</xsd:documentation>
                                </xsd:annotation>
                                <xsd:simpleType>
                                  <xsd:restriction base="xsd:string">
                                    <xsd:length value="3" />
                                  </xsd:restriction>
                                </xsd:simpleType>
                              </xsd:element>
                              <xsd:element name="Date" type="Date">
                                <xsd:annotation>
                                  <xsd:documentation>Date in ISO 8601 format (yyyy-mm-dd).  Example: 2001-12-25</xsd:documentation>
                                </xsd:annotation>
                              </xsd:element>
                              <xsd:element minOccurs="0" name="Time" type="Time" />
                              <xsd:element minOccurs="0" ref="Terminal" />
                              <xsd:element minOccurs="0" ref="Meals" />
                              <xsd:element minOccurs="0" name="FlightDuration" type="TimeDurationHoursMinutes">
                                <xsd:annotation>
                                  <xsd:documentation>Flying time from this stop city to destination.  
Example: 12:30</xsd:documentation>
                                </xsd:annotation>
                              </xsd:element>
                            </xsd:sequence>
                          </xsd:complexType>
                        </xsd:element>
                        <xsd:element minOccurs="0" name="NewEquipment">
                          <xsd:annotation>
                            <xsd:documentation>Equipment information for onward flight in case of an equipment change at this stop (Change of Gauge).  This will only be present if ChangeOfGauge attribute is set to "Y".</xsd:documentation>
                          </xsd:annotation>
                          <xsd:complexType>
                            <xsd:sequence>
                              <xsd:element ref="Code">
                                <xsd:annotation>
                                  <xsd:documentation>Equipment Code</xsd:documentation>
                                </xsd:annotation>
                              </xsd:element>
                              <xsd:element ref="Name" />
                            </xsd:sequence>
                          </xsd:complexType>
                        </xsd:element>
                        <xsd:element minOccurs="0" name="GroundTime" type="TimeDurationHoursMinutes">
                          <xsd:annotation>
                            <xsd:documentation>The ground time between arrival and departure in a 'Stop' or 'ChangeOfGauge' airport.
Example: 1:30</xsd:documentation>
                          </xsd:annotation>
                        </xsd:element>
                      </xsd:sequence>
                      <xsd:attribute name="ChangeOfGauge" use="optional">
                        <xsd:annotation>
                          <xsd:documentation>ChangeOfGauge indicator. 
If set to "Y" there has to also be a "NewEquipment" node.

Example: Y = Yes, N = No (default)</xsd:documentation>
                        </xsd:annotation>
                        <xsd:simpleType>
                          <xsd:restriction base="xsd:string" />
                        </xsd:simpleType>
                      </xsd:attribute>
                    </xsd:complexType>
                  </xsd:element>
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
            <xsd:element minOccurs="0" name="FareBasisCode">
              <xsd:annotation>
                <xsd:documentation>Fare basis code and/or FareBrand (PriceClass) - see attribute.

Example: 
Y26CH</xsd:documentation>
              </xsd:annotation>
              <xsd:complexType>
                <xsd:simpleContent>
                  <xsd:extension base="xsd:string">
                    <xsd:attribute name="PriceClass">
                      <xsd:annotation>
                        <xsd:documentation>Name of PriceClass/Branded Fare.
Example: SUPERSAVER</xsd:documentation>
                      </xsd:annotation>
                    </xsd:attribute>
                  </xsd:extension>
                </xsd:simpleContent>
              </xsd:complexType>
            </xsd:element>
            <xsd:element ref="DepartureDate" />
            <xsd:element minOccurs="0" ref="DepartureTime" />
            <xsd:element ref="DepartureCityCode" />
            <xsd:element ref="ArrivalCityCode" />
            <xsd:element minOccurs="0" ref="NumberInParty" />
          </xsd:sequence>
          <xsd:element name="SeatMapRequest">
            <xsd:annotation>
              <xsd:documentation>Allows for multiple seatmap requests</xsd:documentation>
            </xsd:annotation>
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element maxOccurs="unbounded" ref="Flight" />
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
        <xsd:element minOccurs="0" maxOccurs="unbounded" ref="TravelerName" />
        <xsd:element maxOccurs="unbounded" name="TravelerIDs">
          <xsd:annotation>
            <xsd:documentation>If no PNR exists (shopping), this provides traveler types as well as FQTV information for each traveler.</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:sequence>
              <xsd:choice minOccurs="0">
                <xsd:element ref="TravelerIDRef">
                  <xsd:annotation>
                    <xsd:documentation>Reference to an existing Traveler element in the PNRViewRS or an arbitrary association value..

Example: 1</xsd:documentation>
                  </xsd:annotation>
                </xsd:element>
                <xsd:element ref="TravelerReferences">
                  <xsd:annotation>
                    <xsd:documentation>Traveler name details</xsd:documentation>
                  </xsd:annotation>
                </xsd:element>
              </xsd:choice>
              <xsd:element minOccurs="0" maxOccurs="unbounded" name="FQTVInfo">
                <xsd:complexType>
                  <xsd:sequence>
                    <xsd:element name="FFNumber" type="xsd:string">
                      <xsd:annotation>
                        <xsd:documentation>Frequent flyer number.  Example: 0956301007</xsd:documentation>
                      </xsd:annotation>
                    </xsd:element>
                    <xsd:element name="FFCompanyCode" type="xsd:string">
                      <xsd:annotation>
                        <xsd:documentation>Frequent flyer company code.  Example: AF</xsd:documentation>
                      </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" name="FFStatus" type="xsd:string">
                      <xsd:annotation>
                        <xsd:documentation>Frequent flyer status.</xsd:documentation>
                      </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" name="AirlineUniqueID" type="xsd:string">
                      <xsd:annotation>
                        <xsd:documentation>Airline Customer ID (different from FFN) Example: QF12345</xsd:documentation>
                      </xsd:annotation>
                    </xsd:element>
                  </xsd:sequence>
                </xsd:complexType>
              </xsd:element>
              <xsd:element minOccurs="0" maxOccurs="unbounded" name="LoyaltyProgramRef">
                <xsd:annotation>
                  <xsd:documentation>Loyalty Program data</xsd:documentation>
                </xsd:annotation>
                <xsd:complexType>
                  <xsd:sequence>
                    <xsd:element name="LoyaltyMemberID">
                      <xsd:annotation>
                        <xsd:documentation>Membership number </xsd:documentation>
                      </xsd:annotation>
                    </xsd:element>
                    <xsd:element name="Name">
                      <xsd:annotation>
                        <xsd:documentation>Individual Program name</xsd:documentation>
                      </xsd:annotation>
                    </xsd:element>
                    <xsd:element ref="AirlineCode">
                      <xsd:annotation>
                        <xsd:documentation>Airline code of the airline offering this Loyaty Program</xsd:documentation>
                      </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" name="ProgramStatus">
                      <xsd:annotation>
                        <xsd:documentation>Traveler Status related to Program
Example: VP, DIR</xsd:documentation>
                      </xsd:annotation>
                    </xsd:element>
                  </xsd:sequence>
                  <xsd:attribute name="ProgramGroup">
                    <xsd:annotation>
                      <xsd:documentation>Group association within program</xsd:documentation>
                    </xsd:annotation>
                  </xsd:attribute>
                </xsd:complexType>
              </xsd:element>
              <xsd:element minOccurs="0" maxOccurs="unbounded" name="FreqGuestNumber">
                <xsd:annotation>
                  <xsd:documentation>Frequent Guest Card and Status information</xsd:documentation>
                </xsd:annotation>
                <xsd:complexType>
                  <xsd:sequence>
                    <xsd:element ref="CompanyCode" />
                    <xsd:element ref="IDNumber">
                      <xsd:annotation>
                        <xsd:documentation>Frequent Renter or Guest ID number.  Example: 0956301007</xsd:documentation>
                      </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" ref="ProgramName">
                      <xsd:annotation>
                        <xsd:documentation>Program name.  

Example: 
Miles and More (air)
Hilton HHonors (hotel)
Emerald Club (car)</xsd:documentation>
                      </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" name="Association">
                      <xsd:annotation>
                        <xsd:documentation>Associated airline frequent flyer program.  This is the frequent flyer program a traveler assigns in order to earn additional miles/points from hotel and/or car companies</xsd:documentation>
                      </xsd:annotation>
                      <xsd:complexType>
                        <xsd:sequence>
                          <xsd:element ref="AirlineCode">
                            <xsd:annotation>
                              <xsd:documentation>Issuing Airline Code.  Example: LH</xsd:documentation>
                            </xsd:annotation>
                          </xsd:element>
                          <xsd:element ref="IDNumber">
                            <xsd:annotation>
                              <xsd:documentation>Frequent flyer ID number.  Example: 0956301007</xsd:documentation>
                            </xsd:annotation>
                          </xsd:element>
                        </xsd:sequence>
                      </xsd:complexType>
                    </xsd:element>
                  </xsd:sequence>
                  <xsd:attribute name="Type">
                    <xsd:annotation>
                      <xsd:documentation>Identified association to one of the following groups:

C = CAR
H = HOTEL </xsd:documentation>
                    </xsd:annotation>
                  </xsd:attribute>
                </xsd:complexType>
              </xsd:element>
              <xsd:element minOccurs="0" maxOccurs="unbounded" name="OtherMemberships">
                <xsd:annotation>
                  <xsd:documentation>Discount Cards such as AAA, AARP, etc.</xsd:documentation>
                </xsd:annotation>
                <xsd:complexType>
                  <xsd:sequence>
                    <xsd:element minOccurs="0" ref="AssociationCode" />
                    <xsd:element ref="IDNumber">
                      <xsd:annotation>
                        <xsd:documentation>Membership ID number.  Example: 0956301007</xsd:documentation>
                      </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" ref="ProgramName">
                      <xsd:annotation>
                        <xsd:documentation>Program name.  

Example: 
AARP Membership
AAA Membership</xsd:documentation>
                      </xsd:annotation>
                    </xsd:element>
                  </xsd:sequence>
                </xsd:complexType>
              </xsd:element>
              <xsd:element minOccurs="0" ref="ProfileIndex" />
              <xsd:choice minOccurs="0">
                <xsd:element maxOccurs="unbounded" ref="CreditCard" />
                <xsd:element maxOccurs="unbounded" name="CCIssuer">
                  <xsd:complexType>
                    <xsd:sequence>
                      <xsd:element minOccurs="0" name="CCIINNumber" type="xsd:integer">
                        <xsd:annotation>
                          <xsd:documentation>Credit card IIN/BIN number.
A six-digit Issuer Identification Number (IIN),  Also Knows as BIN "Bank Identification Number". 
Example: 401123</xsd:documentation>
                        </xsd:annotation>
                      </xsd:element>
                      <xsd:element name="CCCode">
                        <xsd:annotation>
                          <xsd:documentation>Credit card (vendor) code. Example: VI</xsd:documentation>
                        </xsd:annotation>
                        <xsd:complexType>
                          <xsd:simpleContent>
                            <xsd:extension base="xsd:string">
                              <xsd:attribute name="EasyPay" type="xsd:string">
                                <xsd:annotation>
                                  <xsd:documentation>If attribute is present and "Y" this credit card is an IATA EasyPay card and subject to special rules and validation.</xsd:documentation>
                                </xsd:annotation>
                              </xsd:attribute>
                            </xsd:extension>
                          </xsd:simpleContent>
                        </xsd:complexType>
                      </xsd:element>
                    </xsd:sequence>
                  </xsd:complexType>
                </xsd:element>
              </xsd:choice>
              <xsd:element minOccurs="0" name="FareBasisCode">
                <xsd:annotation>
                  <xsd:documentation>Fare basis code and/or FareBrand (PriceClass) - see attribute.

Example: 
Y26CH</xsd:documentation>
                </xsd:annotation>
                <xsd:complexType>
                  <xsd:simpleContent>
                    <xsd:extension base="xsd:string">
                      <xsd:attribute name="PriceClass">
                        <xsd:annotation>
                          <xsd:documentation>Name of PriceClass/Branded Fare.
Example: SUPERSAVER</xsd:documentation>
                        </xsd:annotation>
                      </xsd:attribute>
                    </xsd:extension>
                  </xsd:simpleContent>
                </xsd:complexType>
              </xsd:element>
              <xsd:element minOccurs="0" maxOccurs="unbounded" name="CLID">
                <xsd:complexType>
                  <xsd:sequence>
                    <xsd:element name="CLIDCompanyCode">
                      <xsd:annotation>
                        <xsd:documentation source="description" xml:lang="en">Airline code of the program/ membership sponsoring airline.</xsd:documentation>
                      </xsd:annotation>
                      <xsd:complexType>
                        <xsd:simpleContent>
                          <xsd:extension base="xsd:string" />
                        </xsd:simpleContent>
                      </xsd:complexType>
                    </xsd:element>
                    <xsd:element name="CLIDNumber">
                      <xsd:annotation>
                        <xsd:documentation>CorporateID. Example: C900395168859</xsd:documentation>
                      </xsd:annotation>
                      <xsd:simpleType>
                        <xsd:restriction base="xsd:string">
                          <xsd:minLength value="1" />
                          <xsd:maxLength value="50" />
                        </xsd:restriction>
                      </xsd:simpleType>
                    </xsd:element>
                    <xsd:element minOccurs="0" name="CLIDStatus" type="xsd:string">
                      <xsd:annotation>
                        <xsd:documentation>CLID level for this member as provided by airline's database.</xsd:documentation>
                        <xsd:appinfo>
                          <title xmlns="">Schematron Release Notes</title>
                          <change version="2.0" change="V2-Child elements should have defined types." changeDetail="Element typed as xsd:string" xmlns="" />
                        </xsd:appinfo>
                      </xsd:annotation>
                    </xsd:element>
                  </xsd:sequence>
                </xsd:complexType>
              </xsd:element>
            </xsd:sequence>
            <xsd:attribute name="AssociationID">
              <xsd:annotation>
                <xsd:documentation>A unique traveler reference if an association to individual travelers is needed, such as for optional services. This attribute is mandatory if FLX/M is used to provide pricing or service information.  Should be the same value as the TravelerIDRef if the IDRef is defined.

Example: T1</xsd:documentation>
              </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="PaxType" type="xsd:string" use="required">
              <xsd:annotation>
                <xsd:documentation>Passenger type requested for pricing. 

Some IATA values are :
ADT= Adult
CHD = Child
INF = Infant
GOV = Government
MIL = Military
SRC = Senior citizen
STD = Student
YTH = Youth
Example: CHD</xsd:documentation>
              </xsd:annotation>
            </xsd:attribute>
          </xsd:complexType>
        </xsd:element>
        <xsd:element minOccurs="0" maxOccurs="unbounded" name="Qualifiers">
          <xsd:annotation>
            <xsd:documentation>DEPRECATED - use "PricingInfo/PrivateFares" instead

If no PNR exists (shopping), this provides other qualifying IDs, such as Corporate IDs, etc. - see enumeration list for attribute @Type</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:sequence>
              <xsd:element maxOccurs="unbounded" name="Value" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>Corresponding ID to selected Type attribute.

Example: 
567124 (Corporate ID)
AAL0 (Pcc)
MIA (Point Of Sale)</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
            </xsd:sequence>
            <xsd:attribute name="AssociationID">
              <xsd:annotation>
                <xsd:documentation>A unique traveler reference if an association to individual travelers is needed, such as for optional services.

Example: T1</xsd:documentation>
              </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="Type" use="required">
              <xsd:annotation>
                <xsd:documentation>Currently supported qualifiers:

CorporateCode
DealId
PromotionCode</xsd:documentation>
              </xsd:annotation>
              <xsd:simpleType>
                <xsd:restriction base="xsd:string">
                  <xsd:enumeration value="CorporateCode" />
                  <xsd:enumeration value="DealId" />
                  <xsd:enumeration value="PromotionCode" />
                </xsd:restriction>
              </xsd:simpleType>
            </xsd:attribute>
          </xsd:complexType>
        </xsd:element>
        <xsd:element minOccurs="0" ref="PricingInfo" />
        <xsd:element minOccurs="0" ref="JourneyControlData">
          <xsd:annotation>
            <xsd:documentation>Flights from an existing itinerary to allow journey control</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" ref="ReferenceDefinitions" />
      </xsd:sequence>
      <xsd:attributeGroup ref="PayloadStdAttributes" />
      <xsd:attribute name="version" type="xsd:string" use="optional">
        <xsd:annotation>
          <xsd:documentation>=WARNINGS=
This property will be DEPRECATED as of March 31, 2014.
It has been left in the specification for backwards compatibility only.
Instead use @Version.

Version number. Example: 1.0</xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
      <xsd:attributeGroup ref="sourceOptional" />
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="Account">
    <xsd:annotation>
      <xsd:documentation>Specifies the corporate account number to use to price private fares.  Example: 12345</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:simpleContent>
        <xsd:extension base="xsd:string" />
      </xsd:simpleContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="ActionCode">
    <xsd:annotation>
      <xsd:documentation>Action code for the sell of a segment.  This a standard defined action code used by different airlines and reservation systems.  If omitted the default value is NN.  Example: GK</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleType>
      <xsd:restriction base="xsd:string">
        <xsd:minLength value="2" />
        <xsd:maxLength value="2" />
      </xsd:restriction>
    </xsd:simpleType>
  </xsd:element>
  <xsd:element name="Age" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>Traveler age.  Age is not supported in Galileo.  Example: 01</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="Amount">
    <xsd:annotation>
      <xsd:documentation>Penalty amount in currency amount or percentage.  Example: 7500</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:simpleContent>
        <xsd:extension base="xsd:integer">
          <xsd:attribute name="Unit" use="required">
            <xsd:annotation>
              <xsd:documentation source="DESCRIPTION" xml:lang="en">Unit of measure.
Example:
A (AMOUNT)
P (PERCENTAGE)</xsd:documentation>
              <xsd:documentation source="ENCODING" xml:lang="en">Select a value from the enumerated list.
=enumerated values=
A = CURRENCY AMOUNT
P = PERCENTAGE</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
              <xsd:restriction base="xsd:string">
                <xsd:enumeration value="A" />
                <xsd:enumeration value="P" />
              </xsd:restriction>
            </xsd:simpleType>
          </xsd:attribute>
          <xsd:attribute name="MinMax" use="optional">
            <xsd:annotation>
              <xsd:documentation source="DESCRIPTION" xml:lang="en">Minimum or maximum penalty indicator.
Example:
MIN (MINIMUM PENALTY AMOUNT)
MAX MAXIMUM PENALTY AMOUNT)</xsd:documentation>
              <xsd:documentation source="ENCODING" xml:lang="en">=enumerated values=
MIN = MINIMUM PENALTY AMOUNT
MAX = MAXIMUM PENALTY AMOUNT</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
              <xsd:restriction base="xsd:string">
                <xsd:minLength value="1" />
                <xsd:maxLength value="1" />
                <xsd:enumeration value="MIN">
                  <xsd:annotation>
                    <xsd:documentation>MIN = MINIMUM PENALTY AMOUNT</xsd:documentation>
                  </xsd:annotation>
                </xsd:enumeration>
                <xsd:enumeration value="MAX">
                  <xsd:annotation>
                    <xsd:documentation>MAX = MAXIMUM PENALTY AMOUNT</xsd:documentation>
                  </xsd:annotation>
                </xsd:enumeration>
              </xsd:restriction>
            </xsd:simpleType>
          </xsd:attribute>
        </xsd:extension>
      </xsd:simpleContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="ArrivalCityCode">
    <xsd:annotation>
      <xsd:documentation>Arrival city code.  Example: JFK</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleType>
      <xsd:restriction base="xsd:string">
        <xsd:minLength value="3" />
        <xsd:maxLength value="3" />
      </xsd:restriction>
    </xsd:simpleType>
  </xsd:element>
  <xsd:element name="ArrivalCode">
    <xsd:annotation>
      <xsd:documentation>Arrival airport or city code.  Example: NYC</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleType>
      <xsd:restriction base="xsd:string">
        <xsd:minLength value="3" />
        <xsd:maxLength value="3" />
      </xsd:restriction>
    </xsd:simpleType>
  </xsd:element>
  <xsd:element name="AssociationCode" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>Code for organization or association.  Example: AARP, AAA</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="BaggageAllowance" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>Baggage allowance
PC = per piece
2PC = 2 pieces
nn = per weight (nn is the weight limit) 
Example: 2PC</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="Cabin">
    <xsd:annotation>
      <xsd:documentation>Specifies cabin preference. Valid values are: 
F = First class, 
C = Business class, 
Y = Coach class. 
W = Economy Plus class
ALL = All cabins

Example: F</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleType>
      <xsd:restriction base="xsd:string">
        <xsd:minLength value="1" />
        <xsd:maxLength value="3" />
        <xsd:enumeration value="F" />
        <xsd:enumeration value="C" />
        <xsd:enumeration value="Y" />
        <xsd:enumeration value="W" />
        <xsd:enumeration value="ALL" />
      </xsd:restriction>
    </xsd:simpleType>
  </xsd:element>
  <xsd:element name="Cancel">
    <xsd:annotation>
      <xsd:documentation>Cancel penalty group</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element maxOccurs="2" ref="Amount" />
        <xsd:element minOccurs="0" maxOccurs="unbounded" ref="Text" />
      </xsd:sequence>
      <xsd:attribute name="Application" use="optional">
        <xsd:annotation>
          <xsd:documentation source="DESCRIPTION" xml:lang="en">Penalty application type.
Examples:
AFTER_DEP (After departure)
NO_SHOW (No show)
PRIOR_DEP (Prior to departure)</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:enumeration value="PRIOR_DEP">
              <xsd:annotation>
                <xsd:documentation>PRIOR_DEP = PRIOR TO DEPARTURE</xsd:documentation>
              </xsd:annotation>
            </xsd:enumeration>
            <xsd:enumeration value="AFTER_DEP">
              <xsd:annotation>
                <xsd:documentation>AFTER_DEP = AFTER DEPARTURE</xsd:documentation>
              </xsd:annotation>
            </xsd:enumeration>
            <xsd:enumeration value="NO_SHOW">
              <xsd:annotation>
                <xsd:documentation>NO_SHOW = NO SHOW</xsd:documentation>
              </xsd:annotation>
            </xsd:enumeration>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:attribute>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="CardholderFirstName">
    <xsd:annotation>
      <xsd:documentation>Credit card holder's first name.  Example: JOHN</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleType>
      <xsd:restriction base="xsd:string">
        <xsd:minLength value="1" />
      </xsd:restriction>
    </xsd:simpleType>
  </xsd:element>
  <xsd:element name="CardholderLastName" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>Credit card holder's last name.  This is only required for Sabre.  Example: SMITH</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="Carrier">
    <xsd:annotation>
      <xsd:documentation>Flight carrier group</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element ref="AirlineCode" />
        <xsd:element ref="FlightNumber" />
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="CCExpiration">
    <xsd:annotation>
      <xsd:documentation>Credit card expiration group</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element ref="Month">
          <xsd:annotation>
            <xsd:documentation>Credit card expiration month. Example: 02
Can be returned encrypted.
Example: XX</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element ref="Year">
          <xsd:annotation>
            <xsd:documentation>Last two digits of the credit card expiration year.  Example: 06
Can be returned encrypted.
Example: XX</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="CCNumber" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>Credit card number.  Example: 4011236654652341</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="Change">
    <xsd:annotation>
      <xsd:documentation>Change penalty group</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element maxOccurs="2" ref="Amount" />
        <xsd:element minOccurs="0" maxOccurs="unbounded" ref="Text" />
      </xsd:sequence>
      <xsd:attribute name="Application" use="optional">
        <xsd:annotation>
          <xsd:documentation source="DESCRIPTION" xml:lang="en">Penalty application type.
Examples:
AFTER_DEP (After departure)
NO_SHOW (No show)
PRIOR_DEP (Prior to departure)</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:enumeration value="PRIOR_DEP">
              <xsd:annotation>
                <xsd:documentation>PRIOR_DEP = PRIOR TO DEPARTURE</xsd:documentation>
              </xsd:annotation>
            </xsd:enumeration>
            <xsd:enumeration value="AFTER_DEP">
              <xsd:annotation>
                <xsd:documentation>AFTER_DEP = AFTER DEPARTURE</xsd:documentation>
              </xsd:annotation>
            </xsd:enumeration>
            <xsd:enumeration value="NO_SHOW">
              <xsd:annotation>
                <xsd:documentation>NO_SHOW = NO SHOW</xsd:documentation>
              </xsd:annotation>
            </xsd:enumeration>
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:attribute>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="CompanyCode" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>Car Company or Hotel Chain 2-letter code.  Example: ZE</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="Contract" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>Specifies the contract code, to use to price private fares.  Example: 00001</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="Corporate">
    <xsd:annotation>
      <xsd:documentation>Corporate info group</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" ref="AirlineCode" />
        <xsd:element minOccurs="0" ref="Account">
          <xsd:annotation>
            <xsd:documentation>Specifies the corporate account number to use to price seat premiums.  Example: IBM or 675124</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" ref="Contract">
          <xsd:annotation>
            <xsd:documentation>Specifies the contract code, to use to price seat premiums.  Example: 00001</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="CreditCard">
    <xsd:annotation>
      <xsd:documentation>Credit card group</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="CCCode">
          <xsd:annotation>
            <xsd:documentation>Credit card (vendor) code. Example: VI</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:simpleContent>
              <xsd:extension base="xsd:string">
                <xsd:attribute name="EasyPay" type="xsd:string">
                  <xsd:annotation>
                    <xsd:documentation>If attribute is present and "Y" this credit card is an IATA EasyPay card and subject to special rules and validation.</xsd:documentation>
                  </xsd:annotation>
                </xsd:attribute>
              </xsd:extension>
            </xsd:simpleContent>
          </xsd:complexType>
        </xsd:element>
        <xsd:element ref="CCNumber">
          <xsd:annotation>
            <xsd:documentation>Credit card number.  Example: 4011236654652341

Can be returned encrypted.
Example: XXXXXXXXXXXX2341</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element ref="CCExpiration" />
        <xsd:sequence minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>Credit card holder's name</xsd:documentation>
          </xsd:annotation>
          <xsd:element minOccurs="0" ref="CardholderFirstName" />
          <xsd:element ref="CardholderLastName" />
        </xsd:sequence>
        <xsd:element minOccurs="0" name="CCAddressGroup">
          <xsd:complexType>
            <xsd:sequence>
              <xsd:element maxOccurs="2" name="Address" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>Street or PO Box address.  Example: 1234 Main Street</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element name="City" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>City name.  Example: NY</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element name="PostalCode" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>Postal code or zip code.  Example: 12345</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" name="StateCode" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>State code.  Example: NY</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element name="CountryCode" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>Country code.  Example: US</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" name="StreetNumber" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation source="DESCRIPTION" xml:lang="en">Street number (if not included in Address lines.)
Example: 100</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
            </xsd:sequence>
          </xsd:complexType>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="DepartureCityCode">
    <xsd:annotation>
      <xsd:documentation>Departure city code.  Example: MIA</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleType>
      <xsd:restriction base="xsd:string">
        <xsd:minLength value="3" />
        <xsd:maxLength value="3" />
      </xsd:restriction>
    </xsd:simpleType>
  </xsd:element>
  <xsd:element name="DepartureCode">
    <xsd:annotation>
      <xsd:documentation>Departure airport or city code.  Example: MIA</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleType>
      <xsd:restriction base="xsd:string">
        <xsd:minLength value="3" />
        <xsd:maxLength value="3" />
      </xsd:restriction>
    </xsd:simpleType>
  </xsd:element>
  <xsd:element name="DepartureDate" type="xsd:date">
    <xsd:annotation>
      <xsd:documentation>Date in ISO 8601 format (yyyy-mm-dd).  Example: 2002-02-22</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="DepartureTime">
    <xsd:annotation>
      <xsd:documentation>Time in ISO 8601 format (hh:mm).  Example: 14:00</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleType>
      <xsd:restriction base="xsd:string">
        <xsd:pattern value="([0-1][0-9]|2[0-4]):[0-5][0-9]">
          <xsd:annotation>
            <xsd:documentation />
          </xsd:annotation>
        </xsd:pattern>
      </xsd:restriction>
    </xsd:simpleType>
  </xsd:element>
  <xsd:element name="Description" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>Tax description.  Example: US international transportation</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="Designator">
    <xsd:annotation>
      <xsd:documentation>Tax designator.  Example: US</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleType>
      <xsd:restriction base="xsd:string" />
    </xsd:simpleType>
  </xsd:element>
  <xsd:element name="ElectronicTicketing">
    <xsd:annotation>
      <xsd:documentation>Electronic ticketing indicator.  Values are:
Y = eticket can be issued
N = no eticket possible
Example: Y</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleType>
      <xsd:restriction base="xsd:string">
        <xsd:minLength value="1" />
        <xsd:maxLength value="1" />
        <xsd:enumeration value="Y" />
        <xsd:enumeration value="N" />
      </xsd:restriction>
    </xsd:simpleType>
  </xsd:element>
  <xsd:element name="Email" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>Traveler email address.  Example: abc@test.com</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="EmailAddress">
    <xsd:annotation>
      <xsd:documentation>Email address group</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element ref="Email" />
      </xsd:sequence>
      <xsd:attribute name="Type" use="optional">
        <xsd:annotation>
          <xsd:documentation>Email type.  Values are:       A=Agency
B = BUSINESS
H = HOME
E = EMERGENCY
O = OTHER 

Example: H</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:enumeration value="B" />
            <xsd:enumeration value="H" />
            <xsd:enumeration value="E" />
            <xsd:enumeration value="O" />
            <xsd:enumeration value="A" />
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:attribute>
      <xsd:attribute name="OperationalContact" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>Allowed value "Y". If present this email address is designated as the operational contact</xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="ExemptedTaxes">
    <xsd:annotation>
      <xsd:documentation>Taxes group</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" maxOccurs="unbounded" ref="Tax" />
      </xsd:sequence>
      <xsd:attribute name="Amount" type="xsd:integer" use="required">
        <xsd:annotation>
          <xsd:documentation>Total taxes amount.  Example: 50000</xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="Failure">
    <xsd:annotation>
      <xsd:documentation>Failure to confirm penalty group</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" ref="Amount" />
        <xsd:element minOccurs="0" maxOccurs="unbounded" ref="Text" />
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="FareComponent">
    <xsd:annotation>
      <xsd:documentation>Price break-down per fare component. Not supported by all GDS/PricingEngines (1A=N; 1W=Y; 1V=Y; 1P=N; ITA=Y, SITA=N).  </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" ref="CurrencyCode" />
        <xsd:element name="BaseFare">
          <xsd:annotation>
            <xsd:documentation>Base fare for this fare component</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:sequence>
              <xsd:element minOccurs="0" name="Surcharges">
                <xsd:annotation>
                  <xsd:documentation>Surcharges break down information.</xsd:documentation>
                </xsd:annotation>
                <xsd:complexType>
                  <xsd:sequence>
                    <xsd:element maxOccurs="unbounded" name="Surcharge">
                      <xsd:annotation>
                        <xsd:documentation>Individual Surcharge information.</xsd:documentation>
                      </xsd:annotation>
                      <xsd:complexType>
                        <xsd:sequence>
                          <xsd:element name="Designator">
                            <xsd:annotation>
                              <xsd:documentation>Surcharge designator.</xsd:documentation>
                            </xsd:annotation>
                            <xsd:simpleType>
                              <xsd:restriction base="xsd:string">
                                <xsd:minLength value="1" />
                              </xsd:restriction>
                            </xsd:simpleType>
                          </xsd:element>
                          <xsd:element minOccurs="0" name="Description">
                            <xsd:annotation>
                              <xsd:documentation>Surcharge descriptions as free form text.</xsd:documentation>
                            </xsd:annotation>
                            <xsd:simpleType>
                              <xsd:restriction base="xsd:string">
                                <xsd:minLength value="1" />
                              </xsd:restriction>
                            </xsd:simpleType>
                          </xsd:element>
                          <xsd:element minOccurs="0" ref="FiledCurrencyCode">
                            <xsd:annotation>
                              <xsd:documentation>Currency for this FareComponent may not be the same as POS Currency Code.  Example: HKD</xsd:documentation>
                            </xsd:annotation>
                          </xsd:element>
                          <xsd:element minOccurs="0" ref="FiledAmount">
                            <xsd:annotation>
                              <xsd:documentation>Fare Amount as filed in the currency defined in FiledCurrencyCode</xsd:documentation>
                            </xsd:annotation>
                          </xsd:element>
                        </xsd:sequence>
                        <xsd:attribute name="Amount" type="xsd:integer" use="required">
                          <xsd:annotation>
                            <xsd:documentation>Individual surcharge amount. Example: 270</xsd:documentation>
                          </xsd:annotation>
                        </xsd:attribute>
                        <xsd:attribute name="Segment" type="xsd:integer" use="optional">
                          <xsd:annotation>
                            <xsd:documentation>Segment number to which the surcharge applies. Example: 1</xsd:documentation>
                          </xsd:annotation>
                        </xsd:attribute>
                      </xsd:complexType>
                    </xsd:element>
                  </xsd:sequence>
                  <xsd:attribute name="Amount" type="xsd:integer">
                    <xsd:annotation>
                      <xsd:documentation>Total surcharges amount.  Example: 2000</xsd:documentation>
                    </xsd:annotation>
                  </xsd:attribute>
                </xsd:complexType>
              </xsd:element>
            </xsd:sequence>
            <xsd:attribute name="Amount" type="xsd:integer" use="required">
              <xsd:annotation>
                <xsd:documentation>Total component fare amount that includes surcharges (if any).  Example: 7500</xsd:documentation>
              </xsd:annotation>
            </xsd:attribute>
          </xsd:complexType>
        </xsd:element>
        <xsd:element minOccurs="0" maxOccurs="unbounded" name="Discount">
          <xsd:annotation>
            <xsd:documentation>The discount granted. Example: 20</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:simpleContent>
              <xsd:extension base="xsd:integer">
                <xsd:attribute name="Type">
                  <xsd:annotation>
                    <xsd:documentation>The type of discount. Values are P (for percentage) or A (for amount). Example: P</xsd:documentation>
                  </xsd:annotation>
                  <xsd:simpleType>
                    <xsd:restriction base="xsd:string">
                      <xsd:enumeration value="A" />
                      <xsd:enumeration value="P" />
                    </xsd:restriction>
                  </xsd:simpleType>
                </xsd:attribute>
                <xsd:attribute name="CodeID">
                  <xsd:annotation>
                    <xsd:documentation>The PromoCode applicable to this discount.

Example:  BC10</xsd:documentation>
                  </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="Reason" type="xsd:string">
                  <xsd:annotation>
                    <xsd:documentation>Reason for discount to be applied</xsd:documentation>
                  </xsd:annotation>
                </xsd:attribute>
              </xsd:extension>
            </xsd:simpleContent>
          </xsd:complexType>
        </xsd:element>
        <xsd:element minOccurs="0" maxOccurs="unbounded" name="Markup">
          <xsd:annotation>
            <xsd:documentation>The markup applied. Example: 20</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:simpleContent>
              <xsd:extension base="xsd:integer">
                <xsd:attribute name="Type">
                  <xsd:annotation>
                    <xsd:documentation>The type of discount. Values are P (for percentage) or A (for amount). Example: P</xsd:documentation>
                  </xsd:annotation>
                  <xsd:simpleType>
                    <xsd:restriction base="xsd:string">
                      <xsd:enumeration value="A" />
                      <xsd:enumeration value="P" />
                    </xsd:restriction>
                  </xsd:simpleType>
                </xsd:attribute>
                <xsd:attribute name="CodeID">
                  <xsd:annotation>
                    <xsd:documentation>The PromoCode applicable to this discount.

Example:  BC10</xsd:documentation>
                  </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="Reason" type="xsd:string">
                  <xsd:annotation>
                    <xsd:documentation>Reason for markup to be applied</xsd:documentation>
                  </xsd:annotation>
                </xsd:attribute>
              </xsd:extension>
            </xsd:simpleContent>
          </xsd:complexType>
        </xsd:element>
        <xsd:element minOccurs="0" ref="Taxes" />
        <xsd:element minOccurs="0" ref="ExemptedTaxes" />
      </xsd:sequence>
      <xsd:attribute name="Total" type="xsd:integer" use="optional">
        <xsd:annotation>
          <xsd:documentation>Total amount for this fare component.  Total = base fare amount + taxes amount.  Example: 15000</xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="Fare" type="xsd:integer" use="optional">
        <xsd:annotation>
          <xsd:documentation source="DESCRIPTION" xml:lang="en">Base fare amount excluding taxes and surcharges.</xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="FareGroup">
    <xsd:annotation>
      <xsd:documentation>Fare group containing all information regarding the air fares.  It includes the type of fare, the passenger type and number in party as well as tax information and restrictions, if any.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" maxOccurs="unbounded" name="SegmentElementNumber">
          <xsd:annotation>
            <xsd:documentation>Segment element number associated to this item.  Example: 1</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:simpleContent>
              <xsd:extension base="xsd:integer">
                <xsd:attributeGroup ref="sourceOptional" />
                <xsd:attributeGroup ref="ONPoint" />
                <xsd:attributeGroup ref="OFFPoint" />
              </xsd:extension>
            </xsd:simpleContent>
          </xsd:complexType>
        </xsd:element>
        <xsd:element maxOccurs="unbounded" ref="TravelerGroup" />
        <xsd:element ref="CurrencyCode" />
        <xsd:element ref="ValidatingCarrier" />
      </xsd:sequence>
      <xsd:attribute name="FareType" use="required">
        <xsd:annotation>
          <xsd:documentation>Type of fare being returned.   Please see Farelogix CodeSet documentation for values
Example: NEGO</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:minLength value="4" />
            <xsd:maxLength value="4" />
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:attribute>
      <xsd:attribute name="NetFare" type="xsd:string" use="optional">
        <xsd:annotation>
          <xsd:documentation>Allowed value = "Y"

Identifies Cat35 C-Type net fare</xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="FareFormat">
        <xsd:annotation>
          <xsd:documentation>Fare categories returned.  

Values are:
LCCB = One-directionally priced fares
LCCI = Itinerary/Journey priced fares

Example: LCCB</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:minLength value="4" />
            <xsd:maxLength value="4" />
            <xsd:enumeration value="LCCB" />
            <xsd:enumeration value="LCCI" />
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:attribute>
      <xsd:attribute name="TravelerCount" use="required">
        <xsd:annotation>
          <xsd:documentation>Total number of passengers of all types for the entire itinerary.  Example: 4</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:integer">
            <xsd:minInclusive value="0" />
            <xsd:maxInclusive value="18" />
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:attribute>
      <xsd:attribute name="TotalPrice" type="xsd:integer" use="required">
        <xsd:annotation>
          <xsd:documentation>Total price for the entire itinerary for all passengers of all types.  It is the sum of all TypeTotalPrice.  Example: 320000</xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
      <xsd:attributeGroup ref="sourceOptional" />
      <xsd:attribute name="HistoricPricingDate" type="xsd:date" use="optional">
        <xsd:annotation>
          <xsd:documentation>Specifies the historic date used to price this FareGroup. Date in ISO 8601 format (yyyy-mm-dd).  Example: 2001-12-25</xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="FareNumber" type="xsd:string" use="optional">
        <xsd:annotation>
          <xsd:documentation>Unique (for this response) identifier of fare priced. </xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="FareInfo">
    <xsd:annotation>
      <xsd:documentation>A FareInfo element contains data related to a fare component used during pricing. Since a fare may consist of more than one fare component, a FareGroup may have more than one FareInfo element.
This data can be used for FareRulesRQ as a follow up request.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element ref="DepartureDate" />
        <xsd:element ref="DepartureCode" />
        <xsd:element minOccurs="0" name="DepartureTime" type="Time">
          <xsd:annotation>
            <xsd:documentation source="DESCRIPTION" xml:lang="en">Departure time.
Example: 14:30</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element ref="ArrivalCode" />
        <xsd:element minOccurs="0" name="ArrivalDate" type="xsd:date">
          <xsd:annotation>
            <xsd:documentation>Fare info arrival date.
Example: 2002-12-25</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="ArrivalTime" type="Time">
          <xsd:annotation>
            <xsd:documentation source="DESCRIPTION" xml:lang="en">Arrival time.
Example: 19:30</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element maxOccurs="unbounded" name="RelatedSegment">
          <xsd:annotation>
            <xsd:documentation>A FareInfo element refers to one or more Flight elements in the request. It has one RelatedSegment element for each Flight element it refers to.</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:sequence>
              <xsd:element name="SegmentIDRef">
                <xsd:annotation>
                  <xsd:documentation>The value of the SegmentIDRef element is the relative position of the corresponding FlightPriceRQ/OriginDestination/Flight element among all Flight elements of the request in document order. Example:
A value of 3 would refer to the third Flight element in the request (irrespective of grouping into OriginDestinations).</xsd:documentation>
                </xsd:annotation>
                <xsd:complexType>
                  <xsd:simpleContent>
                    <xsd:extension base="xsd:string">
                      <xsd:attribute name="FlightRefKey">
                        <xsd:annotation>
                          <xsd:documentation>Unique ID to bind request and response, allows the UI to associate RQ and RS with an arbitrary values. If present in the RQ it must be returned in the FlightPriceRS</xsd:documentation>
                        </xsd:annotation>
                      </xsd:attribute>
                    </xsd:extension>
                  </xsd:simpleContent>
                </xsd:complexType>
              </xsd:element>
              <xsd:element minOccurs="0" ref="AirlineCode" />
              <xsd:element minOccurs="0" ref="DepartureCode">
                <xsd:annotation>
                  <xsd:documentation>Departure city/airport.  Example: MIA</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" ref="DepartureDate">
                <xsd:annotation>
                  <xsd:documentation>Departure date. Example: 2002-12-25</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" name="DepartureTime" type="Time">
                <xsd:annotation>
                  <xsd:documentation source="DESCRIPTION" xml:lang="en">Departure time.
Example: 14:30</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" ref="ArrivalCode">
                <xsd:annotation>
                  <xsd:documentation>Arrival city/airport. Example: DFW</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" name="ArrivalDate" type="xsd:date">
                <xsd:annotation>
                  <xsd:documentation source="DESCRIPTION" xml:lang="en">Arrival date.
Example: 2002-12-25</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" name="ArrivalTime" type="Time">
                <xsd:annotation>
                  <xsd:documentation source="DESCRIPTION" xml:lang="en">Arrival time.
Example: 19:30</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" ref="FlightNumber" />
              <xsd:element minOccurs="0" ref="Cabin" />
              <xsd:element minOccurs="0" ref="ClassOfService" />
              <xsd:element minOccurs="0" ref="Meals" />
              <xsd:element minOccurs="0" ref="BaggageAllowance" />
              <xsd:element minOccurs="0" ref="NVB" />
              <xsd:element minOccurs="0" ref="NVA" />
              <xsd:element minOccurs="0" name="StopOverIndicator">
                <xsd:annotation>
                  <xsd:documentation>Indicates if stopover is permitted w/ the fare. Uses industry values to reflect the status.  Values are X, O

When X is the value - the departure city of the segment was considered a transfer point at time of fare calculation. 
If the passenger wants to stop in that city, the fare must be recalculated; the fare may or may not permit stopovers. </xsd:documentation>
                </xsd:annotation>
                <xsd:simpleType>
                  <xsd:restriction base="xsd:string">
                    <xsd:length value="1" />
                    <xsd:enumeration value="X" />
                    <xsd:enumeration value="O" />
                  </xsd:restriction>
                </xsd:simpleType>
              </xsd:element>
              <xsd:element minOccurs="0" ref="ElectronicTicketing" />
            </xsd:sequence>
            <xsd:attribute name="MarriedSegment" use="optional">
              <xsd:annotation>
                <xsd:documentation>Indicates married segment.  Values are: 
B= beginning of married segments group
I = intermediate flight segments of married seg
E = end of married segments group
S - Standalone
Example: B
</xsd:documentation>
              </xsd:annotation>
              <xsd:simpleType>
                <xsd:restriction base="xsd:string">
                  <xsd:minLength value="1" />
                  <xsd:maxLength value="1" />
                  <xsd:enumeration value="B" />
                  <xsd:enumeration value="I" />
                  <xsd:enumeration value="E" />
                  <xsd:enumeration value="S">
                    <xsd:annotation>
                      <xsd:documentation>STANDALONE</xsd:documentation>
                    </xsd:annotation>
                  </xsd:enumeration>
                </xsd:restriction>
              </xsd:simpleType>
            </xsd:attribute>
          </xsd:complexType>
        </xsd:element>
        <xsd:element name="FareBasisCode">
          <xsd:annotation>
            <xsd:documentation>Fare basis code.  
See attribute for branded fare name/price class name

Example: Y26CH</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" ref="FareRefKey" />
        <xsd:element minOccurs="0" name="TicketDesignator">
          <xsd:annotation>
            <xsd:documentation>Ticket designator code. Example: ATM1</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element ref="AirlineCode" />
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="FareRules">
    <xsd:annotation>
      <xsd:documentation>Fare rules information group</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element maxOccurs="unbounded" ref="FareInfo" />
        <xsd:element minOccurs="0" ref="Penalty" />
        <xsd:element minOccurs="0" ref="TicketByDate" />
        <xsd:element minOccurs="0" maxOccurs="unbounded" ref="Remark" />
        <xsd:element minOccurs="0" maxOccurs="unbounded" name="Endorsement">
          <xsd:annotation>
            <xsd:documentation>Fare endorsements.

Example: NONREF</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:simpleContent>
              <xsd:extension base="xsd:string">
                <xsd:attribute name="Type" use="required">
                  <xsd:annotation>
                    <xsd:documentation>Identifies the creation mode of this line. Values are:
A - automatically by pricing system
</xsd:documentation>
                  </xsd:annotation>
                  <xsd:simpleType>
                    <xsd:restriction base="xsd:string">
                      <xsd:length value="1" />
                      <xsd:enumeration value="A" />
                    </xsd:restriction>
                  </xsd:simpleType>
                </xsd:attribute>
              </xsd:extension>
            </xsd:simpleContent>
          </xsd:complexType>
        </xsd:element>
        <xsd:element minOccurs="0" name="FareCalculation">
          <xsd:annotation>
            <xsd:documentation>FareCalculation Line</xsd:documentation>
          </xsd:annotation>
          <xsd:simpleType>
            <xsd:restriction base="xsd:string">
              <xsd:minLength value="1" />
            </xsd:restriction>
          </xsd:simpleType>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="FeeApplies">
    <xsd:annotation>
      <xsd:documentation>Fee applies group</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:attribute default="N" name="FailureToConfirm" use="optional">
        <xsd:annotation>
          <xsd:documentation>Y = Pax must confirm space
N = No confirmation required  Example: Y</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:minLength value="1" />
            <xsd:maxLength value="1" />
            <xsd:enumeration value="Y" />
            <xsd:enumeration value="N" />
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:attribute>
      <xsd:attribute default="N" name="Cancellation" use="optional">
        <xsd:annotation>
          <xsd:documentation>Y = Cancellation Fee Applies
N = No Cancel Fee  Example: Y</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:minLength value="1" />
            <xsd:maxLength value="1" />
            <xsd:enumeration value="Y" />
            <xsd:enumeration value="N" />
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:attribute>
      <xsd:attribute default="N" name="Carrier" use="optional">
        <xsd:annotation>
          <xsd:documentation>Y = Carrier Fee applies
N = No carrier fees  Example: Y</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:minLength value="1" />
            <xsd:maxLength value="1" />
            <xsd:enumeration value="Y" />
            <xsd:enumeration value="N" />
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:attribute>
      <xsd:attribute default="N" name="ReplaceTicket" use="optional">
        <xsd:annotation>
          <xsd:documentation>Y = Replacement fee applies
N = No replacement fee  Example: Y</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:minLength value="1" />
            <xsd:maxLength value="1" />
            <xsd:enumeration value="Y" />
            <xsd:enumeration value="N" />
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:attribute>
      <xsd:attribute default="N" name="ChangeItinerary" use="optional">
        <xsd:annotation>
          <xsd:documentation>Y= Change Itinerary fee applies
N = No change fee  Example: Y </xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:minLength value="1" />
            <xsd:maxLength value="1" />
            <xsd:enumeration value="Y" />
            <xsd:enumeration value="N" />
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:attribute>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="FFCompanyCode" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>Frequent flyer company code.  Example: AF</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="FFLoyaltyLevel" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>Frequent flyer loyalty level.  Example: Blue</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="FFNumber" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>Frequent flyer number.  Example: 0956301007</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="FFProgramName" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>Frequent flyer program name.  Example: Frequence Plus</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="FFSharedProgramName" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>Frequent flyer shared program name.  Example: Delta Miles</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="Flight">
    <xsd:complexType>
      <xsd:all>
        <xsd:element name="AirlineCode">
          <xsd:annotation>
            <xsd:documentation>Airline Code Example: AA</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:simpleContent>
              <xsd:extension base="xsd:string">
                <xsd:attributeGroup ref="sourceOptional" />
              </xsd:extension>
            </xsd:simpleContent>
          </xsd:complexType>
        </xsd:element>
        <xsd:element ref="FlightNumber" />
        <xsd:element minOccurs="0" name="ClassOfService" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Class of service.  Example: B</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" ref="Cabin">
          <xsd:annotation>
            <xsd:documentation>Specifies cabin preference. Valid values are : F = First class, C = Business class, Y = Coach class, W = premium economy/coach. 
Example: F</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" ref="NumberOfStops" />
        <xsd:element minOccurs="0" name="FareBasisCode">
          <xsd:annotation>
            <xsd:documentation>Fare basis code and/or FareBrand (PriceClass) - see attribute.

Example: 
Y26CH</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:simpleContent>
              <xsd:extension base="xsd:string">
                <xsd:attribute name="PriceClass" type="xsd:string">
                  <xsd:annotation>
                    <xsd:documentation>Name of PriceClass/Branded Fare.
Example: SUPERSAVER</xsd:documentation>
                  </xsd:annotation>
                </xsd:attribute>
              </xsd:extension>
            </xsd:simpleContent>
          </xsd:complexType>
        </xsd:element>
        <xsd:element ref="DepartureDate" />
        <xsd:element minOccurs="0" ref="DepartureTime" />
        <xsd:element ref="DepartureCityCode" />
        <xsd:element minOccurs="0" name="ArrivalDate" type="xsd:date" />
        <xsd:element minOccurs="0" name="ArrivalTime">
          <xsd:simpleType>
            <xsd:restriction base="xsd:string">
              <xsd:pattern value="([0-1][0-9]|2[0-4]):[0-5][0-9]" />
            </xsd:restriction>
          </xsd:simpleType>
        </xsd:element>
        <xsd:element ref="ArrivalCityCode" />
        <xsd:element minOccurs="0" ref="NumberInParty" />
        <xsd:element minOccurs="0" ref="FareGroup">
          <xsd:annotation>
            <xsd:documentation>Fare group containing all information regarding the air fares. This must be included if pricing a seat before a record locator is available on the PNR and the segment is sold. It includes the type of fare, the passenger type and number in party as well as tax information and restrictions, if any.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:all>
      <xsd:attributeGroup ref="sourceOptional" />
      <xsd:attribute name="MarriedSegment" use="optional">
        <xsd:annotation>
          <xsd:documentation>Married connection indicator.  Values:
B = Beginning of a group of married segments
E = End of a group of married segments</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:enumeration value="B" />
            <xsd:enumeration value="E" />
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:attribute>
      <xsd:attribute name="CnxxIndicator" use="optional">
        <xsd:annotation>
          <xsd:documentation>Connection indicator.  Example: Y = Yes, N = No</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:enumeration value="Y" />
            <xsd:enumeration value="N" />
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:attribute>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="FrequentTravelerGroup">
    <xsd:annotation>
      <xsd:documentation>Frequent traveler group</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" ref="ProgramInformation" />
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="IDNumber" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>Frequent flyer or guest ID number.  Example: 0956301007</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="InfantData">
    <xsd:annotation>
      <xsd:documentation>Infant traveler group</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element ref="Surname" />
        <xsd:element name="GivenName" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Infant Traveler given (first) name.  </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element ref="DateOfBirth" />
        <xsd:element minOccurs="0" ref="Gender" />
      </xsd:sequence>
      <xsd:attribute name="Type" type="xsd:string" use="optional">
        <xsd:annotation>
          <xsd:documentation>Infant PAX type. Although regular INF type will be automatically set, this optional attribute would show if present a different PTC for infants. Particularly useful for bulk contracts - JNF pax type. 
Example: JNF</xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="JCDArrival">
    <xsd:annotation>
      <xsd:documentation>Destination group</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element ref="CityCode">
          <xsd:annotation>
            <xsd:documentation>Origin or destination city code.  </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="JCDDate">
    <xsd:annotation>
      <xsd:documentation>Specifies departure date in ISO 8601 format (yyyy-mm-dd).  Example: 2001-12-25</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:simpleContent>
        <xsd:extension base="xsd:date">
          <xsd:attribute default="DEPARTURE" name="Qualifier" use="optional">
            <xsd:annotation>
              <xsd:documentation>Specifies whether the entered date represents a departure or arrival date.

Values:
"ARRIVAL" "DEPARTURE"</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
              <xsd:restriction base="xsd:string">
                <xsd:enumeration value="DEPARTURE" />
                <xsd:enumeration value="ARRIVAL" />
              </xsd:restriction>
            </xsd:simpleType>
          </xsd:attribute>
        </xsd:extension>
      </xsd:simpleContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="JCDDeparture">
    <xsd:annotation>
      <xsd:documentation>Origin departure group</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element ref="CityCode">
          <xsd:annotation>
            <xsd:documentation>Origin or destination city code.  </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="JCDFlight">
    <xsd:annotation>
      <xsd:documentation>Flight group</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element ref="JCDDeparture" />
        <xsd:element ref="JCDArrival" />
        <xsd:element ref="JCDDate" />
        <xsd:element minOccurs="0" name="JCDTime">
          <xsd:annotation>
            <xsd:documentation>Specifies departure time.  Example: 10:45</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:simpleContent>
              <xsd:extension base="xsd:string">
                <xsd:attribute default="DEPARTURE" name="Qualifier" use="optional">
                  <xsd:annotation>
                    <xsd:documentation>Specifies whether the entered date represents a departure or arrival date.

Values:
"ARRIVAL" "DEPARTURE"</xsd:documentation>
                  </xsd:annotation>
                  <xsd:simpleType>
                    <xsd:restriction base="xsd:string">
                      <xsd:enumeration value="DEPARTURE" />
                      <xsd:enumeration value="ARRIVAL" />
                    </xsd:restriction>
                  </xsd:simpleType>
                </xsd:attribute>
              </xsd:extension>
            </xsd:simpleContent>
          </xsd:complexType>
        </xsd:element>
        <xsd:element ref="Carrier" />
        <xsd:element minOccurs="0" name="OperatingCarrier">
          <xsd:annotation>
            <xsd:documentation source="DESCRIPTION" xml:lang="en">Flight operating carrier information.</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:sequence>
              <xsd:element minOccurs="0" ref="AirlineCode" />
              <xsd:element minOccurs="0" ref="FlightNumber" />
            </xsd:sequence>
          </xsd:complexType>
        </xsd:element>
        <xsd:element ref="ClassOfService" />
        <xsd:element minOccurs="0" ref="ActionCode">
          <xsd:annotation>
            <xsd:documentation>This a standard defined action code used by different airlines and reservation systems.   
Example: HK</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" ref="NumberOfStops" />
      </xsd:sequence>
      <xsd:attributeGroup ref="sourceOptional" />
      <xsd:attribute name="Type" use="optional">
        <xsd:annotation>
          <xsd:documentation>Optional flight type.  This is used to specify passive or open segments.  Values are:
P = Passive
O = Open
S = Service (passive info segment, supported on Worldspan as TVL and Amadeus as service segment).

If tyoe is set to O(Open segment) then departure date/time, arrival date/time and flight number don't have to be set.

Example: P</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:enumeration value="P" />
            <xsd:enumeration value="O" />
            <xsd:enumeration value="S" />
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:attribute>
      <xsd:attribute name="CnxxIndicator" use="optional">
        <xsd:annotation>
          <xsd:documentation>Connection indicator.  Example: Y = Yes, N = No</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:enumeration value="Y" />
            <xsd:enumeration value="N" />
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:attribute>
      <xsd:attribute name="MarriedRef" type="xsd:string" />
      <xsd:attribute name="MarriedSegment" use="optional">
        <xsd:annotation>
          <xsd:documentation>Married connection indicator.  Values:
B = Start of a group of married segments
E = End of a group of married segments</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:enumeration value="B" />
            <xsd:enumeration value="E" />
            <xsd:enumeration value="S" />
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:attribute>
      <xsd:attribute name="FlightRefKey" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>Flight Reference associating to flight on PNR</xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="OriginDestinationID" type="xsd:string" />
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="JourneyControlData">
    <xsd:annotation>
      <xsd:documentation>Flights from an existing itinerary (active PNR) to allow journey control</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element maxOccurs="unbounded" ref="JCDFlight" />
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="Meals">
    <xsd:annotation>
      <xsd:documentation>Indicates what types of meals are served.  Meal codes are IATA standard.  Values are:
B = Breakfast
K = Continental breakfast
V = Continental breakfast
L = Lunch
D = Dinner
S = Snack or brunch
O = Cold meal
H = Hot meal 
M = Meal (non-specific)
R = Refreshment
C = Alcoholic beverages complimentary
F = Food for purchase
P = Alcoholic beverages for purchase
Y = Duty free sales available
G = Light lunch
N = NO MEALS
Example: B</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleType>
      <xsd:restriction base="xsd:string">
        <xsd:enumeration value="B" />
        <xsd:enumeration value="K" />
        <xsd:enumeration value="V" />
        <xsd:enumeration value="L" />
        <xsd:enumeration value="D" />
        <xsd:enumeration value="S" />
        <xsd:enumeration value="O" />
        <xsd:enumeration value="H" />
        <xsd:enumeration value="M" />
        <xsd:enumeration value="R" />
        <xsd:enumeration value="C" />
        <xsd:enumeration value="F" />
        <xsd:enumeration value="P" />
        <xsd:enumeration value="Y" />
        <xsd:enumeration value="G" />
        <xsd:enumeration value="N" />
      </xsd:restriction>
    </xsd:simpleType>
  </xsd:element>
  <xsd:element name="Month" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>Credit card expiration month.  Example: 02</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="Name" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>Equipment name.  Example: Boeing 747 series</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="Nature" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>Tax nature.  Example: US2</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="NumberInParty" type="xsd:integer">
    <xsd:annotation>
      <xsd:documentation>Number of passengers.  Example: 2</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="NumberOfStops">
    <xsd:annotation>
      <xsd:documentation>Number of stops.  Example: 0</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleType>
      <xsd:restriction base="xsd:integer">
        <xsd:maxInclusive value="9" />
        <xsd:minInclusive value="0" />
      </xsd:restriction>
    </xsd:simpleType>
  </xsd:element>
  <xsd:element name="Office">
    <xsd:annotation>
      <xsd:documentation>Pseudo city under which private fares are stored.  Example: 18C6</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:simpleContent>
        <xsd:extension base="xsd:string">
          <xsd:attribute name="Type">
            <xsd:annotation>
              <xsd:documentation>Future use.
Identifies if Office value is a PCC or IATA agency code/ID. Default is PCC.
Example: PCC</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
              <xsd:restriction base="xsd:string">
                <xsd:enumeration value="PCC" />
                <xsd:enumeration value="IATA" />
              </xsd:restriction>
            </xsd:simpleType>
          </xsd:attribute>
        </xsd:extension>
      </xsd:simpleContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="Penalty">
    <xsd:annotation>
      <xsd:documentation>Penalty group</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" ref="TicketText" />
        <xsd:element minOccurs="0" ref="FeeApplies" />
        <xsd:element minOccurs="0" ref="CurrencyCode" />
        <xsd:element minOccurs="0" maxOccurs="3" ref="Change" />
        <xsd:element minOccurs="0" maxOccurs="3" ref="Cancel" />
        <xsd:element minOccurs="0" ref="Failure" />
        <xsd:element minOccurs="0" ref="Replace" />
      </xsd:sequence>
      <xsd:attribute name="TicketRefundable" use="optional">
        <xsd:annotation>
          <xsd:documentation>Indicates if ticket is refundable or not.  Values are: Y = Ticket is refundable
N = Ticket is not refundable  Example: Y</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:minLength value="1" />
            <xsd:maxLength value="1" />
            <xsd:enumeration value="Y" />
            <xsd:enumeration value="N" />
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:attribute>
      <xsd:attribute name="DepositRequired" use="optional">
        <xsd:annotation>
          <xsd:documentation>Indicates if deposit is refundable or not.  Values are: Y = Deposit is refundable
N = Deposit is not refundable  Example: Y</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:minLength value="1" />
            <xsd:maxLength value="1" />
            <xsd:enumeration value="Y" />
            <xsd:enumeration value="N" />
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:attribute>
      <xsd:attribute name="DepositRefundable" use="optional">
        <xsd:annotation>
          <xsd:documentation>Y = Deposit is non refundable
N = Deposit is refundable  Example: Y</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:minLength value="1" />
            <xsd:maxLength value="1" />
            <xsd:enumeration value="Y" />
            <xsd:enumeration value="N" />
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:attribute>
      <xsd:attribute name="Reusable" use="optional">
        <xsd:annotation>
          <xsd:documentation>If Y, this is a reusable fare.
Example: Y (YES)</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:minLength value="1" />
            <xsd:maxLength value="1" />
            <xsd:enumeration value="Y" />
            <xsd:enumeration value="N" />
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:attribute>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="Price">
    <xsd:annotation>
      <xsd:documentation>Price group </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="BaseFare" type="BaseFareType">
          <xsd:annotation>
            <xsd:documentation>Base fare group</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element ref="Taxes" />
        <xsd:element minOccurs="0" ref="ExemptedTaxes" />
      </xsd:sequence>
      <xsd:attribute name="Total" type="xsd:integer" use="required">
        <xsd:annotation>
          <xsd:documentation>Total Fare amount for the specified passenger type.  Total price = base fare amount + taxes amount.  Example: 300000</xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="PricingInfo">
    <xsd:annotation>
      <xsd:documentation>Fare Qualifier group</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" ref="Restrictions" />
        <xsd:element minOccurs="0" ref="ValidatingCarrier">
          <xsd:annotation>
            <xsd:documentation>Allows to specify the validating carrier for pricing. Example: DL</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="TaxExemption">
          <xsd:annotation>
            <xsd:documentation>Allows to exempt tax(es) by different criteria</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="unbounded" name="TaxCode">
                <xsd:annotation>
                  <xsd:documentation>Exemption is based on identified tax codes plus (optional) tax types within a tax code</xsd:documentation>
                </xsd:annotation>
                <xsd:complexType>
                  <xsd:sequence>
                    <xsd:element name="Designator">
                      <xsd:annotation>
                        <xsd:documentation>Identifies the Tax Code to be exempt, e.g. AY</xsd:documentation>
                      </xsd:annotation>
                      <xsd:complexType>
                        <xsd:simpleContent>
                          <xsd:extension base="xsd:string">
                            <xsd:attribute name="CollectionPoint">
                              <xsd:annotation>
                                <xsd:documentation>3-letter airport code to identify the exemption of a  ZP or XF tax for this location</xsd:documentation>
                              </xsd:annotation>
                            </xsd:attribute>
                          </xsd:extension>
                        </xsd:simpleContent>
                      </xsd:complexType>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="unbounded" name="TaxType">
                      <xsd:annotation>
                        <xsd:documentation>Identifies the tax type(s) within the tax code

Example: SE, TR</xsd:documentation>
                      </xsd:annotation>
                    </xsd:element>
                  </xsd:sequence>
                </xsd:complexType>
              </xsd:element>
              <xsd:element minOccurs="0" maxOccurs="unbounded" ref="CountryCode">
                <xsd:annotation>
                  <xsd:documentation>Exemption based on country code(s).</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" name="ProvinceCode">
                <xsd:annotation>
                  <xsd:documentation>Used in Canadian market.  Exemption is based on provinces</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" name="GovernmentBody">
                <xsd:annotation>
                  <xsd:documentation>Used in Canadian market.  Freeflow entity name must be provided for ceratin exemptions</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
            </xsd:sequence>
            <xsd:attribute name="ExemptALL">
              <xsd:annotation>
                <xsd:documentation>Exempt from all taxes

Values allowed:
N = (default)
Y = exempt of all taxes</xsd:documentation>
              </xsd:annotation>
            </xsd:attribute>
          </xsd:complexType>
        </xsd:element>
        <xsd:element minOccurs="0" name="PrivateFares">
          <xsd:annotation>
            <xsd:documentation>Qualifying IDs for negotiated services</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:sequence>
              <xsd:element maxOccurs="unbounded" ref="Office" />
              <xsd:element minOccurs="0" maxOccurs="unbounded" ref="Corporate" />
              <xsd:element minOccurs="0" maxOccurs="unbounded" ref="PromoCodes" />
              <xsd:element minOccurs="0" maxOccurs="unbounded" name="LoyaltyPrograms">
                <xsd:annotation>
                  <xsd:documentation>Loyalty Program data</xsd:documentation>
                </xsd:annotation>
                <xsd:complexType>
                  <xsd:sequence>
                    <xsd:element name="LoyaltyMemberID">
                      <xsd:annotation>
                        <xsd:documentation>Membership number </xsd:documentation>
                      </xsd:annotation>
                    </xsd:element>
                    <xsd:element name="Name">
                      <xsd:annotation>
                        <xsd:documentation>Individual Program name</xsd:documentation>
                      </xsd:annotation>
                    </xsd:element>
                    <xsd:element ref="AirlineCode">
                      <xsd:annotation>
                        <xsd:documentation>Airline code of the airline offering this Loyaty Program</xsd:documentation>
                      </xsd:annotation>
                    </xsd:element>
                  </xsd:sequence>
                </xsd:complexType>
              </xsd:element>
              <xsd:element minOccurs="0" name="Certificates">
                <xsd:annotation>
                  <xsd:documentation>Electronic Certificate information.

=notes=
1. Supports non-revenue and flightpass certificates.</xsd:documentation>
                </xsd:annotation>
                <xsd:complexType>
                  <xsd:sequence>
                    <xsd:element maxOccurs="unbounded" name="Certificate">
                      <xsd:annotation>
                        <xsd:documentation>Certificate detail.</xsd:documentation>
                      </xsd:annotation>
                      <xsd:complexType>
                        <xsd:complexContent mixed="false">
                          <xsd:extension base="CertificateType">
                            <xsd:sequence>
                              <xsd:element minOccurs="0" maxOccurs="unbounded" ref="TravelerIDRef" />
                            </xsd:sequence>
                          </xsd:extension>
                        </xsd:complexContent>
                      </xsd:complexType>
                    </xsd:element>
                  </xsd:sequence>
                </xsd:complexType>
              </xsd:element>
            </xsd:sequence>
          </xsd:complexType>
        </xsd:element>
      </xsd:sequence>
      <xsd:attribute name="Images" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>Client application must indicate if application supports full images or image ids for this request.

Possible values:
Y or N Default value if not specified is "N".

Example: Y</xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="ProfileIndex">
    <xsd:annotation>
      <xsd:documentation>Associated profile index for this traveler.

Example: 6457</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:simpleContent>
        <xsd:extension base="xsd:string">
          <xsd:attributeGroup ref="sourceOptional" />
          <xsd:attribute name="CorporateIndex">
            <xsd:annotation>
              <xsd:documentation>This is the ProfileIndex assign to the associated Corporate Profile of this traveler.

Example: 117</xsd:documentation>
            </xsd:annotation>
          </xsd:attribute>
          <xsd:attribute name="CorporateName">
            <xsd:annotation>
              <xsd:documentation>This is the Profile Name given to this corporation.

Example: IBM CORP</xsd:documentation>
            </xsd:annotation>
          </xsd:attribute>
        </xsd:extension>
      </xsd:simpleContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="ProgramInformation">
    <xsd:annotation>
      <xsd:documentation>Program information group</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element ref="FFCompanyCode" />
        <xsd:element minOccurs="0" ref="FFProgramName" />
        <xsd:element ref="FFNumber" />
        <xsd:element minOccurs="0" ref="FFSharedProgramName" />
        <xsd:element minOccurs="0" ref="FFLoyaltyLevel" />
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="ProgramName" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>Frequent flyer program name.  Example: Frequence Plus</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="PromoCodes">
    <xsd:annotation>
      <xsd:documentation>Corporate info group</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" ref="AirlineCode" />
        <xsd:element name="PromoCode">
          <xsd:annotation>
            <xsd:documentation>Code ID / Number</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="RecordLocator">
    <xsd:annotation>
      <xsd:documentation>Record locator reference of the PNR.  Example: XDFWES.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:simpleContent>
        <xsd:extension base="xsd:string">
          <xsd:attribute name="Source" type="xsd:string" use="optional">
            <xsd:annotation>
              <xsd:documentation source="DESCRIPTION" xml:lang="en">Content source. Example: BA</xsd:documentation>
            </xsd:annotation>
          </xsd:attribute>
          <xsd:attribute name="SourceRef" type="xsd:string" use="prohibited">
            <xsd:annotation>
              <xsd:documentation source="DESCRIPTION" xml:lang="en">=WARNINGS=
This element has been DEPRECATED as of September 2013.

Record Locator associated to @Source attribute.</xsd:documentation>
            </xsd:annotation>
          </xsd:attribute>
          <xsd:attribute name="AggregatorLocator" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>Indicates if the record locator specified is an Aggregator PNR record locator.  Must be used if using an aggregator record locator(e.g, Amadeus, Travelport) to identify the PNR. Example: Y</xsd:documentation>
            </xsd:annotation>
          </xsd:attribute>
        </xsd:extension>
      </xsd:simpleContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="Remark" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>Fare rules miscellaneous remarks.  Example: See fare rules</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="Replace">
    <xsd:annotation>
      <xsd:documentation>Replacement penalty group</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" ref="Amount" />
        <xsd:element minOccurs="0" maxOccurs="unbounded" ref="Text" />
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="Restrictions">
    <xsd:annotation>
      <xsd:documentation>Pricing Restriction group</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:attribute default="Y" name="Advance" use="optional">
        <xsd:annotation>
          <xsd:documentation>Y = Allow advance Purchase with fare
N = Don't Allow advance Purchase with fare
Default: Y</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:enumeration value="Y" />
            <xsd:enumeration value="N" />
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:attribute>
      <xsd:attribute default="Y" name="Penalty" use="optional">
        <xsd:annotation>
          <xsd:documentation>Y = Allow penalties with fare
N = Don't Allow penalties with fare
Default: Y</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:enumeration value="Y" />
            <xsd:enumeration value="N" />
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:attribute>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="Tax">
    <xsd:annotation>
      <xsd:documentation>Tax break down information group</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" ref="Designator" />
        <xsd:element minOccurs="0" ref="Nature" />
        <xsd:element minOccurs="0" ref="Description" />
        <xsd:element minOccurs="0" ref="CurrencyCode" />
        <xsd:element minOccurs="0" name="LocalAmount">
          <xsd:annotation>
            <xsd:documentation>Amount in local value</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" maxOccurs="unbounded" name="CollectionPoint">
          <xsd:annotation>
            <xsd:documentation>NOTE: this definition will eventually supercede the Calculation element. Use this  group instead of Calculation as Calculation will be deprecated in near future.

For XF and ZP taxes. 
Tax data break down for each collection point.  

The sum of individual amounts entered here must  be equal to the Amount entered in the Tax element.</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:sequence>
              <xsd:element ref="AirportCode" />
              <xsd:element name="AirportAmount">
                <xsd:annotation>
                  <xsd:documentation>The amount actually filed by the airport in the currency applicable to the geographical location of the airport
(same as shown in FareCalculation line)</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element ref="CurrencyCode" />
            </xsd:sequence>
            <xsd:attribute name="Amount" type="xsd:integer">
              <xsd:annotation>
                <xsd:documentation>Individual amount for collection point.  
Example: 2500</xsd:documentation>
              </xsd:annotation>
            </xsd:attribute>
          </xsd:complexType>
        </xsd:element>
      </xsd:sequence>
      <xsd:attribute name="Amount" type="xsd:integer" use="required">
        <xsd:annotation>
          <xsd:documentation>Individual tax amount.  Example: 6500</xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="Refundable" use="optional">
        <xsd:annotation>
          <xsd:documentation>Indicates if tax is refundable.  Values are:
Y = Tax refundable (default)
N = Tax not refundable
Example: N</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:enumeration value="Y" />
            <xsd:enumeration value="N" />
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:attribute>
      <xsd:attribute name="Paid">
        <xsd:annotation>
          <xsd:documentation>Indicates the payment status of the tax. PD=Paid, RF=refunded </xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:enumeration value="PD" />
            <xsd:enumeration value="RF" />
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:attribute>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="Taxes">
    <xsd:annotation>
      <xsd:documentation>Taxes group</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" maxOccurs="unbounded" ref="Tax" />
      </xsd:sequence>
      <xsd:attribute name="Amount" type="xsd:integer" use="required">
        <xsd:annotation>
          <xsd:documentation>Total taxes amount.  Example: 50000</xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="TicketByDate">
    <xsd:annotation>
      <xsd:documentation>Ticket by date in ISO 8601 (yyyy-mm-dd) format.  Example: 2001-12-25</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:simpleContent>
        <xsd:extension base="xsd:date">
          <xsd:attributeGroup ref="Time" />
        </xsd:extension>
      </xsd:simpleContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="TicketText" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>Text related to the ticket penalty.  Possible values:
AD = ticket is not refundable after departure
BD = ticket is not refundable before departure
Example: AD</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="Title" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>Traveler title.  Example: MISS</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="TravelerGroup">
    <xsd:annotation>
      <xsd:documentation>Traveler group.  Includes pricing information for all passengers of the same type. </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" maxOccurs="unbounded" name="TravelerElementNumber">
          <xsd:annotation>
            <xsd:documentation>Element number of traveler associated to this item.  Example: 1</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:simpleContent>
              <xsd:extension base="xsd:string" />
            </xsd:simpleContent>
          </xsd:complexType>
        </xsd:element>
        <xsd:element ref="Price" />
        <xsd:element ref="FareRules" />
      </xsd:sequence>
      <xsd:attribute name="TypeRequested" type="xsd:string" use="required">
        <xsd:annotation>
          <xsd:documentation>Passenger type being requested for pricing.  If the passenger type sent by the GDS is not in the below predefined list, then it is shown as is. Predefined values are: 
ADT= Adult
CHD = Child
INF = Infant
GOV = Government
MIL = Military
SRC = Senior citizen
STD = Student
YTH = Youth
Example: CHD</xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="TypePriced" type="xsd:string" use="required">
        <xsd:annotation>
          <xsd:documentation>Passenger type being priced. This type can be different from the type requested if there is no available fare for the requested type.  For example the requested type is GOV and the priced type is ADT because there is no available fare for type GOV and there is an available fare for type ADT.  If the passenger type sent by the GDS is not the below predefined list, then it is shown as is.  Predefined values are:
ADT= Adult
CHD = Child
INF = Infant
GOV = Government
MIL = Military
SRC = Senior citizen
STD = Student
YTH = Youth
Example: ADT</xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="TypeCount" use="required">
        <xsd:annotation>
          <xsd:documentation>Number of travelers of the same passenger type.  Example: 2</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:integer">
            <xsd:minInclusive value="0" />
            <xsd:maxInclusive value="9" />
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:attribute>
      <xsd:attribute name="TypeTotalPrice" type="xsd:integer" use="required">
        <xsd:annotation>
          <xsd:documentation>Total price for all passengers of the same type.  It is the result of Price multiplied by TypeCount.  Example: 200000</xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="FCICode">
        <xsd:annotation>
          <xsd:documentation>0: System auto priced 
1: Agent priced 
2: System auto priced with tax exemption</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:integer">
            <xsd:enumeration value="0" />
            <xsd:enumeration value="1" />
            <xsd:enumeration value="2" />
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:attribute>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="TravelerName">
    <xsd:annotation>
      <xsd:documentation>Traveler name group</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" ref="Surname" />
        <xsd:element minOccurs="0" ref="GivenName" />
      </xsd:sequence>
      <xsd:attribute name="Type">
        <xsd:annotation>
          <xsd:documentation>****** NEW ******
Passenger type requested for pricing.  If the passenger type sent to the GDS is not in the below predefined list, then it is passed as is to the GDS.
 Predefined values are :
ADT= Adult
CHD = Child
INF = Infant
GOV = Government
MIL = Military
SRC = Senior citizen
STD = Student
YTH = Youth
 Example: ADT</xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="TravelerReferences">
    <xsd:annotation>
      <xsd:documentation>Traveler name details</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element ref="Surname" />
        <xsd:element ref="GivenName" />
        <xsd:element minOccurs="0" ref="Initial" />
        <xsd:element minOccurs="0" ref="Title" />
        <xsd:choice minOccurs="0">
          <xsd:element minOccurs="0" ref="Age" />
          <xsd:element minOccurs="0" ref="DateOfBirth" />
        </xsd:choice>
        <xsd:element minOccurs="0" name="Gender">
          <xsd:annotation>
            <xsd:documentation>Traveler gender.  Values are: F = Female M = Male.  Example: M</xsd:documentation>
          </xsd:annotation>
          <xsd:simpleType>
            <xsd:restriction base="xsd:string">
              <xsd:enumeration value="F" />
              <xsd:enumeration value="M" />
            </xsd:restriction>
          </xsd:simpleType>
        </xsd:element>
        <xsd:element minOccurs="0" ref="InfantData" />
        <xsd:sequence minOccurs="0">
          <xsd:element minOccurs="0" maxOccurs="unbounded" ref="EmailAddress" />
          <xsd:element minOccurs="0" name="PictureID">
            <xsd:annotation>
              <xsd:documentation>Passport or other accepted government issued picture ID. </xsd:documentation>
            </xsd:annotation>
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element minOccurs="0" name="DocType">
                  <xsd:annotation>
                    <xsd:documentation>A  - Alien resident card
C - Permanent resident card
P - Passport
T - Refugee travel document and re-entry permit, US Travel document
F - Facilitation document
M - Military
N - Naturalization certificate
V - Border crossing card
DB - Secure Flight data</xsd:documentation>
                  </xsd:annotation>
                  <xsd:simpleType>
                    <xsd:restriction base="xsd:string">
                      <xsd:length value="2" />
                      <xsd:enumeration value="A" />
                      <xsd:enumeration value="C" />
                      <xsd:enumeration value="P" />
                      <xsd:enumeration value="F" />
                      <xsd:enumeration value="M" />
                      <xsd:enumeration value="N" />
                      <xsd:enumeration value="V" />
                      <xsd:enumeration value="DB" />
                    </xsd:restriction>
                  </xsd:simpleType>
                </xsd:element>
                <xsd:element minOccurs="0" name="IssueCountry">
                  <xsd:annotation>
                    <xsd:documentation>Country where document (for instance passport) was issued.
Use valid 2 or 3 char country codes. ISO3166-Alpha2 or ISO3166-Alpha3</xsd:documentation>
                  </xsd:annotation>
                  <xsd:simpleType>
                    <xsd:restriction base="xsd:string">
                      <xsd:length value="2" />
                    </xsd:restriction>
                  </xsd:simpleType>
                </xsd:element>
                <xsd:element minOccurs="0" name="IssueDate" type="xsd:date">
                  <xsd:annotation>
                    <xsd:documentation>Document issue date 
Example: 2012-05-25</xsd:documentation>
                  </xsd:annotation>
                </xsd:element>
                <xsd:element name="DocNumber">
                  <xsd:annotation>
                    <xsd:documentation>Document (for instance passport) number.</xsd:documentation>
                  </xsd:annotation>
                  <xsd:simpleType>
                    <xsd:restriction base="xsd:string">
                      <xsd:minLength value="1" />
                    </xsd:restriction>
                  </xsd:simpleType>
                </xsd:element>
                <xsd:element minOccurs="0" name="NationalityCountry">
                  <xsd:annotation>
                    <xsd:documentation>Use valid 2 or 3 char country codes. ISO3166-Alpha2 or ISO3166-Alpha3</xsd:documentation>
                  </xsd:annotation>
                  <xsd:simpleType>
                    <xsd:restriction base="xsd:string">
                      <xsd:length value="2" />
                    </xsd:restriction>
                  </xsd:simpleType>
                </xsd:element>
                <xsd:element minOccurs="0" name="DocExpirationDate" type="xsd:date">
                  <xsd:annotation>
                    <xsd:documentation>This element is MANDATORY, if the DocType is one of the following: 
C - Permanent resident card
P - Passport
T - Refugee travel document and re-entry permit, US Travel document
M - Military

Example: 2012-05-25</xsd:documentation>
                  </xsd:annotation>
                </xsd:element>
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:sequence>
      <xsd:attribute name="Type" type="xsd:string" use="required">
        <xsd:annotation>
          <xsd:documentation>Passenger type. Values are: ADT = Adult, INS = Infant occupying seat, CHD = Child, YTH = Youth, MIL = Military, GOV = Government, SRC = Senior Citizen, STD = Student (Example: ADT)</xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="Year" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>Last two digits of the credit card expiration year.  Example: 06</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:complexType name="BaseFareType">
    <xsd:all>
      <xsd:element minOccurs="0" ref="FiledIn" />
      <xsd:element minOccurs="0" name="Surcharges" type="SurchargesType">
        <xsd:annotation>
          <xsd:documentation>Surcharges group</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:all>
    <xsd:attribute name="Amount" type="xsd:integer" use="required">
      <xsd:annotation>
        <xsd:documentation>Total base fare amount that includes surcharges (if any).  Example: 200000</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>
  <xsd:complexType name="BasicCreditCardType">
    <xsd:sequence>
      <xsd:element name="CCCode">
        <xsd:annotation>
          <xsd:documentation>Credit card vendor code.</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:length value="2" />
            <xsd:pattern value="[A-Z0-9]{2}" />
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="CCNumber">
        <xsd:annotation>
          <xsd:documentation>Credit card number.  Example: 4011236654652341

Can be returned encrypted by GDS/CRS.
Example: XXXXXXXXXXXXXXXX</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:minLength value="1" />
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="CCExpiration">
        <xsd:annotation>
          <xsd:documentation>Credit card expiration group</xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="Month">
              <xsd:annotation>
                <xsd:documentation>Credit card expiration month.  Example: 02

Can be returned encrypted by GDS/CRS.
Example: XX</xsd:documentation>
              </xsd:annotation>
              <xsd:simpleType>
                <xsd:restriction base="xsd:string">
                  <xsd:pattern value="0[1-9]|1[0-2]|[^0-9]*" />
                </xsd:restriction>
              </xsd:simpleType>
            </xsd:element>
            <xsd:element name="Year">
              <xsd:annotation>
                <xsd:documentation>Last two digits of the credit card expiration year.  Example: 06

Can be returned encrypted by GDS/CRS.
Example: XX</xsd:documentation>
              </xsd:annotation>
              <xsd:simpleType>
                <xsd:restriction base="xsd:string">
                  <xsd:pattern value="[0-9][0-9]|[^0-9]*" />
                </xsd:restriction>
              </xsd:simpleType>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="BasicEndorsement">
    <xsd:annotation>
      <xsd:documentation>Represents an endorsement line - automatic or manual. The actual text is displayed in the child element Text. </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" name="Text" type="FreeFormTextField">
        <xsd:annotation>
          <xsd:documentation>Endorsement text.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="CarHotelSupplementalInformationType">
    <xsd:sequence>
      <xsd:element minOccurs="0" ref="BookingSource" />
      <xsd:element minOccurs="0" name="CorporateRateOverride" type="xsd:integer">
        <xsd:annotation>
          <xsd:documentation>Corporate rate override.  Example: 25900</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="CorporateDiscountNumber">
        <xsd:annotation>
          <xsd:documentation>Corporate discount number.  Example: 5643356</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:minLength value="1" />
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element minOccurs="0" name="PaymentGuarantee">
        <xsd:complexType>
          <xsd:choice>
            <xsd:element name="CreditCard">
              <xsd:complexType>
                <xsd:complexContent mixed="false">
                  <xsd:extension base="BasicCreditCardType">
                    <xsd:sequence minOccurs="0">
                      <xsd:element minOccurs="0" name="CardholderFirstName">
                        <xsd:annotation>
                          <xsd:documentation>FirstName on card. </xsd:documentation>
                        </xsd:annotation>
                        <xsd:simpleType>
                          <xsd:restriction base="xsd:string">
                            <xsd:minLength value="1" />
                          </xsd:restriction>
                        </xsd:simpleType>
                      </xsd:element>
                      <xsd:element name="CardholderLastName">
                        <xsd:annotation>
                          <xsd:documentation>Name on card. </xsd:documentation>
                        </xsd:annotation>
                        <xsd:simpleType>
                          <xsd:restriction base="xsd:string">
                            <xsd:minLength value="1" />
                          </xsd:restriction>
                        </xsd:simpleType>
                      </xsd:element>
                    </xsd:sequence>
                  </xsd:extension>
                </xsd:complexContent>
              </xsd:complexType>
            </xsd:element>
            <xsd:element name="Other">
              <xsd:simpleType>
                <xsd:restriction base="xsd:string">
                  <xsd:minLength value="1" />
                </xsd:restriction>
              </xsd:simpleType>
            </xsd:element>
          </xsd:choice>
          <xsd:attribute default="G" name="Type" use="optional">
            <xsd:annotation>
              <xsd:documentation>Type of payment.  Values are:
G = Guarantee
D = Deposit
Example: G</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
              <xsd:restriction base="xsd:string">
                <xsd:enumeration value="G">
                  <xsd:annotation>
                    <xsd:documentation>Guarantee</xsd:documentation>
                  </xsd:annotation>
                </xsd:enumeration>
                <xsd:enumeration value="D">
                  <xsd:annotation>
                    <xsd:documentation>Deposit</xsd:documentation>
                  </xsd:annotation>
                </xsd:enumeration>
              </xsd:restriction>
            </xsd:simpleType>
          </xsd:attribute>
        </xsd:complexType>
      </xsd:element>
      <xsd:element minOccurs="0" name="FrequentGuest">
        <xsd:annotation>
          <xsd:documentation>Frequent Guest Group</xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element minOccurs="0" name="FGCode">
              <xsd:annotation>
                <xsd:documentation>Frequent guest code.  Example: MC</xsd:documentation>
              </xsd:annotation>
              <xsd:simpleType>
                <xsd:restriction base="xsd:string">
                  <xsd:length value="2" />
                </xsd:restriction>
              </xsd:simpleType>
            </xsd:element>
            <xsd:element name="FGNumber">
              <xsd:annotation>
                <xsd:documentation>Frequent guest number.  Example: 123456</xsd:documentation>
              </xsd:annotation>
              <xsd:simpleType>
                <xsd:restriction base="xsd:string">
                  <xsd:minLength value="1" />
                </xsd:restriction>
              </xsd:simpleType>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element minOccurs="0" name="FrequentFlyer">
        <xsd:annotation>
          <xsd:documentation>Frequent Flyer Group</xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element minOccurs="0" name="FFCode">
              <xsd:annotation>
                <xsd:documentation>Frequent flyer code.  Example: DL</xsd:documentation>
              </xsd:annotation>
              <xsd:simpleType>
                <xsd:restriction base="xsd:string">
                  <xsd:length value="2" />
                </xsd:restriction>
              </xsd:simpleType>
            </xsd:element>
            <xsd:element name="FFNumber">
              <xsd:annotation>
                <xsd:documentation>Frequent flyer number.  Example: 0956301007</xsd:documentation>
              </xsd:annotation>
              <xsd:simpleType>
                <xsd:restriction base="xsd:string">
                  <xsd:minLength value="1" />
                </xsd:restriction>
              </xsd:simpleType>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element minOccurs="0" name="AdditionalInformation">
        <xsd:annotation>
          <xsd:documentation>Optional additional information.  Example: Traveler on wheelchair</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:minLength value="1" />
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="CarLocation">
    <xsd:annotation>
      <xsd:documentation>Type definition for particular car location (for particular car vendor).</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="CityCode">
        <xsd:annotation>
          <xsd:documentation>IATA 3-letter city/airport code for location. In case of non-airport location Category and Number need to be present. Example: NYC</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:length value="3" />
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:sequence minOccurs="0">
        <xsd:element name="Category">
          <xsd:annotation>
            <xsd:documentation>Location category:
T = Airport terminal
O = Off-airport
C = City location 
P = Port 
X = Rail
N = North suburban
E = East suburban
S = South suburban
W = West suburban
A = All suburban locations 
R = Resort location
Example: C</xsd:documentation>
          </xsd:annotation>
          <xsd:simpleType>
            <xsd:restriction base="xsd:string">
              <xsd:length value="1" />
            </xsd:restriction>
          </xsd:simpleType>
        </xsd:element>
        <xsd:element name="Number" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Location number used to identify specific rental location within a location category.  Example: 001</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="CertificateType">
    <xsd:annotation>
      <xsd:documentation source="DESCRIPTION" xml:lang="en">Electronic Certificate information.

=notes=
1. Supports non-revenue and flightpass certificates.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="Number" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation source="DESCRIPTION" xml:lang="en">Unique certificate number.
Example: 12345678</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="IssuingAirline">
        <xsd:annotation>
          <xsd:documentation source="DESCRIPTION" xml:lang="en">Airline designator code.
Example: UA</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:minLength value="2" />
            <xsd:maxLength value="3" />
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element minOccurs="0" name="ProgramName">
        <xsd:annotation>
          <xsd:documentation source="DESCRIPTION" xml:lang="en">Associated program name.
Example: PASSPRO</xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
          <xsd:simpleContent>
            <xsd:extension base="xsd:string">
              <xsd:attribute name="Type" type="xsd:string" use="optional">
                <xsd:annotation>
                  <xsd:documentation source="DESCRIPTION" xml:lang="en">Program type.
Examples:
BUSINESS
LEISURE</xsd:documentation>
                </xsd:annotation>
              </xsd:attribute>
            </xsd:extension>
          </xsd:simpleContent>
        </xsd:complexType>
      </xsd:element>
      <xsd:element minOccurs="0" name="CertificateName" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>Associated certificate name. This element is returned by the program and onlly valid as part of a response message.                             Example: Flex 30 credits</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="CreditsUsed" type="xsd:integer">
        <xsd:annotation>
          <xsd:documentation>Credits consumed as part of the given certificate. This element is returned by the program and only valid as part of a response message. </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="Holder">
        <xsd:annotation>
          <xsd:documentation source="DESCRIPTION" xml:lang="en">Certificate holder or owner information.</xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
          <xsd:simpleContent>
            <xsd:extension base="xsd:string">
              <xsd:attribute name="OwnerID" type="xsd:string" use="optional">
                <xsd:annotation>
                  <xsd:documentation source="DESCRIPTION" xml:lang="en">Owner ID.
Example: AAA2

=notes=
1. This will be a PCC (Pseudo City Code) if an agency has ownership.</xsd:documentation>
                </xsd:annotation>
              </xsd:attribute>
              <xsd:attribute name="IATA" use="optional">
                <xsd:annotation>
                  <xsd:documentation source="DESCRIPTION" xml:lang="en">IATA number if agency has ownership.
Example: 98417900</xsd:documentation>
                </xsd:annotation>
                <xsd:simpleType>
                  <xsd:restriction base="xsd:string">
                    <xsd:pattern value="[A-Z0-9]{7,8}" />
                  </xsd:restriction>
                </xsd:simpleType>
              </xsd:attribute>
              <xsd:attribute name="CorpID" type="xsd:string" use="optional">
                <xsd:annotation>
                  <xsd:documentation source="DESCRIPTION" xml:lang="en">Account number if agency has ownership.
Example: 23456</xsd:documentation>
                </xsd:annotation>
              </xsd:attribute>
              <xsd:attribute name="FQTVNumber" type="xsd:string" use="optional">
                <xsd:annotation>
                  <xsd:documentation source="DESCRIPTION" xml:lang="en">Traveler frequent flyer number if personal ownership.
Example: 0956301007</xsd:documentation>
                </xsd:annotation>
              </xsd:attribute>
            </xsd:extension>
          </xsd:simpleContent>
        </xsd:complexType>
      </xsd:element>
      <xsd:element minOccurs="0" maxOccurs="unbounded" ref="SegmentIDRef" />
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="Children">
    <xsd:annotation>
      <xsd:documentation>Group of child elements defining age and bedding type (optional) for each child. Used in hotel requests.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" name="Child">
        <xsd:annotation>
          <xsd:documentation>Child elements - one per requested child.</xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="Age">
              <xsd:annotation>
                <xsd:documentation>Age of child in years (allowed values are 0-17).</xsd:documentation>
              </xsd:annotation>
              <xsd:simpleType>
                <xsd:restriction base="xsd:int">
                  <xsd:minInclusive value="0" />
                  <xsd:maxInclusive value="17" />
                </xsd:restriction>
              </xsd:simpleType>
            </xsd:element>
            <xsd:element minOccurs="0" name="ExtraBed">
              <xsd:annotation>
                <xsd:documentation>Defines if child will need its own bed ('Y') or sleep in parents bed ('N'). If omitted no extra bed is required.</xsd:documentation>
              </xsd:annotation>
              <xsd:simpleType>
                <xsd:restriction base="xsd:string">
                  <xsd:enumeration value="Y" />
                  <xsd:enumeration value="N" />
                </xsd:restriction>
              </xsd:simpleType>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="CommissionType">
    <xsd:simpleContent>
      <xsd:extension base="xsd:decimal">
        <xsd:attribute name="Type" use="required">
          <xsd:annotation>
            <xsd:documentation>Commission type.  Values are: P = Percent, A = Amount  Example: A</xsd:documentation>
          </xsd:annotation>
          <xsd:simpleType>
            <xsd:restriction base="xsd:string">
              <xsd:minLength value="1" />
              <xsd:maxLength value="1" />
              <xsd:enumeration value="P" />
              <xsd:enumeration value="A" />
            </xsd:restriction>
          </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="CommissionSource" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Indicates where or how the commission was entered. Valid Values:                       M = Manual                        P = From Pricing provider     X = Calculated using FLX-M</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:simpleType name="COSType">
    <xsd:annotation>
      <xsd:documentation> Basic definition of air  ClassOfService. Alpha-coded. Usually single char.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="1" />
      <xsd:minLength value="1" />
      <xsd:pattern value="[A-Z]" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="CountryCodeAlpha2">
    <xsd:annotation>
      <xsd:documentation>2 character country code as defined in ISO3166, restricted to upper case.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:pattern value="[A-Z]{2}" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="CurrencyCodeType">
    <xsd:annotation>
      <xsd:documentation>Defines currency code (ISO 3-letter code) and optional number of decimals. Not that for request messages the NumberOfDecimals has no effect and is not needed.</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:string">
        <xsd:attribute name="NumberOfDecimals" type="xsd:integer" use="optional">
          <xsd:annotation>
            <xsd:documentation>Decimal position in fare amount.  Example: 2</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="Rate" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>The daily exchange rate defined through sources such as BSR, BBR, ICH between two currencies  applied in the conversion</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="ROE" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Conversion rate applied to the conversion of a filed fare to NUC as published by IATA. Applicable to FiledInCurrency only.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="Table" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Table reference for the exchange rate.
Sample: BSR</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:simpleType name="Date">
    <xsd:annotation>
      <xsd:documentation>Date in ISO 8601 format (yyyy-mm-dd). Example: 2001-12-25</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:date" />
  </xsd:simpleType>
  <xsd:complexType name="DerivationType">
    <xsd:annotation>
      <xsd:documentation source="DESCRIPTION" xml:lang="en">Price derivation information definition.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice>
      <xsd:element minOccurs="0" name="Account" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation source="DESCRIPTION" xml:lang="en">Corporate ID or account number. 
Example: 675124</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="Contract" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation source="DESCRIPTION" xml:lang="en">Contract ID.
Example: 675124</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" maxOccurs="unbounded" name="Certificate">
        <xsd:annotation>
          <xsd:documentation>Certificate Data.</xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="Number" type="xsd:string">
              <xsd:annotation>
                <xsd:documentation source="DESCRIPTION" xml:lang="en">Unique Certificate Number.
Example: 12345678</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
            <xsd:element minOccurs="0" name="ProgramName">
              <xsd:annotation>
                <xsd:documentation source="DESCRIPTION" xml:lang="en">Associated program name.
Example: PASSPRO</xsd:documentation>
              </xsd:annotation>
              <xsd:complexType>
                <xsd:simpleContent>
                  <xsd:extension base="xsd:string">
                    <xsd:attribute name="Type" type="xsd:string" use="optional">
                      <xsd:annotation>
                        <xsd:documentation source="DESCRIPTION" xml:lang="en">Program type.
Examples:
BUSINESS
LEISURE</xsd:documentation>
                      </xsd:annotation>
                    </xsd:attribute>
                  </xsd:extension>
                </xsd:simpleContent>
              </xsd:complexType>
            </xsd:element>
            <xsd:element minOccurs="0" name="Holder">
              <xsd:annotation>
                <xsd:documentation source="DESCRIPTION" xml:lang="en">Certificate holder or owner information.</xsd:documentation>
              </xsd:annotation>
              <xsd:complexType>
                <xsd:attribute name="OwnerID" type="xsd:string" use="optional">
                  <xsd:annotation>
                    <xsd:documentation source="DESCRIPTION" xml:lang="en">Owner ID.
Example: AAA2

=notes=
1. This will be a PCC (Pseudo City Code) if an agency has ownership.</xsd:documentation>
                  </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="IATA" use="optional">
                  <xsd:annotation>
                    <xsd:documentation source="DESCRIPTION" xml:lang="en">IATA number if agency has ownership.
Example: 98417900</xsd:documentation>
                  </xsd:annotation>
                  <xsd:simpleType>
                    <xsd:restriction base="xsd:string">
                      <xsd:pattern value="[A-Z0-9]{7,8}" />
                    </xsd:restriction>
                  </xsd:simpleType>
                </xsd:attribute>
                <xsd:attribute name="CorpID" type="xsd:string" use="optional">
                  <xsd:annotation>
                    <xsd:documentation source="DESCRIPTION" xml:lang="en">Account number if agency has ownership.
Example: 23456</xsd:documentation>
                  </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="FQTVNumber" type="xsd:string" use="optional">
                  <xsd:annotation>
                    <xsd:documentation source="DESCRIPTION" xml:lang="en">Traveler frequent flyer number if personal ownership.
Example: 0956301007</xsd:documentation>
                  </xsd:annotation>
                </xsd:attribute>
              </xsd:complexType>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element minOccurs="0" name="PromoCode" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation source="DESCRIPTION" xml:lang="en">Promotion code ID or number.
Example: PROMO123</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="Discount">
        <xsd:annotation>
          <xsd:documentation source="DESCRIPTION" xml:lang="en">Discount ID.</xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element minOccurs="0" name="DiscountID" type="xsd:string">
              <xsd:annotation>
                <xsd:documentation source="DESCRIPTION" xml:lang="en">Discount ID.
Example: DSC12345</xsd:documentation>
                <xsd:documentation source="GUIDELINES" xml:lang="en">=notes=
1. This may be used for ZapOff.</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
            <xsd:element minOccurs="0" name="TicketDesignator" type="xsd:string">
              <xsd:annotation>
                <xsd:documentation source="DESCRIPTION" xml:lang="en">Discount pricing ticket designator.
Examples:
DISC
SPCL
AD75</xsd:documentation>
                <xsd:documentation source="GUIDELINES" xml:lang="en">=notes=
1. Any ticket designator used for fare selection is to be mapped to the root of the PricingInfo/FareSelection node.</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element minOccurs="0" name="TourCode">
        <xsd:annotation>
          <xsd:documentation source="DESCRIPTION" xml:lang="en">Tour code.
Example: GOGO123</xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
          <xsd:simpleContent>
            <xsd:extension base="xsd:string" />
          </xsd:simpleContent>
        </xsd:complexType>
      </xsd:element>
    </xsd:choice>
  </xsd:complexType>
  <xsd:simpleType name="FlightNumberType">
    <xsd:annotation>
      <xsd:documentation>A flight number. Flight numbers are integer values within the range of [0-9999]. Example: 1234</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:integer">
      <xsd:minInclusive value="0" />
      <xsd:maxInclusive value="9999" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="FlightNumberWithSuffixType">
    <xsd:annotation>
      <xsd:documentation>A flight number with optional suffix letter. Flight numbers are integer values within the range of [0,9999]. 

Example: 1234</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="FlightNumberType">
        <xsd:attribute name="Suffix" use="optional">
          <xsd:annotation>
            <xsd:documentation>Flight number alpha qualifier.  
Values are:
A
B
C
D

Example: A</xsd:documentation>
          </xsd:annotation>
          <xsd:simpleType>
            <xsd:restriction base="xsd:string">
              <xsd:enumeration value="A" />
              <xsd:enumeration value="B" />
              <xsd:enumeration value="C" />
              <xsd:enumeration value="D" />
            </xsd:restriction>
          </xsd:simpleType>
        </xsd:attribute>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:simpleType name="FreeFormTextField">
    <xsd:annotation>
      <xsd:documentation>any type of freeform text - basic type</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="Lang">
    <xsd:annotation>
      <xsd:documentation>ISO language code. A two letter code as defined by ISO-639-1. This code specifies the requested language for text content. Default value is 'en'.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:length value="2" />
      <xsd:pattern value="[a-z][a-z]" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="MarketingDataType">
    <xsd:annotation>
      <xsd:documentation source="DESCRIPTION" xml:lang="en">Marketing Messages and Multimedia Links.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" name="MediaContent">
        <xsd:annotation>
          <xsd:documentation source="DESCRIPTION" xml:lang="en">Media content information.</xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element minOccurs="0" name="Images">
              <xsd:annotation>
                <xsd:documentation source="DESCRIPTION" xml:lang="en">Image information.</xsd:documentation>
              </xsd:annotation>
              <xsd:complexType>
                <xsd:sequence>
                  <xsd:element maxOccurs="unbounded" name="Image">
                    <xsd:annotation>
                      <xsd:documentation source="DESCRIPTION" xml:lang="en">Image detail.</xsd:documentation>
                    </xsd:annotation>
                    <xsd:complexType>
                      <xsd:sequence>
                        <xsd:element name="Height">
                          <xsd:annotation>
                            <xsd:documentation>Height of media content in specified units.</xsd:documentation>
                          </xsd:annotation>
                          <xsd:complexType>
                            <xsd:simpleContent>
                              <xsd:extension base="xsd:int">
                                <xsd:attribute name="Unit" type="xsd:string" use="required">
                                  <xsd:annotation>
                                    <xsd:documentation source="DESCRIPTION" xml:lang="en">Dimension unit.
Examples:
MM (MILLIMETER)
PX (PIXEL)</xsd:documentation>
                                    <xsd:documentation source="ENCODING" xml:lang="en">Select a value from the enumerated list or enter a string value.
=enumerated values=
MM = MILLIMETER
PX = PIXEL</xsd:documentation>
                                  </xsd:annotation>
                                </xsd:attribute>
                              </xsd:extension>
                            </xsd:simpleContent>
                          </xsd:complexType>
                        </xsd:element>
                        <xsd:element name="Width">
                          <xsd:annotation>
                            <xsd:documentation>Width of media content in specified units.</xsd:documentation>
                          </xsd:annotation>
                          <xsd:complexType>
                            <xsd:simpleContent>
                              <xsd:extension base="xsd:int">
                                <xsd:attribute name="Unit" type="xsd:string" use="required">
                                  <xsd:annotation>
                                    <xsd:documentation source="DESCRIPTION" xml:lang="en">Dimension unit.
Examples:
MM (MILLIMETER)
PX (PIXEL)</xsd:documentation>
                                    <xsd:documentation source="ENCODING" xml:lang="en">Select a value from the enumerated list or enter a string value.
=enumerated values=
MM = MILLIMETER
PX = PIXEL</xsd:documentation>
                                  </xsd:annotation>
                                </xsd:attribute>
                              </xsd:extension>
                            </xsd:simpleContent>
                          </xsd:complexType>
                        </xsd:element>
                        <xsd:element minOccurs="0" name="ImageData" type="xsd:string">
                          <xsd:annotation>
                            <xsd:documentation source="DESCRIPTION" xml:lang="en">Encoded image value, typically in base64.</xsd:documentation>
                          </xsd:annotation>
                        </xsd:element>
                        <xsd:element minOccurs="0" name="ImageText">
                          <xsd:annotation>
                            <xsd:documentation source="DESCRIPTION" xml:lang="en">Media associated text.</xsd:documentation>
                          </xsd:annotation>
                          <xsd:complexType>
                            <xsd:sequence>
                              <xsd:element maxOccurs="unbounded" name="Text">
                                <xsd:simpleType>
                                  <xsd:restriction base="xsd:string">
                                    <xsd:minLength value="1" />
                                  </xsd:restriction>
                                </xsd:simpleType>
                              </xsd:element>
                            </xsd:sequence>
                          </xsd:complexType>
                        </xsd:element>
                      </xsd:sequence>
                      <xsd:attribute name="ImageID" type="xsd:string" use="optional">
                        <xsd:annotation>
                          <xsd:documentation source="DESCRIPTION" xml:lang="en">Unique media ID.
Examples:
IMG713
SFO_LOUNGE</xsd:documentation>
                          <xsd:documentation source="GUIDELINES" xml:lang="en">=notes=
1. Provides an unique ID for any available images returned in any responsemessages.
2. FileRetrieveRQ/ FileListRS will utilize these ID's to retrieve the full image(s) as needed.</xsd:documentation>
                        </xsd:annotation>
                      </xsd:attribute>
                      <xsd:attribute name="Caption" type="xsd:string" use="optional">
                        <xsd:annotation>
                          <xsd:documentation source="DESCRIPTION" xml:lang="en">Media caption.
Example: PREMIUM SEAT</xsd:documentation>
                        </xsd:annotation>
                      </xsd:attribute>
                      <xsd:attribute name="Symbology" type="xsd:string" use="optional">
                        <xsd:annotation>
                          <xsd:documentation source="DESCRIPTION" xml:lang="en">Barcode symbology applied.
Example: PDF417</xsd:documentation>
                        </xsd:annotation>
                      </xsd:attribute>
                      <xsd:attribute name="Encoding" type="xsd:string" use="optional">
                        <xsd:annotation>
                          <xsd:documentation source="DESCRIPTION" xml:lang="en">Media encoding method.
Example: BASE64</xsd:documentation>
                        </xsd:annotation>
                      </xsd:attribute>
                      <xsd:attribute name="Format" type="xsd:string" use="optional">
                        <xsd:annotation>
                          <xsd:documentation source="DESCRIPTION" xml:lang="en">Media format.
Example: JPEG</xsd:documentation>
                        </xsd:annotation>
                      </xsd:attribute>
                    </xsd:complexType>
                  </xsd:element>
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
            <xsd:element minOccurs="0" name="MediaLinks">
              <xsd:annotation>
                <xsd:documentation source="DESCRIPTION" xml:lang="en">Link information.</xsd:documentation>
              </xsd:annotation>
              <xsd:complexType>
                <xsd:sequence>
                  <xsd:element maxOccurs="unbounded" name="Link">
                    <xsd:annotation>
                      <xsd:documentation source="DESCRIPTION" xml:lang="en">Link detail.</xsd:documentation>
                    </xsd:annotation>
                    <xsd:complexType>
                      <xsd:attribute name="LinkID" type="xsd:string" use="optional">
                        <xsd:annotation>
                          <xsd:documentation source="DESCRIPTION" xml:lang="en">Unique link ID.
Example: SFOLOUNGE</xsd:documentation>
                        </xsd:annotation>
                      </xsd:attribute>
                      <xsd:attribute name="Caption" type="xsd:string" use="optional">
                        <xsd:annotation>
                          <xsd:documentation source="DESCRIPTION" xml:lang="en">Caption or label.
Example: PREMIUM SEAT</xsd:documentation>
                        </xsd:annotation>
                      </xsd:attribute>
                      <xsd:attribute name="Type" type="xsd:string" use="optional">
                        <xsd:annotation>
                          <xsd:documentation source="DESCRIPTION" xml:lang="en">Media link type.
Example:
DET (Details)
DIS (Disclosure)
VID (Video)
CAM (Webcam)
PGE (Webpage)</xsd:documentation>
                        </xsd:annotation>
                      </xsd:attribute>
                    </xsd:complexType>
                  </xsd:element>
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element minOccurs="0" maxOccurs="unbounded" name="Message">
        <xsd:annotation>
          <xsd:documentation source="DESCRIPTION" xml:lang="en">Marketing message.
Example: ONE TRAVELER MAY BE ELIGIBLE FOR A FREE SEAT</xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="unbounded" name="Text">
              <xsd:simpleType>
                <xsd:restriction base="xsd:string">
                  <xsd:minLength value="1" />
                </xsd:restriction>
              </xsd:simpleType>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:sequence>
    <xsd:attributeGroup ref="sourceOptional" />
  </xsd:complexType>
  <xsd:complexType name="Media">
    <xsd:annotation>
      <xsd:documentation>Holds reference to multi media content such as pictures, videos, etc. for this hotel property.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent mixed="false">
      <xsd:extension base="MediaType">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="Preview" type="MediaType">
            <xsd:annotation>
              <xsd:documentation>Preview of the referenced media content (e.g. thumbnail of the picture).</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="Description" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>Media content description (e.g. exterior view).</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:simpleType name="MediaSizeUnitType">
    <xsd:annotation>
      <xsd:documentation>Unit used to specify dimensions of media content.

Example:
mm (millimeter) 
px (pixel)</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="px" />
      <xsd:enumeration value="mm" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="MediaType">
    <xsd:sequence>
      <xsd:element name="Url" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>Hyperlink defining the location of the referenced media (e.g. location of a JPG file).</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:sequence minOccurs="0">
        <xsd:element name="Width">
          <xsd:annotation>
            <xsd:documentation>Width of media content in specified units.</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:simpleContent>
              <xsd:extension base="xsd:int">
                <xsd:attribute name="Unit" type="MediaSizeUnitType" use="required">
                  <xsd:annotation>
                    <xsd:documentation>Unit used to specify dimensions of media content.

Example:
mm (millimeter) 
px (pixel)</xsd:documentation>
                  </xsd:annotation>
                </xsd:attribute>
              </xsd:extension>
            </xsd:simpleContent>
          </xsd:complexType>
        </xsd:element>
        <xsd:element name="Height">
          <xsd:annotation>
            <xsd:documentation>Height of media content in specified units.</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:simpleContent>
              <xsd:extension base="xsd:int">
                <xsd:attribute name="Unit" type="MediaSizeUnitType" use="required">
                  <xsd:annotation>
                    <xsd:documentation>Unit used to specify dimensions of media content.

Example:
mm (millimeter) 
px (pixel)</xsd:documentation>
                  </xsd:annotation>
                </xsd:attribute>
              </xsd:extension>
            </xsd:simpleContent>
          </xsd:complexType>
        </xsd:element>
      </xsd:sequence>
      <xsd:element name="Type" type="MediaTypeType">
        <xsd:annotation>
          <xsd:documentation>Type of media content. 

Example:
image
webcam
video 
360 (panorama view)</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:simpleType name="MediaTypeType">
    <xsd:annotation>
      <xsd:documentation>Type of media content. 

Example:
image
webcam
video 
360 (panorama view)</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="image" />
      <xsd:enumeration value="webcam" />
      <xsd:enumeration value="360" />
      <xsd:enumeration value="video" />
      <xsd:enumeration value="logo" />
      <xsd:enumeration value="map" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="MessageStructure">
    <xsd:complexContent mixed="false">
      <xsd:extension base="xsd:anyType" />
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:simpleType name="PNRRecordLocator">
    <xsd:annotation>
      <xsd:documentation>Defines PNR record locator format in accordance with industry standard. [A-Z0-9]{6}.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:length value="6" />
      <xsd:pattern value="[A-Z0-9]{6}" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="positiveDecimal">
    <xsd:annotation>
      <xsd:documentation>A restriction of the built-in decimal type to positive values (excluding 0). Defined as a type of its own, because this type of restriction cannot be stated direcetly for a derived type, which is at the same time extended by attributes.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:decimal">
      <xsd:minExclusive value="0" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="positiveIntegerOrEmpty">
    <xsd:annotation>
      <xsd:documentation>Either a positive integer value (without leading zeros) or the empty string.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:pattern value="[1-9][0-9]*" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="RequestForCarLocation">
    <xsd:annotation>
      <xsd:documentation>Type definition for one or more (if only citycode and category is specified) car locations for one or more car vendors.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="CityCode">
        <xsd:annotation>
          <xsd:documentation>IATA 3-letter city/airport code for location. In case of non-airport location Category need to be present (Number for particular locaction). Example: NYC</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:length value="3" />
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:sequence minOccurs="0">
        <xsd:element name="Category">
          <xsd:annotation>
            <xsd:documentation>Location category:
T = Airport terminal
O = Off-airport
C = City location 
P = Port 
X = Rail
N = North suburban
E = East suburban
S = South suburban
W = West suburban 
D = default location for the city.
R = Resort location
Example: C</xsd:documentation>
          </xsd:annotation>
          <xsd:simpleType>
            <xsd:restriction base="xsd:string">
              <xsd:length value="1" />
            </xsd:restriction>
          </xsd:simpleType>
        </xsd:element>
        <xsd:element minOccurs="0" name="Number" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Location number used to identify specific rental location within a location category.  Example: 001</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="SegmentIDRef">
    <xsd:annotation>
      <xsd:documentation>ID reference used to associate this item to a segment. No comma separated lists and no ranges supported. Example: F1</xsd:documentation>
    </xsd:annotation>
    <xsd:attributeGroup ref="OFFPoint" />
    <xsd:attributeGroup ref="ONPoint" />
    <xsd:attributeGroup ref="RefType" />
  </xsd:complexType>
  <xsd:complexType name="SourceStdAttributes">
    <xsd:annotation>
      <xsd:documentation>Source Aggregation Information. </xsd:documentation>
    </xsd:annotation>
    <xsd:attributeGroup ref="sourceOptional" />
    <xsd:attribute name="Version" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation source="DESCRIPTION" xml:lang="en">Message version number.
Example: 1.0</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="TimeStamp" type="xsd:dateTime" use="optional">
      <xsd:annotation>
        <xsd:documentation source="DESCRIPTION" xml:lang="en">Message creation timestamp.
Example: 2012-01-13T13:59:38Z</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="TransactionIdentifier" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation source="DESCRIPTION" xml:lang="en">Unique relationship identifier for request and response messages that are part of an on-going transaction.
Example: TRN12345</xsd:documentation>
        <xsd:documentation source="GUIDELINES" xml:lang="en">=notes=
1. This is a unique identifier to relate all messages that are part of an on-going transaction.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>
  <xsd:simpleType name="stringLength4">
    <xsd:annotation>
      <xsd:documentation>4 character string.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:length value="4" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="SurchargesType">
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" name="Surcharge" type="SurchargeType">
        <xsd:annotation>
          <xsd:documentation>Surcharges break down information.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
    <xsd:attribute name="Amount" type="xsd:integer" use="required">
      <xsd:annotation>
        <xsd:documentation>Total surcharges amount.  Example: 2000</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>
  <xsd:complexType name="SurchargeType">
    <xsd:complexContent mixed="false">
      <xsd:extension base="SurchargeTypeBasic">
        <xsd:attribute name="Segment" type="xsd:integer">
          <xsd:annotation>
            <xsd:documentation>Segment number to which the surcharge applies.  Example: 1</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attributeGroup ref="ONPoint" />
        <xsd:attributeGroup ref="OFFPoint" />
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="SurchargeTypeBasic">
    <xsd:sequence>
      <xsd:element name="Designator">
        <xsd:annotation>
          <xsd:documentation>Surcharge designator.</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:minLength value="1" />
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element minOccurs="0" name="Description">
        <xsd:annotation>
          <xsd:documentation>Surcharge descriptions as free form text.</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:minLength value="1" />
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element minOccurs="0" ref="FiledCurrencyCode">
        <xsd:annotation>
          <xsd:documentation>Currency for this FareComponent may not be the same as POS Currency Code.  Example: HKD</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" ref="FiledAmount">
        <xsd:annotation>
          <xsd:documentation>Fare Amount as filed in the currency defined in FiledCurrencyCode</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
    <xsd:attribute name="Amount" type="xsd:integer" use="required">
      <xsd:annotation>
        <xsd:documentation>Individual surcharge amount.  Example: 270</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>
  <xsd:simpleType name="Time">
    <xsd:annotation>
      <xsd:documentation>Time in ISO 8601 twenty-four hour clock format. Example: 14:00</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:length value="5" />
      <xsd:pattern value="([0-1][0-9]|2[0-3]):[0-5][0-9]" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="TimeDurationHoursMinutes">
    <xsd:annotation>
      <xsd:documentation>A duration of time specified in hours and minutes (HH:MM) with a maximum value of 99:59.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:pattern value="[0-9][0-9]:[0-5][0-9]" />
    </xsd:restriction>
  </xsd:simpleType>
</xsd:schema>