<?xml version="1.0" encoding="utf-8"?>
<xsd:schema xmlns="http://farelogix.com/flx/ProfileInsertRQ" attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://farelogix.com/flx/ProfileInsertRQ" version="CR.3" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:attributeGroup name="BalanceAmount">
    <xsd:attribute name="BalanceAmount" type="xsd:string">
      <xsd:annotation>
        <xsd:documentation> Amount (without decimal) available on card. Example: 100 (one hundred)</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:attributeGroup>
  <xsd:attributeGroup name="DistanceUnit">
    <xsd:attribute name="DistanceUnit">
      <xsd:annotation>
        <xsd:documentation>Unit of distance.
Values:
M = Miles
K = Kilometers
Example: K</xsd:documentation>
      </xsd:annotation>
      <xsd:simpleType>
        <xsd:restriction base="xsd:string">
          <xsd:minLength value="1" />
          <xsd:maxLength value="1" />
          <xsd:enumeration value="M" />
          <xsd:enumeration value="K" />
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:attribute>
  </xsd:attributeGroup>
  <xsd:attributeGroup name="OFFPoint">
    <xsd:attribute name="OFFPoint" type="xsd:string">
      <xsd:annotation>
        <xsd:documentation>Identifies the OFF point of each slice of a flight (direct flight w/stop(s) and/or COG flights) using 3-character airport codes.
Example:  LHR</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:attributeGroup>
  <xsd:attributeGroup name="ONPoint">
    <xsd:attribute name="ONPoint" type="xsd:string">
      <xsd:annotation>
        <xsd:documentation>Identifies the ON point of each slice of a flight (direct flight w/stop(s) and/or COG flights) using 3-character airport codes.
Example:  ORD</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:attributeGroup>
  <xsd:attributeGroup name="Radius">
    <xsd:attribute name="Radius">
      <xsd:annotation>
        <xsd:documentation>Radius around the specified location, within which results should be included.
Example: 0.5</xsd:documentation>
      </xsd:annotation>
      <xsd:simpleType>
        <xsd:restriction base="xsd:unsignedLong" />
      </xsd:simpleType>
    </xsd:attribute>
  </xsd:attributeGroup>
  <xsd:attributeGroup name="RefType">
    <xsd:attribute name="RefType" type="xsd:string">
      <xsd:annotation>
        <xsd:documentation>Location of the referenced data. Example: TravelerRefInfo  Accepted Values: Any child node specified in ReferenceData, eg. FlightRefInfo, ServiceRefInfo, FareRefInfo, SeatRefInfo.
</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:attributeGroup>
  <xsd:attributeGroup name="sourceMandatory">
    <xsd:attribute name="Source" use="required">
      <xsd:annotation>
        <xsd:documentation>Identifies the source of this  element. In other words where the content originates from. Not limited to GDS, applicable to direct connect as well. Example: 1A, 1V, or other. </xsd:documentation>
      </xsd:annotation>
      <xsd:simpleType>
        <xsd:restriction base="xsd:string">
          <xsd:minLength value="1" />
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:attribute>
  </xsd:attributeGroup>
  <xsd:attributeGroup name="sourceOptional">
    <xsd:attribute name="Source">
      <xsd:annotation>
        <xsd:documentation>Identifies the source of this  element. In other words where the content originates from. Not limited to GDS, applicable to direct connect as well. Example: 1A, 1V, or other. </xsd:documentation>
      </xsd:annotation>
      <xsd:simpleType>
        <xsd:restriction base="xsd:string">
          <xsd:minLength value="1" />
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:attribute>
  </xsd:attributeGroup>
  <xsd:attributeGroup name="SourceRef">
    <xsd:attribute name="SourceRef">
      <xsd:annotation>
        <xsd:documentation>PNR Record Locator associated to Source attribute.</xsd:documentation>
      </xsd:annotation>
      <xsd:simpleType>
        <xsd:restriction base="xsd:string">
          <xsd:minLength value="1" />
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:attribute>
  </xsd:attributeGroup>
  <xsd:attributeGroup name="PayloadStdAttributes">
    <xsd:annotation>
      <xsd:documentation source="DESCRIPTION" xml:lang="en">NDC schema payload standard attributes.</xsd:documentation>
    </xsd:annotation>
    <xsd:attribute name="Version" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation source="DESCRIPTION" xml:lang="en">Message version number.
Example: 1.0</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="TimeStamp" type="xsd:dateTime" use="optional">
      <xsd:annotation>
        <xsd:documentation source="DESCRIPTION" xml:lang="en">Message creation timestamp.
Example: 2012-01-13T13:59:38Z</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="TransactionIdentifier" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation source="DESCRIPTION" xml:lang="en">Unique relationship identifier for request and response messages that are part of an on-going transaction.
Example: TRN12345</xsd:documentation>
        <xsd:documentation source="GUIDELINES" xml:lang="en">=notes=
1. This is a unique identifier to relate all messages that are part of an on-going transaction.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="PrimaryLangID" use="optional">
      <xsd:annotation>
        <xsd:documentation source="DESCRIPTION" xml:lang="en">Primary language preference for message content.
Example: en-US (English, United States)</xsd:documentation>
        <xsd:documentation source="ENCODING" xml:lang="en">For maximum interoperability, content language designators are specified using Microsoft National Language Support (NLS) encoding.
http://msdn.microsoft.com/en-us/goglobal/bb896001.aspx</xsd:documentation>
      </xsd:annotation>
      <xsd:simpleType>
        <xsd:restriction base="xsd:string">
          <xsd:minLength value="2" />
          <xsd:maxLength value="5" />
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:attribute>
    <xsd:attribute name="AltLangID" use="optional">
      <xsd:annotation>
        <xsd:documentation source="DESCRIPTION" xml:lang="en">Alternate language preference for message content.
Example: en-GB (English, United Kingdom)</xsd:documentation>
        <xsd:documentation source="ENCODING" xml:lang="en">For maximum interoperability, content language designators are specified using Microsoft National Language Support (NLS) encoding.
http://msdn.microsoft.com/en-us/goglobal/bb896001.aspx</xsd:documentation>
      </xsd:annotation>
      <xsd:simpleType>
        <xsd:restriction base="xsd:string">
          <xsd:minLength value="2" />
          <xsd:maxLength value="5" />
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:attribute>
    <xsd:attribute name="TargetSystem" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation source="DESCRIPTION" xml:lang="en">Message target system type.
Examples:
PRODUCTION
STAGING
TEST</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="TargetSystemName" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation source="DESCRIPTION" xml:lang="en">Message target system name.
Example: STG002</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:attributeGroup>
  <xsd:attributeGroup name="version">
    <xsd:attribute name="version" type="xsd:string">
      <xsd:annotation>
        <xsd:documentation>Version of message</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:attributeGroup>
  <xsd:attributeGroup name="DataBaseLink">
    <xsd:attribute name="DataBaseLink" type="xsd:string">
      <xsd:annotation>
        <xsd:documentation>Reference to a separate database where the trip data is stored (if independent of profile database).  This link allows to create the "TripTemplates" node using a supplemental table/database before appended to ProfileViewRS</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:attributeGroup>
  <xsd:attributeGroup name="SourceID">
    <xsd:attribute name="SourceID" type="xsd:string">
      <xsd:annotation>
        <xsd:documentation>System where profile database resides.
Example: 1G</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:attributeGroup>
  <xsd:attributeGroup name="ActionOptional">
    <xsd:attribute name="Action">
      <xsd:annotation>
        <xsd:documentation>Indicates how this data is moved into or added to a PNR.  
Values are: 

A = Always move line
O = Optional move line
N = Never move line
Example: A

</xsd:documentation>
      </xsd:annotation>
      <xsd:simpleType>
        <xsd:restriction base="xsd:string">
          <xsd:minLength value="1" />
          <xsd:maxLength value="1" />
          <xsd:enumeration value="A" />
          <xsd:enumeration value="N" />
          <xsd:enumeration value="O" />
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:attribute>
  </xsd:attributeGroup>
  <xsd:attributeGroup name="ActionMandatory" />
  <xsd:attributeGroup name="ProfSource">
    <xsd:attribute name="ProfSource">
      <xsd:annotation>
        <xsd:documentation>ONLY used in ProfileViewRS

Indicates if this value is returned from a (T)raveler or (C)orporate profile.  A number appended to the value such as "T.3" refers to the actual sequential position of the ProfileIdentification node. 
 
T = Traveler Prof Data
C = Company Prof Data
Example: T

Note: If multiple profiles are merged, the value here will be

---with company prof---
"C"   - company  
"T"   - 1st traveler
"T.3"  - 2nd traveler
"T.4"  - 3rd traveler
---without company---
"T"   - 1st traveler
"T.2" - 2nd traveler
"T.3" - 3rd traveler</xsd:documentation>
      </xsd:annotation>
      <xsd:simpleType>
        <xsd:restriction base="xsd:string">
          <xsd:minLength value="1" />
          <xsd:maxLength value="1" />
          <xsd:enumeration value="T" />
          <xsd:enumeration value="C" />
          <xsd:enumeration value="" />
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:attribute>
  </xsd:attributeGroup>
  <xsd:attributeGroup name="LineRef">
    <xsd:attribute name="LineRef" type="xsd:string">
      <xsd:annotation>
        <xsd:documentation>ONLY used in ProfileViewRS and ProfileReplaceRQ

Identifies the element number (4-digits) in the source profile - mostly in case of GDS source. This number is to be used to update and/or delete the corresponding element in the source database.

Example: 0001</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:attributeGroup>
  <xsd:attributeGroup name="Priority">
    <xsd:attribute name="Priority" type="xsd:string">
      <xsd:annotation>
        <xsd:documentation>Indicator if this FOP element ranks higher than an existing Company FOP with a @Action of "A".

If set to "Y" this FOP is used even if a company FOP with an @Action value = A exists, unless company FOP itself is set to "Y" (highest rank).

Possible values:  Y. N

Examples:
(1) @ProfSource of C plus @Action of A plus Priority of Y = HIGHEST rank, trumps all other FOPs

(2) @ProfSource of T plus @Action of A plus Priority of Y = HIGHEST rank, trumps all other FOPs with exception of (1)

(3) @ProfSource of C plus @Action of A plus Priority of N = HIGHEST rank, trumps all other FOPs w/@ProfSource of T


NOTE:  MAY NEED SOME MORE BUSINESS CASES</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:attributeGroup>
  <xsd:attribute name="TripPurpose" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>The trip purpose to which this preference applies.  If absent or blank the preference applies to all trips.

If used, trip purpose codes are defined in the 
ProfileInformation/CompanyInfo node.

Example: BIZ</xsd:documentation>
    </xsd:annotation>
  </xsd:attribute>
  <xsd:attribute name="PTC" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>Passenger type code.  Values are: 
ADT = Adult, 
INS = Infant w/seat,
INF = Infant on lap,
CHD = Child, 
YTH = Youth, 
MIL = Military, 
GOV = Government, SRC = Senior Citizen, STD = Student 
Example: ADT</xsd:documentation>
    </xsd:annotation>
  </xsd:attribute>
  <xsd:attribute name="Rank" type="xsd:integer">
    <xsd:annotation>
      <xsd:documentation>ranks the priority if multiple choices are available.

Example: 1</xsd:documentation>
    </xsd:annotation>
  </xsd:attribute>
  <xsd:element name="AirlineCode">
    <xsd:annotation>
      <xsd:documentation>Airline code.  Example: AA</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleType>
      <xsd:restriction base="xsd:string" />
    </xsd:simpleType>
  </xsd:element>
  <xsd:element name="AirportCode">
    <xsd:annotation>
      <xsd:documentation>Airport code.  Example: MIA</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleType>
      <xsd:restriction base="xsd:string">
        <xsd:maxLength value="3" />
        <xsd:minLength value="3" />
      </xsd:restriction>
    </xsd:simpleType>
  </xsd:element>
  <xsd:element name="Arrival">
    <xsd:annotation>
      <xsd:documentation>Flight arrival group</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:annotation>
          <xsd:documentation>IMPORTANT: Note that Date and Time elements are mandatory for regular flight sell. Only optional for OPEN segments . 

See also Flight/@Type=O  attribute of the Flight element.</xsd:documentation>
        </xsd:annotation>
        <xsd:element ref="AirportCode" />
        <xsd:element minOccurs="0" ref="Date" />
        <xsd:element minOccurs="0" ref="Time" />
        <xsd:element minOccurs="0" ref="Terminal" />
        <xsd:element minOccurs="0" name="AirportName" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Airport Name. Example Miami International Airport</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="AltTicketingDate">
    <xsd:annotation>
      <xsd:documentation>This date stamp specifies a future or historic alternative date validation for ticketing.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="Date" type="Date">
          <xsd:annotation>
            <xsd:documentation>Specifies date in ISO 8601 format (yyyy-mm-dd). Example: 2001-12-25</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="BookingSource" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>Agency booking source number.  Example: 99199</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="Certificates">
    <xsd:annotation>
      <xsd:documentation>Electronic Certificate information.

=notes=
1. Supports non-revenue and flightpass certificates.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element maxOccurs="unbounded" name="Certificate" type="CertificateType">
          <xsd:annotation>
            <xsd:documentation>Certificate detail.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="CityCode">
    <xsd:annotation>
      <xsd:documentation>Departure or arrival city code.  Example: MIA</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleType>
      <xsd:restriction base="xsd:string">
        <xsd:maxLength value="3" />
        <xsd:minLength value="3" />
      </xsd:restriction>
    </xsd:simpleType>
  </xsd:element>
  <xsd:element name="ClassOfService" type="COSType">
    <xsd:annotation>
      <xsd:documentation>Class of service.  Example: B</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="Code" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>Error code or equipment type code.  Example: 0104 (error code), 747 (equipment code)</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="Control">
    <xsd:annotation>
      <xsd:documentation>The control(s) needed for this pop-up.a) Textbox

Possible types are:
a) TextBox
b) DropDown w/values
c) OptionGroup</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" maxOccurs="unbounded" name="Value" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Applicable to these control types:

ListBox
DropDown
ComboBox
OptionGroup
CheckBox

The provided values are used to provide a dynamically built list and/or single choice (OptionGroup) or multi-choice (CheckBox) labels.

In case of 'OptionGroup' and 'CheckBox' the value is the description/label for each checkbox or radio button.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
      <xsd:attribute name="Type" type="xsd:string" use="required">
        <xsd:annotation>
          <xsd:documentation>Possible Values:

TextBox
ListBox
DropDown w/values
ComboBox
OptionGroup(radio)
CheckBox
DateInput
TimeInput
TextArea</xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="GUILabel" type="xsd:string" use="required">
        <xsd:annotation>
          <xsd:documentation>Label to describe this control. 
This label is usually placed in front or above the respective control. In case of a 'Button' it is the name of the button.</xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="PNRLabel" type="xsd:string" use="required">
        <xsd:annotation>
          <xsd:documentation>Description to be used to enter the returned value into a PNR General Remark element, if needed or desired.

This label is usually placed in front of the returned value as remark text.

Example:
"ProjectID: 105514"</xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="MouseOverText" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>Freeflow informational text designed to use as a 'mouseover' text or similar</xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="Mandatory" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>Allowed Values: Y or N

If 'Y' the UI needs to identify the control as mandatory input/selection, e.g. with an asteriks or different colored background</xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="Width" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>Width in pixels</xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="SameLine" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>Allowed Values: Y or N

If 'Y' the UI needs to position this control to the right of and on the same line as the preceding control.</xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="Pattern" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>use a regular expression string</xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="MinChar" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>Minimum characters</xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="MaxChar" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>Maximum characters</xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="CountryCode">
    <xsd:annotation>
      <xsd:documentation>Country where sale takes place or Ticket issuing country. Example: US</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleType>
      <xsd:restriction base="xsd:string" />
    </xsd:simpleType>
  </xsd:element>
  <xsd:element name="CurrencyCode">
    <xsd:annotation>
      <xsd:documentation>Currency code.  Example: USD</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:simpleContent>
        <xsd:restriction base="CurrencyCodeType">
          <xsd:pattern value="[A-Z0-9]{3}" />
          <xsd:attribute name="NumberOfDecimals" type="xsd:nonNegativeInteger" use="required">
            <xsd:annotation>
              <xsd:documentation>Decimal position in fare amount.  Example: 2</xsd:documentation>
            </xsd:annotation>
          </xsd:attribute>
        </xsd:restriction>
      </xsd:simpleContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="CustomRequest">
    <xsd:annotation>
      <xsd:documentation>Mostly used when source specific additional input is needed and/or when QC (Quality Control) edits are processed and the POS needs instructions/options how to proceed.

Multiple sources may return a separate 'Error' node with their own CustomRequest request.

the UI must display one screen at a time and respond to each with a separate message.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="DialogTitle" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Freeflow Text to be displayed in the Title Bar of the pop-up window</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="Instructions">
          <xsd:annotation>
            <xsd:documentation>Freeflow lines of text to be displayed inside of the pop-up window to explain or instruct the user of the necessary action(s)</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:sequence>
              <xsd:element maxOccurs="unbounded" name="Text">
                <xsd:annotation>
                  <xsd:documentation>Individual line of freeflow text</xsd:documentation>
                </xsd:annotation>
                <xsd:complexType>
                  <xsd:simpleContent>
                    <xsd:extension base="xsd:string">
                      <xsd:attribute name="Type" type="xsd:string" use="optional">
                        <xsd:annotation>
                          <xsd:documentation>Information content type.</xsd:documentation>
                        </xsd:annotation>
                      </xsd:attribute>
                    </xsd:extension>
                  </xsd:simpleContent>
                </xsd:complexType>
              </xsd:element>
            </xsd:sequence>
          </xsd:complexType>
        </xsd:element>
        <xsd:element maxOccurs="unbounded" ref="Control">
          <xsd:annotation>
            <xsd:documentation>Control(s) needed for this pop-up.

Important: The UI is asked to build the Pop-Up controls in sequential order.

Possible types are:
TextBox
ListBox
DropDown w/values
ComboBox
OptionGroup
CheckBox
DateInput
TimeInput
TextArea</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element maxOccurs="unbounded" name="Button">
          <xsd:annotation>
            <xsd:documentation>The 1st button defined will be the default button for the window.

All buttons will be positioned at the bottom of the forms and arranged from left to right (centered)</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:attribute name="ButtonLabel" type="xsd:string" use="required">
              <xsd:annotation>
                <xsd:documentation>The label to be used for the button.

Example: Submit</xsd:documentation>
              </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="Validate" type="xsd:string">
              <xsd:annotation>
                <xsd:documentation>Possible values Y or N (default)

If "Y" this button will trigger the validation needed by the GUI prior to processing the screen.

Note:  Only a single button can have this attribute set to "Y".  If multiple, the first instance will be used.</xsd:documentation>
              </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="MouseOverText" type="xsd:string">
              <xsd:annotation>
                <xsd:documentation>Freeflow informational text designed to use as a 'mouseover' text or similar</xsd:documentation>
              </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="Width" type="xsd:string">
              <xsd:annotation>
                <xsd:documentation>GUI normally autosizes based on width of label.  A certain width may be defined here in pixels.</xsd:documentation>
              </xsd:annotation>
            </xsd:attribute>
          </xsd:complexType>
        </xsd:element>
        <xsd:element name="OrigMsg" type="MessageStructure">
          <xsd:annotation>
            <xsd:documentation>This is the message originally received by Company</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="Reference" type="MessageStructure">
          <xsd:annotation>
            <xsd:documentation>Reference node to be returned with CustomResponse node - mostly used as a linking reference between CustomRequest and CustomResponse</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="CancelRefKey" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Cancel reference key.
Example: QUERYID=6209000C296C648F?PNR=KSZJ2R?CANCEL_INIT=1548018?REFUND=FULL?REFUND_TYPE=IC?RETAIN_DATE=2014-10-14?H24=Y</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="CustomResponse">
    <xsd:annotation>
      <xsd:documentation>This node is used to return custom data previously requested via an error response using the InfoGroup/Error/ CustomRequest node of any supporting RS message.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element maxOccurs="unbounded" ref="Response">
          <xsd:annotation>
            <xsd:documentation>Custom response to each control sent to the GUI in the "CustomRequest" request.

If Control is of type 'Button' only the control which was clicked is returned with the @PNRLabel value provided or mapped from the associated @GUILabel.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element name="Button">
          <xsd:annotation>
            <xsd:documentation>This node represents the button clicked by the user.</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:attribute name="PNRLabel" type="xsd:string" use="required">
              <xsd:annotation>
                <xsd:documentation>Description to be used to enter the returned value into a PNR General Remark element. Value is passed thru from the request - if provided.</xsd:documentation>
              </xsd:annotation>
            </xsd:attribute>
          </xsd:complexType>
        </xsd:element>
        <xsd:element minOccurs="0" name="Reference" type="MessageStructure">
          <xsd:annotation>
            <xsd:documentation>Custom parameter node received in the CustomRequest node</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
      <xsd:attributeGroup ref="sourceMandatory" />
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="Date" type="xsd:date">
    <xsd:annotation>
      <xsd:documentation>Date in ISO 8601 format (yyyy-mm-dd).  Example: 2001-12-25</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="DateOfBirth" type="xsd:date">
    <xsd:annotation>
      <xsd:documentation>Traveler birth date in ISO 8601 format (yyyy-mm-dd).  Date of birth is not supported in Galileo.  Example: 2001-12-25</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="Departure">
    <xsd:annotation>
      <xsd:documentation>Flight departure group</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:annotation>
          <xsd:documentation>IMPORTANT: Note that Date and Time elements are mandatory for regular flight sell. Only optional for OPEN segments. 

See also Flight/@Type=O  attribute of the Flight element.</xsd:documentation>
        </xsd:annotation>
        <xsd:element ref="AirportCode" />
        <xsd:element minOccurs="0" ref="Date" />
        <xsd:element minOccurs="0" ref="Time" />
        <xsd:element minOccurs="0" ref="Terminal" />
        <xsd:element minOccurs="0" name="AirportName" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Airport Name. Example Miami International Airport</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="Derivation" type="DerivationType">
    <xsd:annotation>
      <xsd:documentation source="DESCRIPTION" xml:lang="en">Price derivation information.

=notes=
1. Used for dynamic price classes to identify the derivation for the designated price class (e.g. which qualifier triggered the creation of this price class.)</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="Diagnostics">
    <xsd:complexType>
      <xsd:simpleContent>
        <xsd:extension base="xsd:string">
          <xsd:attribute name="ID" type="xsd:integer" use="optional" />
        </xsd:extension>
      </xsd:simpleContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="DispAmount" type="xsd:decimal">
    <xsd:annotation>
      <xsd:documentation>Formated Display amount with decimals. e.g 75.00 </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="Error">
    <xsd:annotation>
      <xsd:documentation>Error group</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" ref="Code" />
        <xsd:element maxOccurs="unbounded" ref="Text" />
        <xsd:element minOccurs="0" ref="CustomRequest" />
      </xsd:sequence>
      <xsd:attribute name="ErrorType" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>Type of error.  Example: Air</xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
      <xsd:attributeGroup ref="sourceOptional" />
      <xsd:attributeGroup ref="SourceRef" />
      <xsd:attribute name="SegmentIDRef" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>ID reference used to associate this item to a segment. No comma separated lists and no ranges supported. Example: F1</xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="FareRefKey">
    <xsd:annotation>
      <xsd:documentation>Unique fare reference key. If present in pricing response messages, must be included in FareRulesRQ.</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleType>
      <xsd:restriction base="xsd:string">
        <xsd:minLength value="1" />
      </xsd:restriction>
    </xsd:simpleType>
  </xsd:element>
  <xsd:element name="FiledAmount">
    <xsd:annotation>
      <xsd:documentation>Base Fare Amount as originally filed.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:simpleContent>
        <xsd:extension base="xsd:integer" />
      </xsd:simpleContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="FiledCurrencyCode">
    <xsd:annotation>
      <xsd:documentation>Currency code.  Example: USD</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:simpleContent>
        <xsd:restriction base="CurrencyCodeType">
          <xsd:pattern value="[A-Z0-9]{3}" />
          <xsd:attribute name="NumberOfDecimals" type="xsd:nonNegativeInteger" use="required">
            <xsd:annotation>
              <xsd:documentation>Decimal position in fare amount.  Example: 2</xsd:documentation>
            </xsd:annotation>
          </xsd:attribute>
        </xsd:restriction>
      </xsd:simpleContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="FiledIn">
    <xsd:annotation>
      <xsd:documentation>This group represents fares filed in a currency different from the currency of a point of sale. The content elements represent the original currency and amount as filed.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:all>
        <xsd:element ref="CurrencyCode" />
        <xsd:element name="Amount">
          <xsd:annotation>
            <xsd:documentation>Base Fare Amount as originally filed.</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:simpleContent>
              <xsd:extension base="xsd:integer">
                <xsd:attribute name="BulkMask" type="xsd:string">
                  <xsd:annotation>
                    <xsd:documentation>This mask applies to IT/BT tickets where the masked value may be "BT" or "IT" instead of the true amount.

Note: this mask is ALWAYS used for the passenger ticket image. </xsd:documentation>
                  </xsd:annotation>
                </xsd:attribute>
              </xsd:extension>
            </xsd:simpleContent>
          </xsd:complexType>
        </xsd:element>
        <xsd:element minOccurs="0" name="NUCAmount">
          <xsd:annotation>
            <xsd:documentation>Base Fare Amount as originally filed.</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:simpleContent>
              <xsd:extension base="xsd:integer">
                <xsd:attribute name="ROE" type="xsd:string">
                  <xsd:annotation>
                    <xsd:documentation>Applicable rate of exhange</xsd:documentation>
                  </xsd:annotation>
                </xsd:attribute>
              </xsd:extension>
            </xsd:simpleContent>
          </xsd:complexType>
        </xsd:element>
      </xsd:all>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="FlightNumber" type="FlightNumberWithSuffixType">
    <xsd:annotation>
      <xsd:documentation>Flight number - an integer value within the range of [0,9999].

Example: 1234</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="ForInfo">
    <xsd:annotation>
      <xsd:documentation>Information group</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" ref="Code">
          <xsd:annotation>
            <xsd:documentation>Warning-, error- or equipment type code.  Example: 0104 (error code), 747 (equipment code)</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element maxOccurs="unbounded" ref="Text">
          <xsd:annotation>
            <xsd:documentation>Information text or error text. Example: Free flow text.  Example: Invalid flight number</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
      <xsd:attributeGroup ref="sourceOptional" />
      <xsd:attributeGroup ref="SourceRef" />
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="Gender">
    <xsd:annotation>
      <xsd:documentation>Traveler gender.  Values are: F = Female M = Male U= Unknown at time of booking.  Example: M      NOTE: Always use M or F in the FLX API, even for infants. FLX backend processing will submit alternative indicators (such as MI/FI) as appropriate.</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleType>
      <xsd:restriction base="xsd:string">
        <xsd:minLength value="1" />
        <xsd:maxLength value="2" />
        <xsd:enumeration value="F" />
        <xsd:enumeration value="M" />
        <xsd:enumeration value="U" />
        <xsd:enumeration value="MI" />
        <xsd:enumeration value="FI" />
      </xsd:restriction>
    </xsd:simpleType>
  </xsd:element>
  <xsd:element name="GeoCoded">
    <xsd:annotation>
      <xsd:documentation>Geographical position information. 
Allows search by geographical longitude and latitude and to define a search radius around the specified geo location.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:all>
        <xsd:element ref="Longitude" />
        <xsd:element ref="Latitude" />
      </xsd:all>
      <xsd:attributeGroup ref="Radius" />
      <xsd:attributeGroup ref="DistanceUnit" />
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="GivenName" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>Traveler given (first) name.  Example: JANE</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="HistoricalPricingInfo">
    <xsd:annotation>
      <xsd:documentation>DEPRECATED.
Please use definitions in PricingInfo: ReservationsDateTime, HistoricPricingDate, AltTicketingDate.

Historical pricing group. Required if OriginDestination group includes past date segments.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:choice>
        <xsd:sequence>
          <xsd:element minOccurs="0" name="ReservationDateTime">
            <xsd:annotation>
              <xsd:documentation>This timestamp indetifies when PNR was created client application requests historical pricing for.</xsd:documentation>
            </xsd:annotation>
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="Date" type="Date">
                  <xsd:annotation>
                    <xsd:documentation>Specifies departure or arrival date in ISO 8601 format (yyyy-mm-dd). Example: 2001-12-25</xsd:documentation>
                  </xsd:annotation>
                </xsd:element>
                <xsd:element minOccurs="0" name="Time" type="Time">
                  <xsd:annotation>
                    <xsd:documentation>Departure or arrival time in ISO 8601 twenty-four hour clock format. Example: 14:00</xsd:documentation>
                  </xsd:annotation>
                </xsd:element>
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="TicketedDateTime">
            <xsd:annotation>
              <xsd:documentation>Timestamp of ticket issuance  for past date segments in OriginDestination section.</xsd:documentation>
            </xsd:annotation>
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="Date" type="Date">
                  <xsd:annotation>
                    <xsd:documentation>Specifies departure or arrival date in ISO 8601 format (yyyy-mm-dd). Example: 2001-12-25</xsd:documentation>
                  </xsd:annotation>
                </xsd:element>
                <xsd:element minOccurs="0" name="Time" type="Time">
                  <xsd:annotation>
                    <xsd:documentation>Departure or arrival time in ISO 8601 twenty-four hour clock format. Example: 14:00</xsd:documentation>
                  </xsd:annotation>
                </xsd:element>
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
        <xsd:element minOccurs="0" maxOccurs="0" name="RecordLocator" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>FUTURE USE.
	NOT SUPPORTED.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:choice>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="HistoricPricingDate">
    <xsd:annotation>
      <xsd:documentation>Date for which a historical pricing is requested.  When used for ticket reissue in BSP markets this is commonly the issuance date of the original ticket.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="Date" type="Date">
          <xsd:annotation>
            <xsd:documentation>Specifies the date in ISO 8601 format (yyyy-mm-dd). Example: 2008-05-02</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="HotelRating">
    <xsd:annotation>
      <xsd:documentation>Rating of this hotel. Note that this element will eventually supercede the AAARating element definition. The latter will be deprecated soon.
Example: NTM3  CROWN</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:simpleContent>
        <xsd:extension base="xsd:string">
          <xsd:attribute name="RatingSystem">
            <xsd:annotation>
              <xsd:documentation>Identifies the rating system used to rate the hotel. Values are: 
AAA - AAA in US
GUESTS - Guest rating
HRS - Hotel Reservation System 'stars' rating
NTM - North Star Media 'crown' rating.
HBC - Booking.com rating
UNK - unknown.</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
              <xsd:restriction base="xsd:string">
                <xsd:enumeration value="AAA" />
                <xsd:enumeration value="GUESTS" />
                <xsd:enumeration value="HRS" />
                <xsd:enumeration value="NTM" />
                <xsd:enumeration value="UNK" />
                <xsd:enumeration value="HBC" />
              </xsd:restriction>
            </xsd:simpleType>
          </xsd:attribute>
        </xsd:extension>
      </xsd:simpleContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="Identification">
    <xsd:annotation>
      <xsd:documentation>Identification values for requestor, aggregator and airline</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="RequestorInfo">
          <xsd:annotation>
            <xsd:documentation>Requestor identification values </xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:sequence minOccurs="0">
              <xsd:element minOccurs="0" name="UserInfo">
                <xsd:annotation>
                  <xsd:documentation>User Information.</xsd:documentation>
                </xsd:annotation>
                <xsd:complexType>
                  <xsd:simpleContent>
                    <xsd:extension base="xsd:string">
                      <xsd:attribute name="UserID" type="xsd:string" use="required">
                        <xsd:annotation>
                          <xsd:documentation>In case of an agency this is typically the Agent's ID </xsd:documentation>
                        </xsd:annotation>
                      </xsd:attribute>
                      <xsd:attribute name="UserRole" type="xsd:string" use="optional">
                        <xsd:annotation>
                          <xsd:documentation>User's role as set in system provider's requestor profile</xsd:documentation>
                        </xsd:annotation>
                      </xsd:attribute>
                      <xsd:attribute name="UserPW" type="xsd:string" use="optional">
                        <xsd:annotation>
                          <xsd:documentation>User's password</xsd:documentation>
                        </xsd:annotation>
                      </xsd:attribute>
                      <xsd:attribute name="DutyCode" type="xsd:string" use="optional">
                        <xsd:annotation>
                          <xsd:documentation source="DESCRIPTION" xml:lang="en">Agent duty code.
Example: UZ</xsd:documentation>
                        </xsd:annotation>
                      </xsd:attribute>
                      <xsd:attribute name="SignOn" type="xsd:string" use="optional">
                        <xsd:annotation>
                          <xsd:documentation source="DESCRIPTION" xml:lang="en">Agent sign on (SINE).
Example: 6146TL</xsd:documentation>
                        </xsd:annotation>
                      </xsd:attribute>
                      <xsd:attribute name="LNIATA" type="xsd:string" use="optional">
                        <xsd:annotation>
                          <xsd:documentation source="DESCRIPTION" xml:lang="en">Agent CRT or terminal LNIATA number.
Example: 956301007</xsd:documentation>
                        </xsd:annotation>
                      </xsd:attribute>
                    </xsd:extension>
                  </xsd:simpleContent>
                </xsd:complexType>
              </xsd:element>
              <xsd:element minOccurs="0" name="AccountInfo">
                <xsd:annotation>
                  <xsd:documentation>Account info as it relates to a (customer) account of the requestor such as a corporate booking tool</xsd:documentation>
                </xsd:annotation>
                <xsd:complexType>
                  <xsd:sequence minOccurs="0">
                    <xsd:element name="AccountUserInfo">
                      <xsd:annotation>
                        <xsd:documentation>Account User Info</xsd:documentation>
                      </xsd:annotation>
                      <xsd:complexType>
                        <xsd:simpleContent>
                          <xsd:extension base="xsd:string">
                            <xsd:attribute name="AccountUserID" type="xsd:string" use="required">
                              <xsd:annotation>
                                <xsd:documentation>User ID of the account</xsd:documentation>
                              </xsd:annotation>
                            </xsd:attribute>
                          </xsd:extension>
                        </xsd:simpleContent>
                      </xsd:complexType>
                    </xsd:element>
                    <xsd:element minOccurs="0" name="SourceInfo">
                      <xsd:annotation>
                        <xsd:documentation source="DESCRIPTION" xml:lang="en">System source detail used for auditing and traceability.</xsd:documentation>
                      </xsd:annotation>
                      <xsd:complexType>
                        <xsd:sequence>
                          <xsd:element name="IPAddress" type="xsd:string">
                            <xsd:annotation>
                              <xsd:documentation>IP address of the requestor</xsd:documentation>
                            </xsd:annotation>
                          </xsd:element>
                          <xsd:element minOccurs="0" name="IPPort" type="xsd:string">
                            <xsd:annotation>
                              <xsd:documentation>IP port associated to above IP address</xsd:documentation>
                            </xsd:annotation>
                          </xsd:element>
                        </xsd:sequence>
                      </xsd:complexType>
                    </xsd:element>
                  </xsd:sequence>
                  <xsd:attribute name="AccountID" type="xsd:string" use="required">
                    <xsd:annotation>
                      <xsd:documentation>In case of an agency this is typically the Account ID as set up between requestor and client, such as a corporate booking tool </xsd:documentation>
                    </xsd:annotation>
                  </xsd:attribute>
                </xsd:complexType>
              </xsd:element>
              <xsd:element minOccurs="0" name="SourceInfo">
                <xsd:annotation>
                  <xsd:documentation>System source detail used for auditing and traceability.</xsd:documentation>
                </xsd:annotation>
                <xsd:complexType>
                  <xsd:sequence>
                    <xsd:element name="IPAddress" type="xsd:string">
                      <xsd:annotation>
                        <xsd:documentation>IP address of the requestor</xsd:documentation>
                      </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" name="IPPort" type="xsd:string">
                      <xsd:annotation>
                        <xsd:documentation>IP port associated to above IP address</xsd:documentation>
                      </xsd:annotation>
                    </xsd:element>
                  </xsd:sequence>
                </xsd:complexType>
              </xsd:element>
            </xsd:sequence>
            <xsd:attribute name="RequestorID" type="xsd:string" use="required">
              <xsd:annotation>
                <xsd:documentation>In case of an agency this is typically the PCC of the POS agency (PseudoCityCode)</xsd:documentation>
              </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="RequestorIATA" type="xsd:string" use="optional">
              <xsd:annotation>
                <xsd:documentation>Requestor's IATA number (if applicable)</xsd:documentation>
              </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="ReportingAgency" type="xsd:string" use="optional">
              <xsd:annotation>
                <xsd:documentation source="DESCRIPTION" xml:lang="en">Reporting agency.
Examples:
ARC
BSP
Other</xsd:documentation>
              </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="DocStock" type="xsd:string" use="optional">
              <xsd:annotation>
                <xsd:documentation source="DESCRIPTION" xml:lang="en">Stock to be used.
Examples: BSP, AL</xsd:documentation>
              </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="RequestorName" type="xsd:string" use="optional">
              <xsd:annotation>
                <xsd:documentation source="DESCRIPTION" xml:lang="en">Requestor name.
Example: UNITED AIRLINES</xsd:documentation>
              </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="RequestorPW" type="xsd:string" use="optional">
              <xsd:annotation>
                <xsd:documentation source="DESCRIPTION" xml:lang="en">Requestor password.</xsd:documentation>
              </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="RequestorType" type="xsd:string" use="optional">
              <xsd:annotation>
                <xsd:documentation source="DESCRIPTION" xml:lang="en">Requestor type.
Example:
A (Airline)
C (Consolidator)
E (Electronic Selling System)
G (General Sales Agent)
I (Internal CRS Locations)
T (Travel Agent)
V (Vendor)
W (Wholesaler/Tour Operator)</xsd:documentation>
              </xsd:annotation>
            </xsd:attribute>
          </xsd:complexType>
        </xsd:element>
        <xsd:element minOccurs="0" maxOccurs="2" name="AggregatorInfo">
          <xsd:annotation>
            <xsd:documentation>Aggregator identification values </xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:sequence>
              <xsd:element minOccurs="0" name="SourceInfo">
                <xsd:annotation>
                  <xsd:documentation source="DESCRIPTION" xml:lang="en">System source detail used for auditing and traceability.</xsd:documentation>
                </xsd:annotation>
                <xsd:complexType>
                  <xsd:sequence>
                    <xsd:element name="IPAddress" type="xsd:string">
                      <xsd:annotation>
                        <xsd:documentation>IP address of the requestor</xsd:documentation>
                      </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" name="IPPort" type="xsd:string">
                      <xsd:annotation>
                        <xsd:documentation>IP port associated to above IP address</xsd:documentation>
                      </xsd:annotation>
                    </xsd:element>
                  </xsd:sequence>
                </xsd:complexType>
              </xsd:element>
            </xsd:sequence>
            <xsd:attribute name="AggregatorID" type="xsd:string" use="required">
              <xsd:annotation>
                <xsd:documentation>ID of the aggregating entity, such as GDS, OTA, MetaSearch, etc.</xsd:documentation>
              </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="AggregatorPW" type="xsd:string" use="optional">
              <xsd:annotation>
                <xsd:documentation>Aggregator's password</xsd:documentation>
              </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="AggregatorType" type="xsd:string" use="optional">
              <xsd:annotation>
                <xsd:documentation>Values as per IATA's AIRIMP are as follows:
A - Airline
E - ERSP (Electronic Reservation System Provider)
N - Requestor has no identification
T - Requestor has a user identification number assigned by IATA/ARC other than ERSP</xsd:documentation>
              </xsd:annotation>
            </xsd:attribute>
          </xsd:complexType>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="InfoGroup">
    <xsd:annotation>
      <xsd:documentation>Error and information group</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" maxOccurs="unbounded" ref="ForInfo" />
        <xsd:element minOccurs="0" maxOccurs="unbounded" ref="Error" />
        <xsd:element minOccurs="0" maxOccurs="unbounded" ref="MarketingData" />
        <xsd:element minOccurs="0" name="BackOffice">
          <xsd:annotation>
            <xsd:documentation>Used by certain applications to relay data</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:sequence minOccurs="0">
              <xsd:element minOccurs="0" name="Services">
                <xsd:complexType>
                  <xsd:sequence minOccurs="0">
                    <xsd:element minOccurs="0" maxOccurs="unbounded" name="Service">
                      <xsd:complexType>
                        <xsd:sequence minOccurs="0">
                          <xsd:element minOccurs="0" maxOccurs="unbounded" ref="SegmentIDRef" />
                        </xsd:sequence>
                        <xsd:attribute name="Type">
                          <xsd:annotation>
                            <xsd:documentation>Offer Code</xsd:documentation>
                          </xsd:annotation>
                          <xsd:simpleType>
                            <xsd:restriction base="xsd:string">
                              <xsd:enumeration value="CDA" />
                              <xsd:enumeration value="CDD" />
                              <xsd:enumeration value="BSD" />
                              <xsd:enumeration value="BSA" />
                              <xsd:enumeration value="STPC" />
                            </xsd:restriction>
                          </xsd:simpleType>
                        </xsd:attribute>
                        <xsd:attribute name="Text" type="xsd:string">
                          <xsd:annotation>
                            <xsd:documentation>Description</xsd:documentation>
                          </xsd:annotation>
                        </xsd:attribute>
                        <xsd:attribute name="Offer">
                          <xsd:annotation>
                            <xsd:documentation>Offer indicator if present set to Y</xsd:documentation>
                          </xsd:annotation>
                          <xsd:simpleType>
                            <xsd:restriction base="xsd:string">
                              <xsd:enumeration value="Y" />
                            </xsd:restriction>
                          </xsd:simpleType>
                        </xsd:attribute>
                      </xsd:complexType>
                    </xsd:element>
                  </xsd:sequence>
                </xsd:complexType>
              </xsd:element>
              <xsd:element minOccurs="0" name="MerchTxnRef" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>Transaction number returned by Credit Card Merchant Provider</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" name="ReceiptNo" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>Complements the MechTxnRef - returned by Credit Card Merchant Provider</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
            </xsd:sequence>
          </xsd:complexType>
        </xsd:element>
        <xsd:element minOccurs="0" name="FeeGroup">
          <xsd:annotation>
            <xsd:documentation>OB Fees associated with PNR - These are only indicative and actual fees will be calculated an applied udring ticketing. Returned if PNRRetrieveRQ/Display/OBFees is set to "Y" and the carrier files OB fees.</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:sequence>
              <xsd:element ref="CurrencyCode" />
              <xsd:element maxOccurs="unbounded" name="Fee">
                <xsd:complexType>
                  <xsd:sequence>
                    <xsd:element name="Amount" type="xsd:integer">
                      <xsd:annotation>
                        <xsd:documentation>Fee amount. Example: 2000</xsd:documentation>
                      </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" name="Description" type="xsd:string">
                      <xsd:annotation>
                        <xsd:documentation>Title description (Commercial Name) of Fee.

Example: "Credit Card Fee"</xsd:documentation>
                      </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" name="Taxes">
                      <xsd:annotation>
                        <xsd:documentation>Tax Group</xsd:documentation>
                      </xsd:annotation>
                      <xsd:complexType>
                        <xsd:sequence>
                          <xsd:element minOccurs="0" maxOccurs="unbounded" name="Tax">
                            <xsd:annotation>
                              <xsd:documentation>Tax break down information group </xsd:documentation>
                            </xsd:annotation>
                            <xsd:complexType>
                              <xsd:sequence minOccurs="0">
                                <xsd:element name="Designator" type="xsd:string">
                                  <xsd:annotation>
                                    <xsd:documentation>Tax or surcharge designator.  Example: US</xsd:documentation>
                                  </xsd:annotation>
                                </xsd:element>
                                <xsd:element minOccurs="0" name="Description" type="xsd:string">
                                  <xsd:annotation>
                                    <xsd:documentation>Tax or surcharge description.  Example: US national transportation</xsd:documentation>
                                  </xsd:annotation>
                                </xsd:element>
                              </xsd:sequence>
                              <xsd:attribute name="Amount" type="xsd:integer" use="required">
                                <xsd:annotation>
                                  <xsd:documentation>Individual tax amount.  Example: 250</xsd:documentation>
                                </xsd:annotation>
                              </xsd:attribute>
                              <xsd:attribute name="Refundable" use="optional">
                                <xsd:annotation>
                                  <xsd:documentation>Indicates if tax is refundable.  Values are:
Y = Tax refundable (default)
N = Tax not refundable
Example: N</xsd:documentation>
                                </xsd:annotation>
                                <xsd:simpleType>
                                  <xsd:restriction base="xsd:string">
                                    <xsd:enumeration value="Y" />
                                    <xsd:enumeration value="N" />
                                  </xsd:restriction>
                                </xsd:simpleType>
                              </xsd:attribute>
                            </xsd:complexType>
                          </xsd:element>
                        </xsd:sequence>
                        <xsd:attribute name="Amount" type="xsd:integer" use="required">
                          <xsd:annotation>
                            <xsd:documentation>Total taxes amount.  Example: 750</xsd:documentation>
                          </xsd:annotation>
                        </xsd:attribute>
                      </xsd:complexType>
                    </xsd:element>
                    <xsd:element minOccurs="0" name="TravelerElementNumber" type="xsd:string">
                      <xsd:annotation>
                        <xsd:documentation>PNR element number.  Example: 1</xsd:documentation>
                      </xsd:annotation>
                    </xsd:element>
                  </xsd:sequence>
                  <xsd:attribute name="ServiceCode">
                    <xsd:annotation>
                      <xsd:documentation>Additional unique ATPCO code. Please refer to FLX Codeset document for acceptable values.
Example: OC</xsd:documentation>
                    </xsd:annotation>
                  </xsd:attribute>
                  <xsd:attribute name="SubCode">
                    <xsd:annotation>
                      <xsd:documentation>ATPCO RFISC (ReasonForIssuance  Subcode).
Example of RFISC: 0CC</xsd:documentation>
                    </xsd:annotation>
                  </xsd:attribute>
                  <xsd:attribute name="Refundable">
                    <xsd:annotation>
                      <xsd:documentation>Indicates if fee is refundable.  Values are:
Y = Fee refundable  N = Fee not refundable. If attribute is not there then
default is Y.</xsd:documentation>
                    </xsd:annotation>
                    <xsd:simpleType>
                      <xsd:restriction base="xsd:string">
                        <xsd:length value="1" />
                      </xsd:restriction>
                    </xsd:simpleType>
                  </xsd:attribute>
                </xsd:complexType>
              </xsd:element>
            </xsd:sequence>
          </xsd:complexType>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="Initial">
    <xsd:annotation>
      <xsd:documentation>Traveler middle name or  initial.  Example: G or Gary</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleType>
      <xsd:restriction base="xsd:string" />
    </xsd:simpleType>
  </xsd:element>
  <xsd:element name="Latitude">
    <xsd:annotation>
      <xsd:documentation>Geographical information for latitude. If sign attribute is missing, positive values stand for North, negative values for South. Example: 49.9856</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:simpleContent>
        <xsd:extension base="xsd:decimal">
          <xsd:attribute name="Sign">
            <xsd:annotation>
              <xsd:documentation>Latitude Indicator.  Values are: N = North of Equator S = South of Equator  Example: S</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
              <xsd:restriction base="xsd:string">
                <xsd:enumeration value="S" />
                <xsd:enumeration value="N" />
              </xsd:restriction>
            </xsd:simpleType>
          </xsd:attribute>
        </xsd:extension>
      </xsd:simpleContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="Longitude">
    <xsd:annotation>
      <xsd:documentation>Geographical information for longitude. If sign attribute is missing, positive values stand for East, negative values for West. Example: 9.1220</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:simpleContent>
        <xsd:extension base="xsd:decimal">
          <xsd:attribute name="Sign">
            <xsd:annotation>
              <xsd:documentation>Longitude indicator.  Values are: E = East of Meridian, W = West of Meridian  Example: E</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
              <xsd:restriction base="xsd:string">
                <xsd:enumeration value="E" />
                <xsd:enumeration value="W" />
              </xsd:restriction>
            </xsd:simpleType>
          </xsd:attribute>
        </xsd:extension>
      </xsd:simpleContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="MarketingData">
    <xsd:annotation>
      <xsd:documentation>Marketing Messages and Multimedia Links.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" name="MediaContent">
          <xsd:annotation>
            <xsd:documentation source="DESCRIPTION" xml:lang="en">Media content information.</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:sequence>
              <xsd:element minOccurs="0" name="Images">
                <xsd:annotation>
                  <xsd:documentation source="DESCRIPTION" xml:lang="en">Image information.</xsd:documentation>
                </xsd:annotation>
                <xsd:complexType>
                  <xsd:sequence>
                    <xsd:element maxOccurs="unbounded" name="Image">
                      <xsd:annotation>
                        <xsd:documentation source="DESCRIPTION" xml:lang="en">Image detail.</xsd:documentation>
                      </xsd:annotation>
                      <xsd:complexType>
                        <xsd:sequence>
                          <xsd:element name="Height">
                            <xsd:annotation>
                              <xsd:documentation>Height of media content in specified units.</xsd:documentation>
                            </xsd:annotation>
                            <xsd:complexType>
                              <xsd:simpleContent>
                                <xsd:extension base="xsd:int">
                                  <xsd:attribute name="Unit" type="xsd:string" use="required">
                                    <xsd:annotation>
                                      <xsd:documentation source="DESCRIPTION" xml:lang="en">Dimension unit.
Examples:
MM (MILLIMETER)
PX (PIXEL)</xsd:documentation>
                                      <xsd:documentation source="ENCODING" xml:lang="en">Select a value from the enumerated list or enter a string value.
=enumerated values=
MM = MILLIMETER
PX = PIXEL</xsd:documentation>
                                    </xsd:annotation>
                                  </xsd:attribute>
                                </xsd:extension>
                              </xsd:simpleContent>
                            </xsd:complexType>
                          </xsd:element>
                          <xsd:element name="Width">
                            <xsd:annotation>
                              <xsd:documentation>Width of media content in specified units.</xsd:documentation>
                            </xsd:annotation>
                            <xsd:complexType>
                              <xsd:simpleContent>
                                <xsd:extension base="xsd:int">
                                  <xsd:attribute name="Unit" type="xsd:string" use="required">
                                    <xsd:annotation>
                                      <xsd:documentation source="DESCRIPTION" xml:lang="en">Dimension unit.
Examples:
MM (MILLIMETER)
PX (PIXEL)</xsd:documentation>
                                      <xsd:documentation source="ENCODING" xml:lang="en">Select a value from the enumerated list or enter a string value.
=enumerated values=
MM = MILLIMETER
PX = PIXEL</xsd:documentation>
                                    </xsd:annotation>
                                  </xsd:attribute>
                                </xsd:extension>
                              </xsd:simpleContent>
                            </xsd:complexType>
                          </xsd:element>
                          <xsd:element minOccurs="0" name="ImageData" type="xsd:string">
                            <xsd:annotation>
                              <xsd:documentation source="DESCRIPTION" xml:lang="en">Encoded image value, typically in base64.</xsd:documentation>
                            </xsd:annotation>
                          </xsd:element>
                          <xsd:element minOccurs="0" name="ImageText">
                            <xsd:annotation>
                              <xsd:documentation source="DESCRIPTION" xml:lang="en">Media associated text.</xsd:documentation>
                            </xsd:annotation>
                            <xsd:complexType>
                              <xsd:sequence>
                                <xsd:element maxOccurs="unbounded" name="Text">
                                  <xsd:simpleType>
                                    <xsd:restriction base="xsd:string">
                                      <xsd:minLength value="1" />
                                    </xsd:restriction>
                                  </xsd:simpleType>
                                </xsd:element>
                              </xsd:sequence>
                            </xsd:complexType>
                          </xsd:element>
                        </xsd:sequence>
                        <xsd:attribute name="ImageID" type="xsd:string" use="optional">
                          <xsd:annotation>
                            <xsd:documentation source="DESCRIPTION" xml:lang="en">Unique media ID.
Examples:
IMG713
SFO_LOUNGE</xsd:documentation>
                            <xsd:documentation source="GUIDELINES" xml:lang="en">=notes=
1. Provides an unique ID for any available images returned in any responsemessages.
2. FileRetrieveRQ/ FileListRS will utilize these ID's to retrieve the full image(s) as needed.</xsd:documentation>
                          </xsd:annotation>
                        </xsd:attribute>
                        <xsd:attribute name="Caption" type="xsd:string" use="optional">
                          <xsd:annotation>
                            <xsd:documentation source="DESCRIPTION" xml:lang="en">Media caption.
Example: PREMIUM SEAT</xsd:documentation>
                          </xsd:annotation>
                        </xsd:attribute>
                        <xsd:attribute name="Symbology" type="xsd:string" use="optional">
                          <xsd:annotation>
                            <xsd:documentation source="DESCRIPTION" xml:lang="en">Barcode symbology applied.
Example: PDF417</xsd:documentation>
                          </xsd:annotation>
                        </xsd:attribute>
                        <xsd:attribute name="Encoding" type="xsd:string" use="optional">
                          <xsd:annotation>
                            <xsd:documentation source="DESCRIPTION" xml:lang="en">Media encoding method.
Example: BASE64</xsd:documentation>
                          </xsd:annotation>
                        </xsd:attribute>
                        <xsd:attribute name="Format" type="xsd:string" use="optional">
                          <xsd:annotation>
                            <xsd:documentation source="DESCRIPTION" xml:lang="en">Media format.
Example: JPEG</xsd:documentation>
                          </xsd:annotation>
                        </xsd:attribute>
                      </xsd:complexType>
                    </xsd:element>
                  </xsd:sequence>
                </xsd:complexType>
              </xsd:element>
              <xsd:element minOccurs="0" name="MediaLinks">
                <xsd:annotation>
                  <xsd:documentation source="DESCRIPTION" xml:lang="en">Link information.</xsd:documentation>
                </xsd:annotation>
                <xsd:complexType>
                  <xsd:sequence>
                    <xsd:element maxOccurs="unbounded" name="Link">
                      <xsd:annotation>
                        <xsd:documentation source="DESCRIPTION" xml:lang="en">Link detail.</xsd:documentation>
                      </xsd:annotation>
                      <xsd:complexType>
                        <xsd:simpleContent>
                          <xsd:extension base="xsd:anyURI">
                            <xsd:attribute name="LinkID" type="xsd:string" use="optional">
                              <xsd:annotation>
                                <xsd:documentation source="DESCRIPTION" xml:lang="en">Unique link ID.
Example: SFOLOUNGE</xsd:documentation>
                              </xsd:annotation>
                            </xsd:attribute>
                            <xsd:attribute name="Caption" type="xsd:string" use="optional">
                              <xsd:annotation>
                                <xsd:documentation source="DESCRIPTION" xml:lang="en">Caption or label.
Example: PREMIUM SEAT</xsd:documentation>
                              </xsd:annotation>
                            </xsd:attribute>
                            <xsd:attribute name="Type" type="xsd:string" use="optional">
                              <xsd:annotation>
                                <xsd:documentation source="DESCRIPTION" xml:lang="en">Media link type.
Example:
DET (Details)
DIS (Disclosure)
VID (Video)
CAM (Webcam)
PGE (Webpage)</xsd:documentation>
                              </xsd:annotation>
                            </xsd:attribute>
                          </xsd:extension>
                        </xsd:simpleContent>
                      </xsd:complexType>
                    </xsd:element>
                  </xsd:sequence>
                </xsd:complexType>
              </xsd:element>
            </xsd:sequence>
          </xsd:complexType>
        </xsd:element>
        <xsd:element minOccurs="0" maxOccurs="unbounded" name="Message">
          <xsd:annotation>
            <xsd:documentation source="DESCRIPTION" xml:lang="en">Marketing message.
Example: ONE TRAVELER MAY BE ELIGIBLE FOR A FREE SEAT</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:sequence>
              <xsd:element maxOccurs="unbounded" name="Text">
                <xsd:simpleType>
                  <xsd:restriction base="xsd:string">
                    <xsd:minLength value="1" />
                  </xsd:restriction>
                </xsd:simpleType>
              </xsd:element>
            </xsd:sequence>
          </xsd:complexType>
        </xsd:element>
      </xsd:sequence>
      <xsd:attribute name="Source" type="xsd:string" use="optional">
        <xsd:annotation>
          <xsd:documentation>Identifies the source of this  element. In other words where the content originates from. Not limited to GDS, applicable to direct connect as well. Example: 1A, 1V, or other. </xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="NegoRateCode">
    <xsd:annotation>
      <xsd:documentation>Negotiated rate code.</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleType>
      <xsd:restriction base="xsd:string">
        <xsd:minLength value="1" />
      </xsd:restriction>
    </xsd:simpleType>
  </xsd:element>
  <xsd:element name="NVA" type="xsd:date">
    <xsd:annotation>
      <xsd:documentation>Identifies "not valid after" date for a fare.Date in ISO 8601 format (yyyy-mm-dd).  Example: 2001-12-25</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="NVB" type="xsd:date">
    <xsd:annotation>
      <xsd:documentation>Identifies "not valid before" date for a fare. Date in ISO 8601 format (yyyy-mm-dd).  Example: 2001-12-25</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="POIDistance">
    <xsd:annotation>
      <xsd:documentation>Distance to a point of interest. Will somewhen replace DistanceToAirport. Example: 5.5</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:simpleContent>
        <xsd:extension base="xsd:decimal">
          <xsd:attribute name="POIType" use="required">
            <xsd:annotation>
              <xsd:documentation>Point of interest type. Example: AIRPORT</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
              <xsd:restriction base="xsd:string">
                <xsd:enumeration value="AIRPORT" />
                <xsd:enumeration value="TRAIN STATION" />
                <xsd:enumeration value="CITY CENTER" />
                <xsd:enumeration value="HIGHWAY" />
                <xsd:enumeration value="SHOPPING" />
                <xsd:enumeration value="PETROL STATION" />
                <xsd:enumeration value="THEATER" />
                <xsd:enumeration value="CINEMA" />
                <xsd:enumeration value="CAR RENTAL STATION" />
                <xsd:enumeration value="UNKNOWN" />
                <xsd:enumeration value="LOCATION" />
              </xsd:restriction>
            </xsd:simpleType>
          </xsd:attribute>
          <xsd:attribute name="POIName" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>Point of interest name.
Example: FRANKFURT/MAIN </xsd:documentation>
            </xsd:annotation>
          </xsd:attribute>
        </xsd:extension>
      </xsd:simpleContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="PriceRefKey">
    <xsd:annotation>
      <xsd:documentation>Unique price reference key. Key must be included in request message if present in previous offer (response) message, </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleType>
      <xsd:restriction base="xsd:string">
        <xsd:minLength value="1" />
      </xsd:restriction>
    </xsd:simpleType>
  </xsd:element>
  <xsd:element name="ReferenceData">
    <xsd:annotation>
      <xsd:documentation>Displays generic refence data such as aiport code, GEO coordinates, names, car, hotel other.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="Airport">
          <xsd:annotation>
            <xsd:documentation>Aiport code and associated GEO coordinates (latitude and longitude).</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:attribute name="Code" use="required">
              <xsd:annotation>
                <xsd:documentation>IATA 3-letter airport code.
Example: MIA</xsd:documentation>
              </xsd:annotation>
              <xsd:simpleType>
                <xsd:restriction base="xsd:string">
                  <xsd:length value="3" />
                </xsd:restriction>
              </xsd:simpleType>
            </xsd:attribute>
            <xsd:attribute name="Long" type="xsd:double" use="required">
              <xsd:annotation>
                <xsd:documentation>Longitude.
Example: -80.277922</xsd:documentation>
              </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="Lat" type="xsd:double" use="required">
              <xsd:annotation>
                <xsd:documentation>Latitude.
Example: 25.795343</xsd:documentation>
              </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="Name" type="xsd:string">
              <xsd:annotation>
                <xsd:documentation>Airport name</xsd:documentation>
              </xsd:annotation>
            </xsd:attribute>
          </xsd:complexType>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="ReferenceDefinitions">
    <xsd:annotation>
      <xsd:documentation>PNR element association information.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" maxOccurs="unbounded" name="TravelerRefInfo">
          <xsd:complexType>
            <xsd:sequence>
              <xsd:element ref="Surname" />
              <xsd:element ref="GivenName" />
              <xsd:element minOccurs="0" ref="Initial" />
              <xsd:element minOccurs="0" ref="DateOfBirth" />
              <xsd:element minOccurs="0" ref="Gender" />
            </xsd:sequence>
            <xsd:attribute name="PaxType" type="xsd:string" />
            <xsd:attribute name="AssociationID" type="xsd:string" />
          </xsd:complexType>
        </xsd:element>
        <xsd:element minOccurs="0" maxOccurs="unbounded" name="FlightRefInfo">
          <xsd:complexType>
            <xsd:sequence>
              <xsd:element ref="AirlineCode" />
              <xsd:element ref="FlightNumber" />
              <xsd:element ref="Departure" />
              <xsd:element ref="Arrival" />
              <xsd:element ref="ClassOfService" />
            </xsd:sequence>
            <xsd:attribute name="AssociationID" type="xsd:string" />
          </xsd:complexType>
        </xsd:element>
        <xsd:element minOccurs="0" maxOccurs="unbounded" name="ServiceRefInfo">
          <xsd:complexType>
            <xsd:sequence>
              <xsd:element name="ReasonCode" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>IATA RFIC (ReasonFor IssuanceCode, a 1-character main code)
Example of RFIC: A  

Note: Only services of same RFIC code can be combined on an EMD-A document.  For example, if there are services of RFIC code "A" and "B", two separate EMD documents are needed, issuing all services of "A" and "B" on seperate docs.</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element name="SubCode" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>ATPCO RFIS (ReasonForIssuance  Subcode).
Example of RFIS: 0CC </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element ref="TravelerIDRef" />
              <xsd:element minOccurs="0" maxOccurs="unbounded" ref="SegmentIDRef" />
            </xsd:sequence>
            <xsd:attribute name="AssociationID" type="xsd:string" />
          </xsd:complexType>
        </xsd:element>
        <xsd:element minOccurs="0" maxOccurs="unbounded" name="FareRefInfo">
          <xsd:complexType>
            <xsd:sequence>
              <xsd:element maxOccurs="unbounded" name="TravelerGroup">
                <xsd:complexType>
                  <xsd:sequence>
                    <xsd:element name="TypePriced" type="xsd:string">
                      <xsd:annotation>
                        <xsd:documentation>Passenger type being priced. This type can be different from the type requested if there is no available fare for the requested type.  For example the requested type is GOV and the priced type is ADT because there is no available fare for type GOV and there is an available fare for type ADT.  If the passenger type sent by the GDS is not the below predefined list, then it is shown as is.  Predefined values are:
ADT= Adult
CHD = Child
INF = Infant
GOV = Government
MIL = Military
SRC = Senior citizen
STD = Student
YTH = Youth
Example: ADT</xsd:documentation>
                      </xsd:annotation>
                    </xsd:element>
                    <xsd:element maxOccurs="unbounded" ref="TravelerIDRef" />
                    <xsd:element name="FareCalculation">
                      <xsd:annotation>
                        <xsd:documentation>FareCalculation Line</xsd:documentation>
                      </xsd:annotation>
                      <xsd:simpleType>
                        <xsd:restriction base="xsd:string">
                          <xsd:minLength value="1" />
                        </xsd:restriction>
                      </xsd:simpleType>
                    </xsd:element>
                  </xsd:sequence>
                </xsd:complexType>
              </xsd:element>
            </xsd:sequence>
            <xsd:attribute name="AssociationID" type="xsd:string" />
          </xsd:complexType>
        </xsd:element>
        <xsd:element minOccurs="0" maxOccurs="unbounded" name="SeatRefInfo">
          <xsd:complexType>
            <xsd:sequence>
              <xsd:element ref="TravelerIDRef" />
              <xsd:element ref="SegmentIDRef" />
              <xsd:element name="SeatLocation" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>Seat assignment location.  Example: 03A</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
            </xsd:sequence>
            <xsd:attribute name="AssociationID" type="xsd:string" />
          </xsd:complexType>
        </xsd:element>
        <xsd:element minOccurs="0" maxOccurs="unbounded" name="ChangeRefInfo">
          <xsd:complexType>
            <xsd:sequence>
              <xsd:element minOccurs="0" ref="TravelerIDRef" />
              <xsd:element minOccurs="0" ref="SegmentIDRef" />
              <xsd:element minOccurs="0" name="ServiceIDRef">
                <xsd:annotation>
                  <xsd:documentation>ID reference used to associate this item to a service. No comma separated lists and no ranges supported. Example: S1</xsd:documentation>
                </xsd:annotation>
                <xsd:complexType>
                  <xsd:attributeGroup ref="RefType" />
                </xsd:complexType>
              </xsd:element>
              <xsd:element minOccurs="0" name="FFNumber" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>Frequent flyer number.  Example: 0956301007</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" maxOccurs="unbounded" name="FOPOther">
                <xsd:annotation>
                  <xsd:documentation>"Other" FOP such as Check, Cash etc</xsd:documentation>
                </xsd:annotation>
                <xsd:complexType>
                  <xsd:simpleContent>
                    <xsd:extension base="xsd:string" />
                  </xsd:simpleContent>
                </xsd:complexType>
              </xsd:element>
              <xsd:element minOccurs="0" name="CCNumber" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>Credit card number.  Example: 4011236654652341

Can be returned encrypted.
Example: XXXXXXXXXXXX2341</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" name="Email" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>Seat assignment location.  Example: 03A</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" name="TelephoneNumber" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>Seat assignment location.  Example: 03A</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" ref="Text" />
              <xsd:element minOccurs="0" name="SSRCode" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>Special service request code.  IATA standard.  Example: VGML</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" name="TktDate" type="xsd:date">
                <xsd:annotation>
                  <xsd:documentation>Ticketing date </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" name="TktTime" type="xsd:time">
                <xsd:annotation>
                  <xsd:documentation>TicketingTime</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" name="Address" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>Address</xsd:documentation>
                  <xsd:documentation>Address type.  Example: HOME</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" name="CLIDNumber">
                <xsd:annotation>
                  <xsd:documentation>CorporateID. Example: C900395168859</xsd:documentation>
                </xsd:annotation>
                <xsd:simpleType>
                  <xsd:restriction base="xsd:string">
                    <xsd:maxLength value="50" />
                    <xsd:minLength value="1" />
                  </xsd:restriction>
                </xsd:simpleType>
              </xsd:element>
              <xsd:element minOccurs="0" name="CLIDStatus" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>CLID level for this member as provided by airline's database.</xsd:documentation>
                  <xsd:appinfo>
                    <title xmlns="">Schematron Release Notes</title>
                    <change version="2.0" change="V2-Child elements should have defined types." changeDetail="Element typed as xsd:string" xmlns="" />
                  </xsd:appinfo>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" name="CLIDCompanyCode">
                <xsd:annotation>
                  <xsd:documentation source="description" xml:lang="en">Airline code of the program/ membership sponsoring airline.</xsd:documentation>
                </xsd:annotation>
                <xsd:complexType>
                  <xsd:simpleContent>
                    <xsd:extension base="xsd:string" />
                  </xsd:simpleContent>
                </xsd:complexType>
              </xsd:element>
              <xsd:element minOccurs="0" name="CLIDCompanyName">
                <xsd:annotation>
                  <xsd:documentation source="description" xml:lang="en">Name of the program/ membership sponsoring airline.</xsd:documentation>
                </xsd:annotation>
                <xsd:complexType>
                  <xsd:simpleContent>
                    <xsd:extension base="xsd:string" />
                  </xsd:simpleContent>
                </xsd:complexType>
              </xsd:element>
            </xsd:sequence>
            <xsd:attribute name="AssociationID" type="xsd:string" />
          </xsd:complexType>
        </xsd:element>
        <xsd:element minOccurs="0" maxOccurs="unbounded" name="DeleteOtherRefInfo">
          <xsd:complexType>
            <xsd:sequence>
              <xsd:element minOccurs="0" ref="TravelerIDRef" />
              <xsd:element minOccurs="0" ref="SegmentIDRef" />
              <xsd:element minOccurs="0" name="ServiceIDRef">
                <xsd:annotation>
                  <xsd:documentation>ID reference used to associate this item to a service. No comma separated lists and no ranges supported. Example: S1</xsd:documentation>
                </xsd:annotation>
                <xsd:complexType>
                  <xsd:attributeGroup ref="RefType" />
                </xsd:complexType>
              </xsd:element>
              <xsd:element minOccurs="0" name="FFNumber" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>Frequent flyer number.  Example: 0956301007</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" maxOccurs="unbounded" name="FOPOther">
                <xsd:annotation>
                  <xsd:documentation>Form of payment other than credit card</xsd:documentation>
                </xsd:annotation>
                <xsd:complexType>
                  <xsd:simpleContent>
                    <xsd:extension base="xsd:string" />
                  </xsd:simpleContent>
                </xsd:complexType>
              </xsd:element>
              <xsd:element minOccurs="0" name="CCNumber" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>Credit card number.  Example: 4011236654652341

Can be returned encrypted.
Example: XXXXXXXXXXXX2341</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" name="Email" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>Seat assignment location.  Example: 03A</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" name="TelephoneNumber" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>Seat assignment location.  Example: 03A</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" ref="Text" />
              <xsd:element minOccurs="0" name="SSRCode" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>Special service request code.  IATA standard.  Example: VGML</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" name="OSICode" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>Conventional code (AIRIMP code) for other service information. Recommended to use when sending OSI to airline. Example: CTCA</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" name="ServiceTrxRefKey" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>Data binding reference key created for each supported PNR element such as "Services".

Generate standard 36 character GUID (example 540c2d5f-a9ab-4414-bd36-9999f5388773) and convert to base64 (example Xy0MVKupFES9NpmZ9TiHcw).  Result is unique 22 character key.</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" name="TktDate" type="xsd:date">
                <xsd:annotation>
                  <xsd:documentation>Ticketing date </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" name="TktTime" type="xsd:time">
                <xsd:annotation>
                  <xsd:documentation>TicketingTime</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" name="Address" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>Address</xsd:documentation>
                  <xsd:documentation>Address type.  Example: HOME</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" name="CLIDNumber">
                <xsd:annotation>
                  <xsd:documentation>CorporateID. Example: C900395168859</xsd:documentation>
                </xsd:annotation>
                <xsd:simpleType>
                  <xsd:restriction base="xsd:string">
                    <xsd:length value="50" />
                  </xsd:restriction>
                </xsd:simpleType>
              </xsd:element>
              <xsd:element minOccurs="0" name="CLIDStatus" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>CLID level for this member as provided by airline's database.</xsd:documentation>
                  <xsd:appinfo>
                    <title xmlns="">Schematron Release Notes</title>
                    <change version="2.0" change="V2-Child elements should have defined types." changeDetail="Element typed as xsd:string" xmlns="" />
                  </xsd:appinfo>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" name="CLIDCompanyCode">
                <xsd:annotation>
                  <xsd:documentation source="description" xml:lang="en">Airline code of the program/ membership sponsoring airline.</xsd:documentation>
                </xsd:annotation>
                <xsd:complexType>
                  <xsd:simpleContent>
                    <xsd:extension base="xsd:string" />
                  </xsd:simpleContent>
                </xsd:complexType>
              </xsd:element>
              <xsd:element minOccurs="0" name="CLIDCompanyName">
                <xsd:annotation>
                  <xsd:documentation source="description" xml:lang="en">Name of the program/ membership sponsoring airline.</xsd:documentation>
                </xsd:annotation>
                <xsd:complexType>
                  <xsd:simpleContent>
                    <xsd:extension base="xsd:string" />
                  </xsd:simpleContent>
                </xsd:complexType>
              </xsd:element>
            </xsd:sequence>
            <xsd:attribute name="AssociationID" type="xsd:string" />
          </xsd:complexType>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="ReservationsDateTime">
    <xsd:annotation>
      <xsd:documentation>Date/time when the entire booking was reserved.  Alternatively this date/time may be set independently for each flight - see ReservationsDateTime element in the Flight element of the OriginDestination element(s).</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:choice>
        <xsd:sequence>
          <xsd:element name="Date" type="Date">
            <xsd:annotation>
              <xsd:documentation>Specifies date in ISO 8601 format (yyyy-mm-dd). Example: 2001-12-25</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="Time" type="Time">
            <xsd:annotation>
              <xsd:documentation>Specifies time in ISO 8601 twenty-four hour clock format. Example: 14:00</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
        <xsd:element name="TimeStamp" type="xsd:dateTime">
          <xsd:annotation>
            <xsd:documentation source="DESCRIPTION" xml:lang="en">Full timestamp.
Example: 2013-01-13T13:20:00</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:choice>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="Response">
    <xsd:annotation>
      <xsd:documentation>Custom response to each control sent to the GUI in the "CustomRequest" request.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" maxOccurs="unbounded" name="Value" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Value(s) entered or selected by the user.

The value(s) are always the "GUILabel(s)" as selected.

In case of a textbox or combobox entry it is the value entered by the user.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
      <xsd:attribute name="PNRLabel" type="xsd:string" use="required">
        <xsd:annotation>
          <xsd:documentation>Description to be used to enter the returned value into a PNR General Remark element. Value is passed thru from the request - if provided.

This label can be used by the DM rule or the DC adaptor to create a PNR remark storing the returned value.  If e.g. the value here is "ProjectID" then a remark may be added to the PNR like this:

"ProjectID: 105514"</xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="S5">
    <xsd:annotation>
      <xsd:documentation>Shows ATPCO record S5 diagnostic infromation </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:attribute name="uid" type="xsd:integer" />
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="S7">
    <xsd:annotation>
      <xsd:documentation>Shows ATPCO record S7 diagnostic infromation </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:attribute name="uid" type="xsd:integer" />
      <xsd:attribute name="seq" type="xsd:integer">
        <xsd:annotation>
          <xsd:documentation>ATPCO table seq number </xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="excess_first" type="xsd:integer">
        <xsd:annotation>
          <xsd:documentation>represent the first occurrence of the excess bag.</xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="excess_last" type="xsd:integer">
        <xsd:annotation>
          <xsd:documentation>represent the last occurrence of the excess bag.</xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="SaleInfo">
    <xsd:annotation>
      <xsd:documentation>Point of Sale information</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" ref="CityCode">
          <xsd:annotation>
            <xsd:documentation>Point of Sale City Code 
Example: BOS</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" ref="CountryCode">
          <xsd:annotation>
            <xsd:documentation>Point of Sale Country Code 
Example: US</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="CurrencyCode">
          <xsd:annotation>
            <xsd:documentation>Point of Sale Currency Code
Example: USD</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:simpleContent>
              <xsd:restriction base="CurrencyCodeType">
                <xsd:pattern value="[A-Z0-9]{3}" />
                <xsd:attribute name="NumberOfDecimals" type="xsd:integer" use="prohibited">
                  <xsd:annotation>
                    <xsd:documentation>Decimal position in fare amount.  Example: 2</xsd:documentation>
                  </xsd:annotation>
                </xsd:attribute>
              </xsd:restriction>
            </xsd:simpleContent>
          </xsd:complexType>
        </xsd:element>
        <xsd:element minOccurs="0" ref="Identification" />
        <xsd:element minOccurs="0" name="Channel" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Describes the channel through which the request is made. E.g. "WEB"</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="SegmentIDRef">
    <xsd:annotation>
      <xsd:documentation>ID reference used to associate this item to a segment. No comma separated lists and no ranges supported. Example: F1</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:simpleContent>
        <xsd:extension base="xsd:string">
          <xsd:attributeGroup ref="ONPoint" />
          <xsd:attributeGroup ref="OFFPoint" />
          <xsd:attributeGroup ref="RefType" />
        </xsd:extension>
      </xsd:simpleContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="SourceStdAttributes" type="SourceStdAttributes">
    <xsd:annotation>
      <xsd:documentation>Source Aggregation Information. </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="Surname" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>Traveler family (last) name.  Example: SMITH</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="Terminal" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>Airport terminal.  Example: 2B</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="Text" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>Information text or error text. Example: Free flow text.  </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="Time">
    <xsd:annotation>
      <xsd:documentation>Time in ISO 8601 format (hh:mm).  Example: 14:30</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleType>
      <xsd:restriction base="xsd:string" />
    </xsd:simpleType>
  </xsd:element>
  <xsd:element name="TravelerIDRef">
    <xsd:annotation>
      <xsd:documentation>Unique association ID reference of the traveler associated to this item. No comma separated lists and no ranges allowed.        Example: T1</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:simpleContent>
        <xsd:extension base="xsd:string">
          <xsd:attributeGroup ref="RefType" />
        </xsd:extension>
      </xsd:simpleContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="ValidatingCarrier">
    <xsd:annotation>
      <xsd:documentation>The 2-character airline code of the carrier validating this Ticket/Document.</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleType>
      <xsd:restriction base="xsd:string">
        <xsd:length value="2" />
      </xsd:restriction>
    </xsd:simpleType>
  </xsd:element>
  <xsd:element name="ProfileData">
    <xsd:annotation>
      <xsd:documentation>Common Profile data structure for most profile schemas </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" name="AccessRights">
          <xsd:annotation>
            <xsd:documentation>*** FUTURE USE ***

to be used for Super profile database only</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:sequence>
              <xsd:element maxOccurs="unbounded" name="SharedID">
                <xsd:annotation>
                  <xsd:documentation>Office(s) with access rights to this profile </xsd:documentation>
                </xsd:annotation>
                <xsd:complexType>
                  <xsd:sequence>
                    <xsd:choice>
                      <xsd:element ref="PseudoCityCode" />
                      <xsd:element ref="IATA">
                        <xsd:annotation>
                          <xsd:documentation>Agent IATA number.  Example: 12345678</xsd:documentation>
                        </xsd:annotation>
                      </xsd:element>
                    </xsd:choice>
                  </xsd:sequence>
                  <xsd:attribute name="Write" type="xsd:string">
                    <xsd:annotation>
                      <xsd:documentation>Allowed value: Y

Y will allow this ID to update the profile.  Default or omission does NOT allow to update the profile.</xsd:documentation>
                    </xsd:annotation>
                  </xsd:attribute>
                  <xsd:attribute name="Delete" type="xsd:string">
                    <xsd:annotation>
                      <xsd:documentation>Allowed value: Y

Y will allow this ID to delete the profile.  Default or omission does NOT allow to delete the profile.</xsd:documentation>
                    </xsd:annotation>
                  </xsd:attribute>
                </xsd:complexType>
              </xsd:element>
            </xsd:sequence>
          </xsd:complexType>
        </xsd:element>
        <xsd:element maxOccurs="unbounded" name="ProfileIdentification">
          <xsd:annotation>
            <xsd:documentation>Identifies type (Company or Traveler), location and ownership of profile.

ProfileInsertRQ: only SINGLE instance allowed.

ProfileViewRS: If more than a single profile is merged than each profile must have it's own ProfileIdentification node; this is the case e.g. in ProfileViewRS when a merged view (Company and Traveler profile data together) is returned.</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:sequence>
              <xsd:element minOccurs="0" ref="PseudoCityCode" />
              <xsd:element minOccurs="0" ref="ProfileName">
                <xsd:annotation>
                  <xsd:documentation>Name of traveler or company profile as stored in profile database.  
Example: 
MILLER/JOE (Traveler Prof)
IBM CORP (Company Prof)

ProfileInsertRQ and ProfileReplaceRQ: element is MANDATORY

ProfileViewRS: element is OPTIONAL</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:choice minOccurs="0">
                <xsd:element minOccurs="0" ref="ProfileIndex">
                  <xsd:annotation>
                    <xsd:documentation>Profile Locator/Index of this company or traveler profile.
Example: ABC12T

ProfileInsertRQ: element is NOT APPLICABLE

ProfileReplaceRQ and ProfileViewRS: element is MANDATORY</xsd:documentation>
                  </xsd:annotation>
                </xsd:element>
                <xsd:sequence minOccurs="0">
                  <xsd:element minOccurs="0" name="SourceProfileIndex" type="xsd:string">
                    <xsd:annotation>
                      <xsd:documentation>Profile Identifier / key provided by source profile database </xsd:documentation>
                    </xsd:annotation>
                  </xsd:element>
                  <xsd:element minOccurs="0" name="ProfileVendor" type="xsd:string">
                    <xsd:annotation>
                      <xsd:documentation>Identifies the vendor of the spource profile database</xsd:documentation>
                    </xsd:annotation>
                  </xsd:element>
                </xsd:sequence>
              </xsd:choice>
              <xsd:element minOccurs="0" maxOccurs="unbounded" name="AssociationData">
                <xsd:annotation>
                  <xsd:documentation>This node provides information to which Company and/or Traveler Profile(s) this traveler is associated.

To be ONLY used in the ProfileViewRS.  

To add/delete associations a the message ProfileAddAssociationRQ/RS and ProfileDeleteAssociationRQ/RS are used.

</xsd:documentation>
                </xsd:annotation>
                <xsd:complexType>
                  <xsd:sequence>
                    <xsd:choice>
                      <xsd:element name="ProfileIndex">
                        <xsd:annotation>
                          <xsd:documentation>Profile Locator/Index of this associated profile.
Example: ABC12T</xsd:documentation>
                        </xsd:annotation>
                        <xsd:complexType>
                          <xsd:simpleContent>
                            <xsd:extension base="xsd:string">
                              <xsd:attribute name="Type" type="xsd:string">
                                <xsd:annotation>
                                  <xsd:documentation>Identifies the profile type, e.g. 
T = TravelerProfile, 
C = Company Profile, </xsd:documentation>
                                </xsd:annotation>
                              </xsd:attribute>
                            </xsd:extension>
                          </xsd:simpleContent>
                        </xsd:complexType>
                      </xsd:element>
                      <xsd:sequence>
                        <xsd:element name="SourceProfileIndex" type="xsd:string">
                          <xsd:annotation>
                            <xsd:documentation>Profile Identifier / key provided by source profile database </xsd:documentation>
                          </xsd:annotation>
                        </xsd:element>
                        <xsd:element name="ProfileVendor" type="xsd:string">
                          <xsd:annotation>
                            <xsd:documentation>Identifies the vendor of the spource profile database</xsd:documentation>
                          </xsd:annotation>
                        </xsd:element>
                      </xsd:sequence>
                    </xsd:choice>
                    <xsd:element minOccurs="0" ref="ProfileName">
                      <xsd:annotation>
                        <xsd:documentation>Name of the associated profile

Example: 
MILLER/JOE (Traveler Prof)
</xsd:documentation>
                      </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" name="Relationship" type="xsd:string">
                      <xsd:annotation>
                        <xsd:documentation>Identifies the relationship type (free flow text), 
e.g. Employee, Consultant, Spouse, Child</xsd:documentation>
                      </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" name="CostCenter" type="xsd:string">
                      <xsd:annotation>
                        <xsd:documentation>CostCenter for this Traveler in this association.
Example: 4520</xsd:documentation>
                      </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" name="Department" type="xsd:string">
                      <xsd:annotation>
                        <xsd:documentation>Department description  for this Traveler in this association.
Example: Marketing</xsd:documentation>
                      </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" name="EmployeeID" type="xsd:string">
                      <xsd:annotation>
                        <xsd:documentation>EmployeeID of traveler for this association.
Example 476254</xsd:documentation>
                      </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" name="Position" type="xsd:string">
                      <xsd:annotation>
                        <xsd:documentation>Position within the organization.

Examples:
Director of ...
CEO
Product Manager</xsd:documentation>
                      </xsd:annotation>
                    </xsd:element>
                  </xsd:sequence>
                </xsd:complexType>
              </xsd:element>
              <xsd:element minOccurs="0" ref="SelfServiceDevices" />
            </xsd:sequence>
            <xsd:attribute name="Type" type="xsd:string" use="required">
              <xsd:annotation>
                <xsd:documentation>Identifies the profile type, e.g. 
T = TravelerProfile, 
C = Company Profile, </xsd:documentation>
              </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="Source" type="xsd:string">
              <xsd:annotation>
                <xsd:documentation>Identifies the source of the profile database.  Not limited to GDS, applicable to other DBs as well
Example: 1G</xsd:documentation>
              </xsd:annotation>
            </xsd:attribute>
          </xsd:complexType>
        </xsd:element>
        <xsd:element minOccurs="0" name="ProfileInformation">
          <xsd:annotation>
            <xsd:documentation>Contains notes, information, action items related to profile.

Data is for informational purposes only and stored in profile, not moved into PNRs to directly create PNR elements, but can be used for
a) flash alert/info screens
b) action reminders via UI or via backend queries
c) creation of APIS SSRs and others</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:sequence>
              <xsd:element minOccurs="0" ref="PriorityLines">
                <xsd:annotation>
                  <xsd:documentation>This section maps the Priority Lines found in GDS.  They can be displayed separately and/or moved into a PNR.</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" ref="Notes">
                <xsd:annotation>
                  <xsd:documentation>Freeflow text remarks pertaining to this profile. Ideal to capture Sabre 'N' and 'R' lines and Amadeus 'N' lines as they are only informative and not to be moved into a PNR.</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" ref="FollowUpItems">
                <xsd:annotation>
                  <xsd:documentation>Freeflow text to capture follow up action items.  Data here can be used for special 'Follow-Up List' queries, etc. (as it is done e.g. in Amadeus)</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" ref="TravelerInfo">
                <xsd:annotation>
                  <xsd:documentation>Information about traveler and traveler documentation. (used for traveler profiles, and in ProfileViewRS also used in merged profile response)</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" ref="CompanyInfo">
                <xsd:annotation>
                  <xsd:documentation>Information about company. (used for company profiles, and in ProfileViewRS also used in merged profile response)

This section also holds a customizable TripPurpose Code Table.</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
            </xsd:sequence>
            <xsd:attribute name="Source" type="xsd:string">
              <xsd:annotation>
                <xsd:documentation>Identifies the source of the profile database.  Not limited to GDS, applicable to other DBs as well
Example: 1G

ProfileInsertRQ: NOT APPLICABLE

ProfileViewRS and ProfileReplaceRQ: OPTIONAL</xsd:documentation>
              </xsd:annotation>
            </xsd:attribute>
          </xsd:complexType>
        </xsd:element>
        <xsd:element minOccurs="0" name="PNRElements">
          <xsd:annotation>
            <xsd:documentation>Structured PNR elements. </xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:sequence>
              <xsd:element minOccurs="0" ref="Traveler">
                <xsd:annotation>
                  <xsd:documentation>Traveler element. Data from traveler profile only.

MANDATORY for traveler profile data.</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" ref="ContactGroup">
                <xsd:annotation>
                  <xsd:documentation>Contact group.</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" ref="FrequentTravelerGroup">
                <xsd:annotation>
                  <xsd:documentation>Frequent traveler group. Data from traveler profile only.</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" ref="SpecialServiceRequests">
                <xsd:annotation>
                  <xsd:documentation>Special service request group, accommodates structured SSR elements</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" ref="OtherServiceInfoGroup" />
              <xsd:element minOccurs="0" name="FormOfPaymentGroup">
                <xsd:annotation>
                  <xsd:documentation>All Form of Payments for this single or merged profile</xsd:documentation>
                </xsd:annotation>
                <xsd:complexType>
                  <xsd:sequence>
                    <xsd:element minOccurs="0" maxOccurs="unbounded" ref="FormOfPayment" />
                  </xsd:sequence>
                </xsd:complexType>
              </xsd:element>
              <xsd:element minOccurs="0" name="AddressGroup">
                <xsd:annotation>
                  <xsd:documentation>All Addresses for this single or merged profile</xsd:documentation>
                </xsd:annotation>
                <xsd:complexType>
                  <xsd:sequence>
                    <xsd:element minOccurs="0" maxOccurs="unbounded" ref="Address" />
                  </xsd:sequence>
                </xsd:complexType>
              </xsd:element>
              <xsd:element minOccurs="0" name="GeneralRemarkGroup">
                <xsd:annotation>
                  <xsd:documentation>General and custom coded PNR Remark elements</xsd:documentation>
                </xsd:annotation>
                <xsd:complexType>
                  <xsd:sequence>
                    <xsd:element minOccurs="0" maxOccurs="unbounded" ref="GeneralRemark">
                      <xsd:annotation>
                        <xsd:documentation>These are informational PNR remarks which will not print to any invoice/itinereray.</xsd:documentation>
                      </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="unbounded" ref="HiddenRemark">
                      <xsd:annotation>
                        <xsd:documentation>** initially not supported **

Hidden/confidential remarks can only be displayed by PCCs listed if they have an EOS agreement.  A right to modify can be given to a PCC.</xsd:documentation>
                      </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" maxOccurs="unbounded" ref="CorporateRemark" />
                  </xsd:sequence>
                </xsd:complexType>
              </xsd:element>
              <xsd:element minOccurs="0" ref="DocumentRemarks">
                <xsd:annotation>
                  <xsd:documentation>Document remarks group</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" ref="UserDefinedIDGroup" />
            </xsd:sequence>
            <xsd:attribute name="Source" type="xsd:string" />
          </xsd:complexType>
        </xsd:element>
        <xsd:element minOccurs="0" ref="ContractInformation">
          <xsd:annotation>
            <xsd:documentation>Private contracts, FlightPass, Corporate IDs</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="Preferences">
          <xsd:annotation>
            <xsd:documentation>Air, Car and Hotel preferences</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:sequence>
              <xsd:element minOccurs="0" ref="AirPref">
                <xsd:annotation>
                  <xsd:documentation>Air preferences</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" ref="CarPref">
                <xsd:annotation>
                  <xsd:documentation>Car preferences</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" ref="HotelPref" />
            </xsd:sequence>
            <xsd:attributeGroup ref="DataBaseLink" />
          </xsd:complexType>
        </xsd:element>
        <xsd:element minOccurs="0" ref="TripTemplates">
          <xsd:annotation>
            <xsd:documentation>Itineraries including detailed air, car and hotel preferences

A trip template can be generated either via manual Profile maintenance UI or automatically by allowing the user to save an active itinerary from the PNRViewRS.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" ref="FareSavingTable" />
        <xsd:element minOccurs="0" ref="QCRemarks" />
        <xsd:element minOccurs="0" ref="DocumentTracking">
          <xsd:annotation>
            <xsd:documentation>To be used to track unused documents (tickets, MCOs, EMDs). 

Data may be provided by
a/ source profile db itself
b/ independent tracking db
c/ query to participating airlines</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" ref="ServiceFees" />
        <xsd:element minOccurs="0" name="CustomData">
          <xsd:annotation>
            <xsd:documentation>User-Defined custom data structure. NOTE: provides data storage and retrieval only.</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:sequence>
              <xsd:any namespace="##any" />
            </xsd:sequence>
          </xsd:complexType>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="AirPref">
    <xsd:annotation>
      <xsd:documentation>Air preferences</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" maxOccurs="unbounded" name="BasicPreference">
          <xsd:annotation>
            <xsd:documentation>Basic(default) preferences.

These preference only appliesz if no market specific preference exist.

Only different "TripPurpose" attributes can trigger another instance of this BasicPreference node.

Example: IC</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:sequence>
              <xsd:element minOccurs="0" name="Airlines">
                <xsd:annotation>
                  <xsd:documentation>Airline code(s) - up to 10 codes allowed.
Any market preference supersedes this basic preference.
Example: AA</xsd:documentation>
                </xsd:annotation>
                <xsd:complexType>
                  <xsd:sequence>
                    <xsd:element maxOccurs="10" name="AirlineCode">
                      <xsd:annotation>
                        <xsd:documentation>2-digit airline code(s) - up to 10 codes allowed.

Any applicable market preference supersedes this basic preference.

Example: AA</xsd:documentation>
                      </xsd:annotation>
                      <xsd:complexType>
                        <xsd:simpleContent>
                          <xsd:extension base="xsd:string">
                            <xsd:attribute ref="Rank" />
                          </xsd:extension>
                        </xsd:simpleContent>
                      </xsd:complexType>
                    </xsd:element>
                  </xsd:sequence>
                </xsd:complexType>
              </xsd:element>
              <xsd:element minOccurs="0" ref="SeatPreference">
                <xsd:annotation>
                  <xsd:documentation>Traveler's basic (general) seat preference - if not overwritten by specific market preference</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
            </xsd:sequence>
            <xsd:attributeGroup ref="ProfSource" />
            <xsd:attributeGroup ref="LineRef" />
            <xsd:attribute ref="TripPurpose" />
          </xsd:complexType>
        </xsd:element>
        <xsd:element minOccurs="0" maxOccurs="unbounded" name="MarketPreference">
          <xsd:annotation>
            <xsd:documentation>Allows for different levels of preferences for specified markets.

1st Level - Region or Zone
2nd Level - Countries
3rd Level - Country/State
4th Level - City/Airports

Examples:
1) EUROPE/US-PACIFIC
2) US/DE
3) USFL/USCA
4) MIA/FRA
5) blank/EUROPE
   (blank=home airport)

or a mix of the above:
5) US/EUROPE
6) MIA/CARIBBEAN
7) USFL/FRA


Possible values:
4th Level - a three-letter airport or city code

3rd Level - Country:State
using pattern CC:SS
e.g. US:NY 

2nd Level - a two-letter country code

1st Level - a region/zone name from this list:

NORTH-AMERICA (50)
USA (48)
CA
HI
PR
VI
AK
MX
GSM
CARIBBEAN
CENTRAL-AMERICA
SOUTH-AMERICA
SOUTH-AMERICA
                     -ATLANTIC
SOUTH-AMERICA
                    -NORTHRIM

EUROPE
IBERIAN-PENINSULA
SCANDINAVIA
MIDDLE-EAST AFRICA
WEST-AFRICA
SOUTHERN-AFRICA
EAST-AFRICA

JAPAN-KOREA
SOUTHEAST-ASIA
SOUTH-ASIAN-SUB
SOUTHWEST-PACIFIC
US-PACIFIC
                -TERRITORIES
RUSSIA-EAST
MICRONESIA</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:sequence>
              <xsd:element minOccurs="0" name="Airlines">
                <xsd:annotation>
                  <xsd:documentation>Airline code(s) - up to 3 codes allowed.
Any market preference supersedes this basic preference.
Example: AA</xsd:documentation>
                </xsd:annotation>
                <xsd:complexType>
                  <xsd:sequence>
                    <xsd:element maxOccurs="3" name="AirlineCode">
                      <xsd:annotation>
                        <xsd:documentation>2-digit airline code(s) - up to 3 codes allowed.

Any applicable market preference supersedes this basic preference.

Example: AA</xsd:documentation>
                      </xsd:annotation>
                      <xsd:complexType>
                        <xsd:simpleContent>
                          <xsd:extension base="xsd:string">
                            <xsd:attribute ref="Rank" />
                          </xsd:extension>
                        </xsd:simpleContent>
                      </xsd:complexType>
                    </xsd:element>
                  </xsd:sequence>
                </xsd:complexType>
              </xsd:element>
              <xsd:element minOccurs="0" ref="SeatPreference">
                <xsd:annotation>
                  <xsd:documentation>If present defines a seat preference for this particular market</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" ref="OriginMarket" />
              <xsd:element minOccurs="0" ref="DestinationMarket" />
            </xsd:sequence>
            <xsd:attributeGroup ref="ProfSource" />
            <xsd:attributeGroup ref="LineRef" />
            <xsd:attribute ref="TripPurpose" />
          </xsd:complexType>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="CarCompany">
    <xsd:annotation>
      <xsd:documentation>Car company code(s) - up to 5 codes allowed.
Any market preference supersedes this basic preference.
Example: ZE</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:simpleContent>
        <xsd:extension base="xsd:string">
          <xsd:attributeGroup ref="ProfSource" />
          <xsd:attributeGroup ref="LineRef" />
          <xsd:attribute ref="TripPurpose" />
          <xsd:attribute name="Rank">
            <xsd:annotation>
              <xsd:documentation>ranks the priority if multiple choices are available.

Example: 1</xsd:documentation>
            </xsd:annotation>
          </xsd:attribute>
        </xsd:extension>
      </xsd:simpleContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="CarPref">
    <xsd:annotation>
      <xsd:documentation>Car preferences</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" maxOccurs="unbounded" name="BasicPreference">
          <xsd:annotation>
            <xsd:documentation>Basic(default) preferences.

These preference only applies if no market specific preference exist.

Only different "TripPurpose" attributes can trigger another instance of this BasicPreference node.</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:sequence>
              <xsd:element minOccurs="0" name="CarCompanies">
                <xsd:annotation>
                  <xsd:documentation>Car company code(s) - up to 5 codes allowed.
Any market preference supersedes this basic preference.
Example: ZE</xsd:documentation>
                </xsd:annotation>
                <xsd:complexType>
                  <xsd:sequence>
                    <xsd:element maxOccurs="unbounded" name="CompanyCode">
                      <xsd:annotation>
                        <xsd:documentation>Car Company 2-letter code.  Example: ZE</xsd:documentation>
                      </xsd:annotation>
                      <xsd:complexType>
                        <xsd:simpleContent>
                          <xsd:extension base="xsd:string">
                            <xsd:attribute ref="Rank" />
                          </xsd:extension>
                        </xsd:simpleContent>
                      </xsd:complexType>
                    </xsd:element>
                  </xsd:sequence>
                </xsd:complexType>
              </xsd:element>
              <xsd:element minOccurs="0" name="VehicleType">
                <xsd:annotation>
                  <xsd:documentation>Preferred vehicle type. 

Values need to be per car industry standard ACRISS code.

Example: ICAR 

NOTE: See ACRISS website for MATRIX of codes and references to all GDS</xsd:documentation>
                </xsd:annotation>
                <xsd:complexType>
                  <xsd:simpleContent>
                    <xsd:extension base="xsd:string" />
                  </xsd:simpleContent>
                </xsd:complexType>
              </xsd:element>
              <xsd:element minOccurs="0" ref="SpecialInformation" />
            </xsd:sequence>
            <xsd:attributeGroup ref="ProfSource" />
            <xsd:attributeGroup ref="LineRef" />
            <xsd:attribute ref="TripPurpose" />
          </xsd:complexType>
        </xsd:element>
        <xsd:element minOccurs="0" maxOccurs="unbounded" name="MarketPreference">
          <xsd:annotation>
            <xsd:documentation>Allows for different levels of preferences for specified markets.

1st Level - Region or Zone
2nd Level - Countries
3rd Level - Country/State
4th Level - City/Airports

Examples:
1) EUROPE/US-PACIFIC
2) US/DE
3) USFL/USCA
4) MIA/FRA
5) blank/EUROPE
   (blank=home airport)

or a mix of the above:
5) US/EUROPE
6) MIA/CARIBBEAN
7) USFL/FRA


Possible values:
4th Level - a three-letter airport or city code

3rd Level - Country:State
using pattern CC:SS
e.g. US:NY 

2nd Level - a two-letter country code

1st Level - a region/zone name from this list:

NORTH-AMERICA (50)
USA (48)
CA
HI
PR
VI
AK
MX
GSM
CARIBBEAN
CENTRAL-AMERICA
SOUTH-AMERICA
SOUTH-AMERICA
                     -ATLANTIC
SOUTH-AMERICA
                    -NORTHRIM

EUROPE
IBERIAN-PENINSULA
SCANDINAVIA
MIDDLE-EAST AFRICA
WEST-AFRICA
SOUTHERN-AFRICA
EAST-AFRICA

JAPAN-KOREA
SOUTHEAST-ASIA
SOUTH-ASIAN-SUB
SOUTHWEST-PACIFIC
US-PACIFIC
                -TERRITORIES
RUSSIA-EAST
MICRONESIA</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:sequence>
              <xsd:element minOccurs="0" name="CarCompanies">
                <xsd:annotation>
                  <xsd:documentation>Market specific 2-letter car company code preferences. Ranking is needed for multiple preferences.</xsd:documentation>
                </xsd:annotation>
                <xsd:complexType>
                  <xsd:sequence>
                    <xsd:annotation>
                      <xsd:documentation>In case the "DestinationMarket" is a 3-letter CITY/AIRPORT CODE (and only then), a specific preferred Car Location can be identified here</xsd:documentation>
                    </xsd:annotation>
                    <xsd:element maxOccurs="unbounded" name="CompanyCode">
                      <xsd:annotation>
                        <xsd:documentation>Car Company 2-letter code.  Example: ZE</xsd:documentation>
                      </xsd:annotation>
                      <xsd:complexType>
                        <xsd:simpleContent>
                          <xsd:extension base="xsd:string">
                            <xsd:attribute ref="Rank" />
                          </xsd:extension>
                        </xsd:simpleContent>
                      </xsd:complexType>
                    </xsd:element>
                    <xsd:element minOccurs="0" name="LocationID" type="xsd:string">
                      <xsd:annotation>
                        <xsd:documentation>This is a unique Location ID used in this arrival city (only allowed when value of Destination Market is a 3-letter airport- or citycode).</xsd:documentation>
                      </xsd:annotation>
                    </xsd:element>
                  </xsd:sequence>
                </xsd:complexType>
              </xsd:element>
              <xsd:element ref="DestinationMarket" />
              <xsd:element minOccurs="0" name="VehicleType">
                <xsd:annotation>
                  <xsd:documentation>Preferred vehicle type. 

Values need to be per car industry standard ACRISS code.

Example: ICAR 

NOTE: See ACRISS website for MATRIX of codes and references to all GDS</xsd:documentation>
                </xsd:annotation>
                <xsd:complexType>
                  <xsd:simpleContent>
                    <xsd:extension base="xsd:string" />
                  </xsd:simpleContent>
                </xsd:complexType>
              </xsd:element>
              <xsd:element minOccurs="0" ref="SpecialInformation" />
            </xsd:sequence>
            <xsd:attributeGroup ref="ProfSource" />
            <xsd:attributeGroup ref="LineRef" />
            <xsd:attribute ref="TripPurpose">
              <xsd:annotation>
                <xsd:documentation>The trip purpose to which this preference applies.  If absent or blank the preference applies to all trips.

If used, trip purpose codes are defined in the 
ProfileInformation/CompanyInfo node.

Example: BIZ</xsd:documentation>
              </xsd:annotation>
            </xsd:attribute>
          </xsd:complexType>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="ContractInformation">
    <xsd:annotation>
      <xsd:documentation>Private contracts, FlightPass, Corporate IDs</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" maxOccurs="unbounded" name="AirContract">
          <xsd:annotation>
            <xsd:documentation>Air related contracts</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:sequence>
              <xsd:element ref="AirlineCode" />
              <xsd:element minOccurs="0" name="Office" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>Pseudo city under which private fares are stored.  Example: 1C1K</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" ref="IATA">
                <xsd:annotation>
                  <xsd:documentation>Agency's IATA Code owning this contract</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" name="AccountNumber" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>Specifies the corporate account number to use to query for private/negotiated fares.  

Example: 000243</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" name="ContractID" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>Contract ID Reference</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" name="LoyaltyPrograms">
                <xsd:annotation>
                  <xsd:documentation>Loyalty Program data</xsd:documentation>
                </xsd:annotation>
                <xsd:complexType>
                  <xsd:sequence>
                    <xsd:element name="LoyaltyMemberID" type="xsd:string">
                      <xsd:annotation>
                        <xsd:documentation>Membership number </xsd:documentation>
                      </xsd:annotation>
                    </xsd:element>
                    <xsd:element ref="ProgramName">
                      <xsd:annotation>
                        <xsd:documentation>Loyalty Program name</xsd:documentation>
                      </xsd:annotation>
                    </xsd:element>
                  </xsd:sequence>
                </xsd:complexType>
              </xsd:element>
              <xsd:element minOccurs="0" maxOccurs="unbounded" ref="PTC">
                <xsd:annotation>
                  <xsd:documentation>IATA Passenger Type Code(s) covered under this contract.

Example: ADT</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" maxOccurs="unbounded" ref="BookingClass" />
              <xsd:element minOccurs="0" name="TicketDesignator" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>TicketDesignator to be used as per contract.

Example: ZO15</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" name="Discount">
                <xsd:annotation>
                  <xsd:documentation>Pricing discount value.  Example: 2000</xsd:documentation>
                </xsd:annotation>
                <xsd:complexType>
                  <xsd:sequence>
                    <xsd:element name="DiscountValue">
                      <xsd:annotation>
                        <xsd:documentation>Enter either an amount or percentage.

If percentage enter the number of decimals in the attribute 'NbrOfDecimals'

If amount, the CurrencyCode with it's associated 'NumberOfDecimals' becomes mandatory.</xsd:documentation>
                      </xsd:annotation>
                      <xsd:complexType>
                        <xsd:simpleContent>
                          <xsd:extension base="xsd:string">
                            <xsd:attribute name="Type" use="required">
                              <xsd:annotation>
                                <xsd:documentation>Type of discount.  
Values are:
P = Percent
A = Amount 

Example: A</xsd:documentation>
                              </xsd:annotation>
                              <xsd:simpleType>
                                <xsd:restriction base="xsd:string">
                                  <xsd:minLength value="1" />
                                  <xsd:maxLength value="1" />
                                  <xsd:enumeration value="P" />
                                  <xsd:enumeration value="A" />
                                </xsd:restriction>
                              </xsd:simpleType>
                            </xsd:attribute>
                            <xsd:attribute name="NbrOfDecimals" type="xsd:integer">
                              <xsd:annotation>
                                <xsd:documentation>ONLY IF PERCENTAGE
(content will be ignored if value attribute Type=A)</xsd:documentation>
                              </xsd:annotation>
                            </xsd:attribute>
                          </xsd:extension>
                        </xsd:simpleContent>
                      </xsd:complexType>
                    </xsd:element>
                    <xsd:element minOccurs="0" name="CurrencyCode" type="xsd:string">
                      <xsd:annotation>
                        <xsd:documentation>If discount value is an amount, the CurrencyCode is mandatory.  

Example: USD</xsd:documentation>
                      </xsd:annotation>
                    </xsd:element>
                  </xsd:sequence>
                </xsd:complexType>
              </xsd:element>
              <xsd:element minOccurs="0" ref="Cabin" />
              <xsd:element minOccurs="0" ref="MarketApplication" />
            </xsd:sequence>
            <xsd:attribute name="FareSystem" type="xsd:string">
              <xsd:annotation>
                <xsd:documentation>Identifies the fare system that holds the private fares. Possibles values are:
1A = Amadeus
1B = Abacus
1V = Apollo
1G = Galileo
1S = Sabre (also 1W)
1P = Worldspan
Example: 1V</xsd:documentation>
              </xsd:annotation>
            </xsd:attribute>
            <xsd:attributeGroup ref="ProfSource" />
            <xsd:attributeGroup ref="LineRef" />
          </xsd:complexType>
        </xsd:element>
        <xsd:element minOccurs="0" maxOccurs="unbounded" name="FlightPass">
          <xsd:annotation>
            <xsd:documentation>Contracted Flight Passes

The applicable market can be defined in the child element "MarketFare" using the attributes 'OriginMarket' and 'DestinationMarket'</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:sequence>
              <xsd:element ref="AirlineCode" />
              <xsd:element minOccurs="0" name="Office" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>Pseudo city under which private fares are stored.  Example: 1C1K</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" ref="IATA">
                <xsd:annotation>
                  <xsd:documentation>Agency's IATA Code holding this prepaid pass</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" name="AccountNumber" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>Specifies the corporate account number to use to query for private/negotiated fares.  

Example: 000243</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" name="PassCredentials">
                <xsd:annotation>
                  <xsd:documentation>Ownership and access information</xsd:documentation>
                </xsd:annotation>
                <xsd:complexType>
                  <xsd:sequence>
                    <xsd:element minOccurs="0" name="EmailAddress" type="xsd:string">
                      <xsd:annotation>
                        <xsd:documentation>E-mail address</xsd:documentation>
                      </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" name="MemberNumber">
                      <xsd:annotation>
                        <xsd:documentation>mandatory for AC flight passes</xsd:documentation>
                      </xsd:annotation>
                      <xsd:complexType>
                        <xsd:sequence>
                          <xsd:element ref="AirlineCode" />
                          <xsd:element ref="IDNumber" />
                        </xsd:sequence>
                      </xsd:complexType>
                    </xsd:element>
                  </xsd:sequence>
                </xsd:complexType>
              </xsd:element>
              <xsd:element minOccurs="0" name="FlightPassID" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>Contract ID Reference</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" name="FlightPassName" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>Name of the purchased flight pass.

Example: 
Western Commuter Pass</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element ref="MarketApplication" />
              <xsd:element minOccurs="0" name="MarketFare">
                <xsd:annotation>
                  <xsd:documentation>Contracted base fare for identified market</xsd:documentation>
                </xsd:annotation>
                <xsd:complexType>
                  <xsd:sequence>
                    <xsd:element name="BaseFare" type="xsd:integer">
                      <xsd:annotation>
                        <xsd:documentation>Applicable base fare for associated market</xsd:documentation>
                      </xsd:annotation>
                    </xsd:element>
                    <xsd:element name="CurrencyCode" type="xsd:string" />
                  </xsd:sequence>
                </xsd:complexType>
              </xsd:element>
              <xsd:element minOccurs="0" maxOccurs="unbounded" ref="PTC">
                <xsd:annotation>
                  <xsd:documentation>IATA Passenger Type Code(s) covered under this contract.

Example: ADT</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" maxOccurs="unbounded" ref="BookingClass" />
              <xsd:element minOccurs="0" ref="Cabin" />
            </xsd:sequence>
            <xsd:attribute name="FareSystem" type="xsd:string">
              <xsd:annotation>
                <xsd:documentation>Identifies the fare system that holds the private fares. Possibles values are:
1A = Amadeus
1B = Abacus
1V = Apollo
1G = Galileo
1S = Sabre (also 1W)
1P = Worldspan
Example: 1V</xsd:documentation>
              </xsd:annotation>
            </xsd:attribute>
            <xsd:attributeGroup ref="ProfSource" />
            <xsd:attributeGroup ref="LineRef" />
          </xsd:complexType>
        </xsd:element>
        <xsd:element minOccurs="0" maxOccurs="unbounded" name="Car">
          <xsd:annotation>
            <xsd:documentation>Car related contracts</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:sequence>
              <xsd:element name="CorpID" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>CD number assigned to the corporate account</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element ref="CompanyCode" />
            </xsd:sequence>
            <xsd:attributeGroup ref="ProfSource" />
            <xsd:attributeGroup ref="LineRef" />
          </xsd:complexType>
        </xsd:element>
        <xsd:element minOccurs="0" maxOccurs="unbounded" name="Hotel">
          <xsd:annotation>
            <xsd:documentation>Hotel related contracts</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:sequence>
              <xsd:element name="CorpID" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>CD number assigned to the corporate account</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element ref="CompanyCode" />
            </xsd:sequence>
            <xsd:attributeGroup ref="ProfSource" />
            <xsd:attributeGroup ref="LineRef" />
          </xsd:complexType>
        </xsd:element>
      </xsd:sequence>
      <xsd:attributeGroup ref="DataBaseLink" />
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="DestinationMarket" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>Destination market to which this preference or fare applies.

Examples:
1) US (specific country)
2) NYC (specific city)
3) EUROPE (specific region)
4) US:NY (state in a country)</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="HotelCategory">
    <xsd:annotation>
      <xsd:documentation>Hotel category preference

Valid values are:
F = First class  
L = Luxuy class  
S = Standard class  
T = Tourist class  

Example: F</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleType>
      <xsd:restriction base="xsd:string">
        <xsd:minLength value="1" />
        <xsd:maxLength value="1" />
        <xsd:enumeration value="F" />
        <xsd:enumeration value="L" />
        <xsd:enumeration value="S" />
        <xsd:enumeration value="T" />
      </xsd:restriction>
    </xsd:simpleType>
  </xsd:element>
  <xsd:element name="HotelChain">
    <xsd:annotation>
      <xsd:documentation>Hotel chain code(s) - up to 60 codes allowed.

Example: IC</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:simpleContent>
        <xsd:extension base="xsd:string">
          <xsd:attribute ref="TripPurpose">
            <xsd:annotation>
              <xsd:documentation>The trip purpose to which this preference applies.  If absent or blank the preference applies to all trips.

If used, trip purpose codes are defined in the 
ProfileInformation/CompanyInfo node.

Example: BIZ</xsd:documentation>
            </xsd:annotation>
          </xsd:attribute>
          <xsd:attribute name="Rank">
            <xsd:annotation>
              <xsd:documentation>ranks the priority if multiple choices are available.

Example: 1</xsd:documentation>
            </xsd:annotation>
          </xsd:attribute>
        </xsd:extension>
      </xsd:simpleContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="HotelPref">
    <xsd:annotation>
      <xsd:documentation>Hotel preferences</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" maxOccurs="unbounded" name="BasicPreference">
          <xsd:annotation>
            <xsd:documentation>Basic(default) preferences.

These preference only appliesz if no market specific preference exist.

Only different "TripPurpose" attributes can trigger another instance of this BasicPreference node.</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:sequence>
              <xsd:element minOccurs="0" name="HotelChain">
                <xsd:annotation>
                  <xsd:documentation>Hotel chain code(s) - up to 60 codes allowed.

Example: IC</xsd:documentation>
                </xsd:annotation>
                <xsd:complexType>
                  <xsd:sequence>
                    <xsd:element maxOccurs="unbounded" name="CompanyCode">
                      <xsd:annotation>
                        <xsd:documentation>Hotel Chain 2-letter code.  Example: HH</xsd:documentation>
                      </xsd:annotation>
                      <xsd:complexType>
                        <xsd:simpleContent>
                          <xsd:extension base="xsd:string">
                            <xsd:attribute ref="Rank" />
                          </xsd:extension>
                        </xsd:simpleContent>
                      </xsd:complexType>
                    </xsd:element>
                  </xsd:sequence>
                </xsd:complexType>
              </xsd:element>
              <xsd:element minOccurs="0" ref="HotelCategory" />
              <xsd:element minOccurs="0" ref="RoomTypeCode" />
              <xsd:element minOccurs="0" ref="SpecialInformation" />
            </xsd:sequence>
            <xsd:attributeGroup ref="ProfSource" />
            <xsd:attributeGroup ref="LineRef" />
            <xsd:attribute ref="TripPurpose" />
          </xsd:complexType>
        </xsd:element>
        <xsd:element minOccurs="0" maxOccurs="unbounded" name="MarketPreference">
          <xsd:annotation>
            <xsd:documentation>Allows for different levels of preferences for specified markets.

1st Level - Region or Zone
2nd Level - Countries
3rd Level - Country/State
4th Level - City/Airports

Examples:
1) EUROPE/US-PACIFIC
2) US/DE
3) USFL/USCA
4) MIA/FRA
5) blank/EUROPE
   (blank=home airport)

or a mix of the above:
5) US/EUROPE
6) MIA/CARIBBEAN
7) USFL/FRA


Possible values:
4th Level - a three-letter airport or city code

3rd Level - Country:State
using pattern CC:SS
e.g. US:NY 

2nd Level - a two-letter country code

1st Level - a region/zone name from this list:

NORTH-AMERICA (50)
USA (48)
CA
HI
PR
VI
AK
MX
GSM
CARIBBEAN
CENTRAL-AMERICA
SOUTH-AMERICA
SOUTH-AMERICA
                     -ATLANTIC
SOUTH-AMERICA
                    -NORTHRIM

EUROPE
IBERIAN-PENINSULA
SCANDINAVIA
MIDDLE-EAST AFRICA
WEST-AFRICA
SOUTHERN-AFRICA
EAST-AFRICA

JAPAN-KOREA
SOUTHEAST-ASIA
SOUTH-ASIAN-SUB
SOUTHWEST-PACIFIC
US-PACIFIC
                -TERRITORIES
RUSSIA-EAST
MICRONESIA</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:sequence>
              <xsd:element minOccurs="0" name="HotelChain">
                <xsd:annotation>
                  <xsd:documentation>Market specific 2-letter hotel chain code preferences. Ranking is needed for multiple preferences.</xsd:documentation>
                </xsd:annotation>
                <xsd:complexType>
                  <xsd:sequence>
                    <xsd:annotation>
                      <xsd:documentation>In case the "DestinationMarket" is a 3-letter CITY CODE (and only then), a specific preferred property can be identified by one or more of the following identifiers (all supported in our HotelSearchRQ schema)

(1) PropertyCode
(2) AddressSearch
(3) PhoneSearch</xsd:documentation>
                    </xsd:annotation>
                    <xsd:element maxOccurs="unbounded" name="CompanyCode">
                      <xsd:annotation>
                        <xsd:documentation>Hotel Chain 2-letter code.  Example: HH</xsd:documentation>
                      </xsd:annotation>
                      <xsd:complexType>
                        <xsd:simpleContent>
                          <xsd:extension base="xsd:string">
                            <xsd:attribute ref="Rank" />
                          </xsd:extension>
                        </xsd:simpleContent>
                      </xsd:complexType>
                    </xsd:element>
                    <xsd:choice minOccurs="0">
                      <xsd:annotation>
                        <xsd:documentation>If property code is available it is the best retrieval option.  In lieu a property may be search for by either an address or phonenumber string.</xsd:documentation>
                      </xsd:annotation>
                      <xsd:element name="PropertyCode" type="xsd:string">
                        <xsd:annotation>
                          <xsd:documentation>This is a unique property code used in this arrival city (only allowed when value of DestinationMarket is a 3-letter airport- or citycode).</xsd:documentation>
                        </xsd:annotation>
                      </xsd:element>
                      <xsd:element name="AddressSearch" type="xsd:string">
                        <xsd:annotation>
                          <xsd:documentation>if present will be used to identify property by address, e.g. "210 Washington Ave" returns the specific hotelat that location in the identified city in the 'DestinationMarket' element.

Note: as the objective is to get a single unique property return, enter the FULL street address as published by the hotel property.

Example: 42 Doral Blvd</xsd:documentation>
                        </xsd:annotation>
                      </xsd:element>
                      <xsd:element name="PhoneSearch" type="xsd:string">
                        <xsd:annotation>
                          <xsd:documentation>if present will be used to identify property by phone, e.g. if "4412443240" is present, search will return the property in the identified city code

Note: as the objective is to get a single unique property returned, enter the FULL phone number as published by the hotel property.</xsd:documentation>
                        </xsd:annotation>
                      </xsd:element>
                    </xsd:choice>
                  </xsd:sequence>
                </xsd:complexType>
              </xsd:element>
              <xsd:element ref="DestinationMarket" />
              <xsd:element minOccurs="0" ref="HotelCategory" />
              <xsd:element minOccurs="0" ref="RoomTypeCode" />
              <xsd:element minOccurs="0" ref="SpecialInformation">
                <xsd:annotation>
                  <xsd:documentation>Information to be transmitted via SI-element to Provider at booking time</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
            </xsd:sequence>
            <xsd:attributeGroup ref="ProfSource" />
            <xsd:attributeGroup ref="LineRef" />
            <xsd:attribute ref="TripPurpose" />
          </xsd:complexType>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="OriginMarket" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>Destination market to which this preference or fare applies.

If left blank this should be populated with the "HomeAirport" of the traveler.

Examples:
1) MIA (from HomeAirport)
2) US (specific country)
3) NYC (specific city)
4) EUROPE (specific region)
5) US:NY (state in a country)</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="TripTemplates">
    <xsd:annotation>
      <xsd:documentation>Preferences for selected Itineraries</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element maxOccurs="unbounded" name="Itinerary">
          <xsd:annotation>
            <xsd:documentation>Trip information for preferred or past trips</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="unbounded" name="CityPair">
                <xsd:annotation>
                  <xsd:documentation>CityPair element(s) (OriginDestination ID) used in described Itinerary. A regular one-way trip would have one element and a regular round trip would have 2 citypair elements, more elements for multi-city pair itineraries as per ODs.
</xsd:documentation>
                </xsd:annotation>
                <xsd:complexType>
                  <xsd:sequence>
                    <xsd:element minOccurs="0" name="NumberOfNights" type="xsd:string">
                      <xsd:annotation>
                        <xsd:documentation>Length of trip expressed in number of nights between Departure Date of next CityPair node minus ArrivalDate of preceding CityPair node - see sample.

This value is used to pre-populate air return dates, hotel nights and car rental dates.

Sample Itinerary (to be saved as a template from active PNRViewRS):

1st CityPair (OD1) is "MIA/ORD" w/2 flights
CO 1500 12MAY MIA NYC
CO 2243 12MAY NYC ORD

2nd CityPair (OD2) is "ORD/SFO" w/1 flight
AA 7654 15MAY ORD SFO

3rd CityPair (OD3) is "SFO/MIA"
UA 1234 23MAY SFO MIA

Calculation using sample:
DepDate of CityPair #2 minus ArrDate of CityPair #1 = 3 Nights in ORD

DepDate of CityPair #3 minus ArrDate of CityPair #2 = 8 Nights in SFO</xsd:documentation>
                      </xsd:annotation>
                    </xsd:element>
                    <xsd:element name="OriginCode" type="xsd:string">
                      <xsd:annotation>
                        <xsd:documentation>Originating airport code for this CityPair (OD = OriginDestination)</xsd:documentation>
                      </xsd:annotation>
                    </xsd:element>
                    <xsd:element name="DestinationCode" type="xsd:string">
                      <xsd:annotation>
                        <xsd:documentation>Destination airport code for this CityPair (OD = OriginDestination)</xsd:documentation>
                      </xsd:annotation>
                    </xsd:element>
                    <xsd:element maxOccurs="unbounded" name="Flight">
                      <xsd:annotation>
                        <xsd:documentation>All flights used to construct this CityPair</xsd:documentation>
                      </xsd:annotation>
                      <xsd:complexType>
                        <xsd:sequence>
                          <xsd:element ref="AirlineCode" />
                          <xsd:element name="FlightNumber" type="xsd:string" />
                          <xsd:element name="ClassOfService" type="xsd:string" />
                          <xsd:element ref="DepartureCode">
                            <xsd:annotation>
                              <xsd:documentation>Departure airport code for this flight.  
Example: MIA</xsd:documentation>
                            </xsd:annotation>
                          </xsd:element>
                          <xsd:element ref="ArrivalCode">
                            <xsd:annotation>
                              <xsd:documentation>Arrival airport code for this flight.  
Example: NYC</xsd:documentation>
                            </xsd:annotation>
                          </xsd:element>
                          <xsd:element name="ArrivalTime">
                            <xsd:annotation>
                              <xsd:documentation>Time in ISO 8601 format (hh:mm).  Example: 14:30</xsd:documentation>
                            </xsd:annotation>
                            <xsd:simpleType>
                              <xsd:restriction base="xsd:string">
                                <xsd:pattern value="([0-1][0-9]|2[0-4]):[0-5][0-9]">
                                  <xsd:annotation>
                                    <xsd:documentation />
                                  </xsd:annotation>
                                </xsd:pattern>
                              </xsd:restriction>
                            </xsd:simpleType>
                          </xsd:element>
                        </xsd:sequence>
                      </xsd:complexType>
                    </xsd:element>
                    <xsd:element minOccurs="0" name="Car">
                      <xsd:annotation>
                        <xsd:documentation>Car details for this "DestinationCode"</xsd:documentation>
                      </xsd:annotation>
                      <xsd:complexType>
                        <xsd:sequence>
                          <xsd:element minOccurs="0" name="CarCompany">
                            <xsd:annotation>
                              <xsd:documentation>Itinerary specific 2-letter car company code</xsd:documentation>
                            </xsd:annotation>
                            <xsd:complexType>
                              <xsd:sequence>
                                <xsd:element name="CompanyCode" type="xsd:string">
                                  <xsd:annotation>
                                    <xsd:documentation>Car Company 2-letter code.  Example: ZE</xsd:documentation>
                                  </xsd:annotation>
                                </xsd:element>
                                <xsd:element minOccurs="0" name="LocationID" type="xsd:string">
                                  <xsd:annotation>
                                    <xsd:documentation>Use the unique Car Location ID to be used in a long sell.</xsd:documentation>
                                  </xsd:annotation>
                                </xsd:element>
                              </xsd:sequence>
                            </xsd:complexType>
                          </xsd:element>
                          <xsd:element minOccurs="0" name="VehicleType">
                            <xsd:annotation>
                              <xsd:documentation>Preferred vehicle type. 

Values need to be per car industry standard ACRISS code.

Example: ICAR 

NOTE: See ACRISS website for MATRIX of codes and references to all GDS</xsd:documentation>
                            </xsd:annotation>
                            <xsd:complexType>
                              <xsd:simpleContent>
                                <xsd:extension base="xsd:string" />
                              </xsd:simpleContent>
                            </xsd:complexType>
                          </xsd:element>
                          <xsd:element minOccurs="0" name="SpecialInformation" type="xsd:string">
                            <xsd:annotation>
                              <xsd:documentation>Information to be transmitted via SI-element to Provider at booking time</xsd:documentation>
                            </xsd:annotation>
                          </xsd:element>
                          <xsd:element minOccurs="0" name="CarPickUp" type="xsd:string">
                            <xsd:annotation>
                              <xsd:documentation>Pick up LocationID if different than 'DestinationCode' (=airport pick-up).</xsd:documentation>
                            </xsd:annotation>
                          </xsd:element>
                          <xsd:element minOccurs="0" name="CarDropOff" type="xsd:string">
                            <xsd:annotation>
                              <xsd:documentation>DropOff LocationID if different than 'OriginCode' (=airport pick-up) of NEXT CityPair.</xsd:documentation>
                            </xsd:annotation>
                          </xsd:element>
                        </xsd:sequence>
                      </xsd:complexType>
                    </xsd:element>
                    <xsd:element minOccurs="0" name="Hotel">
                      <xsd:annotation>
                        <xsd:documentation>Hotel details for this "DestinationCode"

</xsd:documentation>
                      </xsd:annotation>
                      <xsd:complexType>
                        <xsd:sequence>
                          <xsd:annotation>
                            <xsd:documentation>when used for long sell use the "NumberOfNights" value to determine the length of stay needed.</xsd:documentation>
                          </xsd:annotation>
                          <xsd:element name="HotelChain">
                            <xsd:annotation>
                              <xsd:documentation>Itinerary specific hotel property data</xsd:documentation>
                            </xsd:annotation>
                            <xsd:complexType>
                              <xsd:sequence>
                                <xsd:element name="CompanyCode" type="xsd:string">
                                  <xsd:annotation>
                                    <xsd:documentation>Hotel Chain 2-letter code.  Example: HH</xsd:documentation>
                                  </xsd:annotation>
                                </xsd:element>
                                <xsd:choice minOccurs="0">
                                  <xsd:annotation>
                                    <xsd:documentation>If property code is available it is the best option to use for a long sell.  Otherwise the AddressSearch element needs to be populated with the street address line or the PhoneSearch string needs to be populated with hotel's published phonenumber.of the desired property.   .  In lieu a property may be search for by either an address or phonenumber string.</xsd:documentation>
                                  </xsd:annotation>
                                  <xsd:element name="PropertyCode" type="xsd:string">
                                    <xsd:annotation>
                                      <xsd:documentation>This is a unique property code used for this CityPair's  DestinationCode.</xsd:documentation>
                                    </xsd:annotation>
                                  </xsd:element>
                                  <xsd:element name="AddressSearch" type="xsd:string">
                                    <xsd:annotation>
                                      <xsd:documentation>if present will be used to identify property by address, e.g. if "210 Washington Ave"  is present, search will return the property for theDestinationCode of this CityPair.

Example: 42 Doral Blvd</xsd:documentation>
                                    </xsd:annotation>
                                  </xsd:element>
                                  <xsd:element name="PhoneSearch" type="xsd:string">
                                    <xsd:annotation>
                                      <xsd:documentation>if present will be used to identify property by phone, e.g. if "4412443240" is present, search will return the property for DestinationCode of this CityPair.</xsd:documentation>
                                    </xsd:annotation>
                                  </xsd:element>
                                </xsd:choice>
                              </xsd:sequence>
                            </xsd:complexType>
                          </xsd:element>
                          <xsd:element minOccurs="0" ref="RoomTypeCode">
                            <xsd:annotation>
                              <xsd:documentation>Store the Room type code as it is associated to the booked itinerary (if trip template is created from existing PNRViewRS)

If created manually use the 3-letter code.

The code consists of three parameters: room category, number of beds and bed type.

1st Character value to be assigned from this list of possible values:

A-SUPERIOR ROOM
B-MODERATE ROOM
C-STANDARD ROOM
D-MINIMUM ROOM
P-EXECUTIVE FLOOR
S-MODERATE SUITE
T-STANDARD SUITE

2nd Character value (number of beds) to be assigned from this list of possible values: 1 - 9

3rd Character value to be assigned from this list of possible values:

D-DOUBLE
K-KING
P-PULLOUT
Q-QUEEN
S-SINGLE
T-TWIN
W-WATER BED

Example: A1K</xsd:documentation>
                            </xsd:annotation>
                          </xsd:element>
                          <xsd:element minOccurs="0" ref="SpecialInformation">
                            <xsd:annotation>
                              <xsd:documentation>Information to be transmitted via SI-element to Provider at booking time</xsd:documentation>
                            </xsd:annotation>
                          </xsd:element>
                        </xsd:sequence>
                      </xsd:complexType>
                    </xsd:element>
                  </xsd:sequence>
                </xsd:complexType>
              </xsd:element>
            </xsd:sequence>
            <xsd:attribute name="Name" type="xsd:string" use="required">
              <xsd:annotation>
                <xsd:documentation>Name of this itinerary (normally given by user when 'saving/storing' this trip itinerary as a template).

This name is designed to create a dynamic array in the GUI.

Example:
Monthly board meeting ORD</xsd:documentation>
              </xsd:annotation>
            </xsd:attribute>
          </xsd:complexType>
        </xsd:element>
      </xsd:sequence>
      <xsd:attributeGroup ref="DataBaseLink" />
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="MarketApplication">
    <xsd:annotation>
      <xsd:documentation>Define the applicable market by using the elements "OriginMarket" and "DestinationMarket".  

The elements allow to exactly identify the applicable market:

1st Level - Region or Zone
2nd Level - Countries
3rd Level - Country/State
4th Level - City/Airports

Examples:
1) EUROPE/US-PACIFIC
2) US/DE
3) USFL/USCA
4) MIA/FRA
5) blank/EUROPE
   (blank=home airport)

or a mix of the above:
5) US/EUROPE
6) MIA/CARIBBEAN
7) USFL/FRA

Possible values:
4th Level - a three-letter airport or city code

3rd Level - Country:State
using pattern CC:SS
e.g. US:NY 

2nd Level - a two-letter country code

1st Level - a region/zone name from this list:

NORTH-AMERICA (50)
USA (48)
CA
HI
PR
VI
AK
MX
GSM
CARIBBEAN
CENTRAL-AMERICA
SOUTH-AMERICA
SOUTH-AMERICA
                     -ATLANTIC
SOUTH-AMERICA
                    -NORTHRIM

EUROPE
IBERIAN-PENINSULA
SCANDINAVIA
MIDDLE-EAST AFRICA
WEST-AFRICA
SOUTHERN-AFRICA
EAST-AFRICA

JAPAN-KOREA
SOUTHEAST-ASIA
SOUTH-ASIAN-SUB
SOUTHWEST-PACIFIC
US-PACIFIC
                -TERRITORIES
RUSSIA-EAST
MICRONESIA</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element ref="OriginMarket">
          <xsd:annotation>
            <xsd:documentation>Destination market to which this preference or fare applies.

If left blank this should be populated with the "HomeAirport" of the traveler.

Examples:
1) JFK (from HomeAirport)
2) US (specific country)
3) NYC (specific city)
4) EUROPE (specific region)
5) US:NY (state in a country)</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element ref="DestinationMarket" />
        <xsd:element minOccurs="0" maxOccurs="unbounded" ref="MarketExclusions">
          <xsd:annotation>
            <xsd:documentation>Define here the (lower level) market(s) to be excluded from the higher level market definition</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="MarketExclusions">
    <xsd:annotation>
      <xsd:documentation>Define here the market(s) which are covered by the higher level "MarketApplication" but are excluded from this preference/fare.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element ref="OriginMarket" />
        <xsd:element ref="DestinationMarket" />
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="SpecialInformation">
    <xsd:annotation>
      <xsd:documentation>Information to be transmitted via SI-element to Provider at booking time</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:simpleContent>
        <xsd:extension base="xsd:string" />
      </xsd:simpleContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="PseudoCityCode" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>Pseudo city code of agency who has ownership of this company or traveler profile.  Example: LNJ2</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="Traveler">
    <xsd:annotation>
      <xsd:documentation>Traveler element</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element ref="TravelerName" />
      </xsd:sequence>
      <xsd:attributeGroup ref="ActionOptional">
        <xsd:annotation>
          <xsd:documentation />
        </xsd:annotation>
      </xsd:attributeGroup>
      <xsd:attributeGroup ref="LineRef" />
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="TravelerName">
    <xsd:annotation>
      <xsd:documentation>Individual name</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element ref="Surname" />
        <xsd:element ref="GivenName" />
        <xsd:element minOccurs="0" ref="Initial" />
        <xsd:element minOccurs="0" ref="Title" />
        <xsd:element minOccurs="0" ref="NameRemark">
          <xsd:annotation>
            <xsd:documentation>Free text name remark, e.g. ID number.  
Example: A123456</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
      <xsd:attribute ref="PTC">
        <xsd:annotation>
          <xsd:documentation>Passenger type code.  Values are: 
ADT = Adult, 
INS = Infant w/seat,
INF = Infant on lap,
CHD = Child, 
YTH = Youth, 
MIL = Military, 
GOV = Government, 
SRC = Senior Citizen, 
STD = Student 
Example: ADT</xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="MiddleName" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>Traveler given middle name.  Example: JANE</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="NameRemark" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>Free text name remark.  Example: A123456</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="Telephone">
    <xsd:annotation>
      <xsd:documentation>Telephone Number</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" name="PhonePreFix" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>This element has been deprecated and will be removed in version 4.7</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element ref="TelephoneNumber" />
        <xsd:element minOccurs="0" ref="Remark">
          <xsd:annotation>
            <xsd:documentation>Freeflow text remark, such as contact name, best time to call, etc.

Examples: 
After hours only

NOTE: If the TravelArranger node is also populated, map the "Remark" content PLUS the "Travelarranger" content as a single string with separator to the PNRCreate/....../Telephone/Remark node. </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="TravelArranger">
          <xsd:annotation>
            <xsd:documentation>Use to associate a Travel Arranger to this traveler.  Name and ID is stored here (to be used for queries based on this data)</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:sequence>
              <xsd:element minOccurs="0" name="Name" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>Full name of Travel Arranger (may also be used for queries).

Example:
Melanie Reidy</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" ref="IDNumber">
                <xsd:annotation>
                  <xsd:documentation>Unique Travel arranger ID to be used for queries

Example: KJR878</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
            </xsd:sequence>
          </xsd:complexType>
        </xsd:element>
      </xsd:sequence>
      <xsd:attributeGroup ref="ActionOptional" />
      <xsd:attribute name="Type" use="optional">
        <xsd:annotation>
          <xsd:documentation>Phone type.  Values are:
B = BUSINESS
C = CELLULAR
M = MOBILE
F = FAX
H = HOME
E = EMERGENCY
T = TRAVEL ARRANGER
O = OTHER 

Example: H</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:enumeration value="B" />
            <xsd:enumeration value="C" />
            <xsd:enumeration value="F" />
            <xsd:enumeration value="H" />
            <xsd:enumeration value="E" />
            <xsd:enumeration value="T" />
            <xsd:enumeration value="O" />
            <xsd:enumeration value="M" />
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:attribute>
      <xsd:attributeGroup ref="ProfSource" />
      <xsd:attributeGroup ref="LineRef" />
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="TelephoneGroup">
    <xsd:annotation>
      <xsd:documentation>Telephone group.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element maxOccurs="unbounded" ref="Telephone" />
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="ContactGroup">
    <xsd:annotation>
      <xsd:documentation>Telephone group.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" ref="TelephoneGroup" />
        <xsd:element minOccurs="0" ref="EmailGroup" />
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="TelephoneNumber">
    <xsd:annotation>
      <xsd:documentation>Telephone number.  Example: 305-269-6975</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:simpleContent>
        <xsd:extension base="xsd:string">
          <xsd:attribute name="Extension" type="xsd:integer">
            <xsd:annotation>
              <xsd:documentation>Phone extension

Example: 624</xsd:documentation>
            </xsd:annotation>
          </xsd:attribute>
        </xsd:extension>
      </xsd:simpleContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="EmailGroup">
    <xsd:annotation>
      <xsd:documentation>Email address group</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element maxOccurs="unbounded" ref="EmailAddress" />
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="EmailAddress">
    <xsd:annotation>
      <xsd:documentation>E-mail address</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="Email" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Individual e-mail address.  Example: support@sample.com</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" ref="Remark">
          <xsd:annotation>
            <xsd:documentation>Freeflow text remark, such as contact name, emergency contactl, etc.

Examples: 
Emergency email

NOTE: If the TravelArranger node is also populated, map the "Remark" content PLUS the "Travelarranger" content as a single string with separator to the PNRCreate/.../EmailAddress/Remark node. </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="Language" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Language(s) preferred by traveler using .net language codes (localization codes). 

Sample:  fr-ca</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="TravelArranger">
          <xsd:annotation>
            <xsd:documentation>Use to associate a Travel Arranger to this traveler.  Name and ID is stored here (to be used for queries based on this data)</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:sequence>
              <xsd:element minOccurs="0" name="Name" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>Full name of Travel Arranger (may also be used for queries).

Example:
Melanie Reidy</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" ref="IDNumber">
                <xsd:annotation>
                  <xsd:documentation>Unique Travel arranger ID to be used for queries

Example: KJR878</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
            </xsd:sequence>
          </xsd:complexType>
        </xsd:element>
      </xsd:sequence>
      <xsd:attributeGroup ref="ActionOptional" />
      <xsd:attribute name="Type" use="optional">
        <xsd:annotation>
          <xsd:documentation>Email type.  Values are:
B = BUSINESS
H = HOME
E = EMERGENCY
T = TRAVEL ARRANGER
O = OTHER 
Example: H</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:enumeration value="B" />
            <xsd:enumeration value="H" />
            <xsd:enumeration value="E" />
            <xsd:enumeration value="T" />
            <xsd:enumeration value="O" />
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:attribute>
      <xsd:attributeGroup ref="ProfSource" />
      <xsd:attributeGroup ref="LineRef" />
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="Email">
    <xsd:annotation>
      <xsd:documentation>E-mail address</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="Email">
          <xsd:annotation>
            <xsd:documentation>Individual e-mail address.  Example: support@sample.com</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
      <xsd:attributeGroup ref="ActionMandatory" />
      <xsd:attribute name="Type" use="optional">
        <xsd:annotation>
          <xsd:documentation>Email type.  Values are:
B = BUSINESS
H = HOME
O = OTHER 
Example: H</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:enumeration value="B" />
            <xsd:enumeration value="H" />
            <xsd:enumeration value="O" />
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:attribute>
      <xsd:attributeGroup ref="ProfSource" />
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="Address">
    <xsd:annotation>
      <xsd:documentation>Individual Address</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" name="OptionalName" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>(Optional) Name if deviated from Traveler's name or Company's name - see nodes:

../ProfileInformation/CompanyInfo
../ProfileInformation/TravelerInfo
 </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element maxOccurs="2" ref="AddressLine" />
        <xsd:element ref="City" />
        <xsd:element ref="PostalCode" />
        <xsd:element minOccurs="0" ref="StateProvinceCode" />
        <xsd:element minOccurs="0" name="CountryName" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Country name.

Example: Great Britain</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element name="CountryCode" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>ISO Country code. This element is introduced as mandatory although GDS implementation will not require its presence until 30MAR2008.

Example: US</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
      <xsd:attributeGroup ref="ActionOptional" />
      <xsd:attributeGroup ref="ProfSource" />
      <xsd:attributeGroup ref="LineRef" />
      <xsd:attribute name="Use" use="optional">
        <xsd:annotation>
          <xsd:documentation>Indicates use of address information.  Values are:
B = Billing
D = Delivery
H = Mailing home address (Amadeus)
O = Mailing miscellaneous address (Amadeus)
M = Mailing address (Amadeus)

As you can see B and D are supported by all GDS. See for GDS specific address types above.

Example: D

NOTE: THIS NEEDS TO BE REWORKED AS IT IS FACTUALLY NOT TRUE. /H, /D and /M in Amadeus ONLY APPLY TO AM (Mailing) ELEMENTS</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:length value="1" />
            <xsd:enumeration value="B" />
            <xsd:enumeration value="D" />
            <xsd:enumeration value="A" />
            <xsd:enumeration value="H" />
            <xsd:enumeration value="O" />
            <xsd:enumeration value="M" />
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:attribute>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="AddressLine" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>Street or PO Box address.  Example: 1234 Main Street</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="City" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>City name.  Example: NY</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="Country" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>Country.  Example: USA</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="PostalCode" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>Postal code or zip code.  Example: 12345</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="FormOfPayment">
    <xsd:annotation>
      <xsd:documentation>Form of payment group</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:choice>
          <xsd:element ref="CreditCard" />
          <xsd:element name="Other" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>Other payment information.  Example: Check 113</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:choice>
        <xsd:element minOccurs="0" ref="Remark">
          <xsd:annotation>
            <xsd:documentation>Freeflow text remark
Example: Bartercard for AA validated flights</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
      <xsd:attributeGroup ref="ActionOptional" />
      <xsd:attributeGroup ref="ProfSource" />
      <xsd:attributeGroup ref="LineRef" />
      <xsd:attributeGroup ref="Priority" />
      <xsd:attribute name="Purpose" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>Indicator for which transactions this FOP can be used.  

Available values:
TRANS = use for air/rail transportation only
GUAR = use for Car/Hotel guarantee only
PERS = use for personal travel only
ALL = (default) use for all transactions.

Example: TRANS</xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="CardholderFirstName">
    <xsd:annotation>
      <xsd:documentation>Credit card holder's first name.  Example: JOHN</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleType>
      <xsd:restriction base="xsd:string">
        <xsd:minLength value="1" />
      </xsd:restriction>
    </xsd:simpleType>
  </xsd:element>
  <xsd:element name="CardholderLastName">
    <xsd:annotation>
      <xsd:documentation>Credit card holder's last name.  This is only required for Sabre.  Example: SMITH</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleType>
      <xsd:restriction base="xsd:string">
        <xsd:minLength value="1" />
      </xsd:restriction>
    </xsd:simpleType>
  </xsd:element>
  <xsd:element name="CreditCard">
    <xsd:annotation>
      <xsd:documentation>Credit card group</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="CCCode">
          <xsd:annotation>
            <xsd:documentation>Credit card (vendor) code. Example: VI</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:simpleContent>
              <xsd:extension base="xsd:string">
                <xsd:attribute name="EasyPay" type="xsd:string">
                  <xsd:annotation>
                    <xsd:documentation>If attribute is present and "Y" this credit card is an IATA EasyPay card and subject to special rules and validation.</xsd:documentation>
                  </xsd:annotation>
                </xsd:attribute>
              </xsd:extension>
            </xsd:simpleContent>
          </xsd:complexType>
        </xsd:element>
        <xsd:element ref="CCNumber" />
        <xsd:element ref="CCExpiration" />
        <xsd:element minOccurs="0" name="SecurityID" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Credit card security number for online transactions (referred to also as CVV2, CVC2, CSC or CID). This is a 3-digit (Visa, Master, Discover) or 4-digit (Amex) number.

IS THIS NUMBER ALLOWED TO BE STORED AT ALL?  OR CAN IT BE STORED ENCRYPTED?</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:choice minOccurs="0">
          <xsd:sequence>
            <xsd:element minOccurs="0" ref="CardholderFirstName" />
            <xsd:element ref="CardholderLastName" />
          </xsd:sequence>
          <xsd:element name="CardholderFullName">
            <xsd:annotation>
              <xsd:documentation>Credit cardholder full name as it appears on the card</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
              <xsd:restriction base="xsd:string">
                <xsd:minLength value="1" />
              </xsd:restriction>
            </xsd:simpleType>
          </xsd:element>
        </xsd:choice>
        <xsd:element minOccurs="0" name="ReportingData">
          <xsd:annotation>
            <xsd:documentation>Data  Elements required by certain card issuers for report purposes</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:sequence>
              <xsd:element minOccurs="0" name="AccountNumber">
                <xsd:annotation>
                  <xsd:documentation>Corporation's account number</xsd:documentation>
                </xsd:annotation>
                <xsd:complexType>
                  <xsd:simpleContent>
                    <xsd:extension base="xsd:string">
                      <xsd:attribute name="Min" type="xsd:integer">
                        <xsd:annotation>
                          <xsd:documentation>minimum length</xsd:documentation>
                        </xsd:annotation>
                      </xsd:attribute>
                      <xsd:attribute name="Max" type="xsd:integer">
                        <xsd:annotation>
                          <xsd:documentation>maximum length</xsd:documentation>
                        </xsd:annotation>
                      </xsd:attribute>
                      <xsd:attribute name="Format" type="xsd:string">
                        <xsd:annotation>
                          <xsd:documentation>A - alphanumeric (default)
N - numeric
D - ISO date format</xsd:documentation>
                        </xsd:annotation>
                      </xsd:attribute>
                      <xsd:attribute name="Mandatory" type="xsd:string">
                        <xsd:annotation>
                          <xsd:documentation>O - optional (default)
M - mandatory</xsd:documentation>
                        </xsd:annotation>
                      </xsd:attribute>
                      <xsd:attribute name="DataElementID" type="xsd:string" use="required">
                        <xsd:annotation>
                          <xsd:documentation>Vendor code assigned to this reporting element
Example:  BK</xsd:documentation>
                        </xsd:annotation>
                      </xsd:attribute>
                      <xsd:attribute name="DataElementName" type="xsd:string" use="required">
                        <xsd:annotation>
                          <xsd:documentation>Vendor element name assigned to this reporting element
Example:  Corperate ID</xsd:documentation>
                        </xsd:annotation>
                      </xsd:attribute>
                    </xsd:extension>
                  </xsd:simpleContent>
                </xsd:complexType>
              </xsd:element>
              <xsd:element minOccurs="0" name="CostCenter">
                <xsd:annotation>
                  <xsd:documentation>Cost center number/code</xsd:documentation>
                </xsd:annotation>
                <xsd:complexType>
                  <xsd:simpleContent>
                    <xsd:extension base="xsd:string">
                      <xsd:attribute name="Min" type="xsd:integer">
                        <xsd:annotation>
                          <xsd:documentation>minimum length</xsd:documentation>
                        </xsd:annotation>
                      </xsd:attribute>
                      <xsd:attribute name="Max" type="xsd:integer">
                        <xsd:annotation>
                          <xsd:documentation>maximum length</xsd:documentation>
                        </xsd:annotation>
                      </xsd:attribute>
                      <xsd:attribute name="Format" type="xsd:string">
                        <xsd:annotation>
                          <xsd:documentation>A - alphanumeric (default)
N - numeric
D - ISO date format</xsd:documentation>
                        </xsd:annotation>
                      </xsd:attribute>
                      <xsd:attribute name="Mandatory" type="xsd:string">
                        <xsd:annotation>
                          <xsd:documentation>O - optional (default)
M - mandatory</xsd:documentation>
                        </xsd:annotation>
                      </xsd:attribute>
                      <xsd:attribute name="DataElementID" type="xsd:string" use="required">
                        <xsd:annotation>
                          <xsd:documentation>Vendor code assigned to this reporting element
Example:  BK</xsd:documentation>
                        </xsd:annotation>
                      </xsd:attribute>
                      <xsd:attribute name="DataElementName" type="xsd:string" use="required">
                        <xsd:annotation>
                          <xsd:documentation>Vendor element name assigned to this reporting element
Example:  Corperate ID</xsd:documentation>
                        </xsd:annotation>
                      </xsd:attribute>
                    </xsd:extension>
                  </xsd:simpleContent>
                </xsd:complexType>
              </xsd:element>
              <xsd:element minOccurs="0" name="Department">
                <xsd:annotation>
                  <xsd:documentation>Department description  for this Traveler in this association.
Example: Marketing</xsd:documentation>
                </xsd:annotation>
                <xsd:complexType>
                  <xsd:simpleContent>
                    <xsd:extension base="xsd:string">
                      <xsd:attribute name="Min" type="xsd:integer">
                        <xsd:annotation>
                          <xsd:documentation>minimum length</xsd:documentation>
                        </xsd:annotation>
                      </xsd:attribute>
                      <xsd:attribute name="Max" type="xsd:integer">
                        <xsd:annotation>
                          <xsd:documentation>maximum length</xsd:documentation>
                        </xsd:annotation>
                      </xsd:attribute>
                      <xsd:attribute name="Format" type="xsd:string">
                        <xsd:annotation>
                          <xsd:documentation>A - alphanumeric (default)
N - numeric
D - ISO date format</xsd:documentation>
                        </xsd:annotation>
                      </xsd:attribute>
                      <xsd:attribute name="Mandatory" type="xsd:string">
                        <xsd:annotation>
                          <xsd:documentation>O - optional (default)
M - mandatory</xsd:documentation>
                        </xsd:annotation>
                      </xsd:attribute>
                      <xsd:attribute name="DataElementID" type="xsd:string" use="required">
                        <xsd:annotation>
                          <xsd:documentation>Vendor code assigned to this reporting element
Example:  BK</xsd:documentation>
                        </xsd:annotation>
                      </xsd:attribute>
                      <xsd:attribute name="DataElementName" type="xsd:string" use="required">
                        <xsd:annotation>
                          <xsd:documentation>Vendor element name assigned to this reporting element
Example:  Corperate ID</xsd:documentation>
                        </xsd:annotation>
                      </xsd:attribute>
                    </xsd:extension>
                  </xsd:simpleContent>
                </xsd:complexType>
              </xsd:element>
              <xsd:element minOccurs="0" name="EmployeeID">
                <xsd:annotation>
                  <xsd:documentation>EmployeeID of traveler for this association.
Example 476254</xsd:documentation>
                </xsd:annotation>
                <xsd:complexType>
                  <xsd:simpleContent>
                    <xsd:extension base="xsd:string">
                      <xsd:attribute name="Min" type="xsd:integer">
                        <xsd:annotation>
                          <xsd:documentation>minimum length</xsd:documentation>
                        </xsd:annotation>
                      </xsd:attribute>
                      <xsd:attribute name="Max" type="xsd:integer">
                        <xsd:annotation>
                          <xsd:documentation>maximum length</xsd:documentation>
                        </xsd:annotation>
                      </xsd:attribute>
                      <xsd:attribute name="Format" type="xsd:string">
                        <xsd:annotation>
                          <xsd:documentation>A - alphanumeric (default)
N - numeric
D - ISO date format</xsd:documentation>
                        </xsd:annotation>
                      </xsd:attribute>
                      <xsd:attribute name="Mandatory" type="xsd:string">
                        <xsd:annotation>
                          <xsd:documentation>O - optional (default)
M - mandatory</xsd:documentation>
                        </xsd:annotation>
                      </xsd:attribute>
                      <xsd:attribute name="DataElementID" type="xsd:string" use="required">
                        <xsd:annotation>
                          <xsd:documentation>Vendor code assigned to this reporting element
Example:  BK</xsd:documentation>
                        </xsd:annotation>
                      </xsd:attribute>
                      <xsd:attribute name="DataElementName" type="xsd:string" use="required">
                        <xsd:annotation>
                          <xsd:documentation>Vendor element name assigned to this reporting element
Example:  Corperate ID</xsd:documentation>
                        </xsd:annotation>
                      </xsd:attribute>
                    </xsd:extension>
                  </xsd:simpleContent>
                </xsd:complexType>
              </xsd:element>
              <xsd:element minOccurs="0" name="CustomerReferencesGroup">
                <xsd:annotation>
                  <xsd:documentation>Customer References Group Data
Example: Cost Centre, Employee ID, etc.</xsd:documentation>
                </xsd:annotation>
                <xsd:complexType>
                  <xsd:sequence>
                    <xsd:element maxOccurs="7" name="CustomerReference">
                      <xsd:annotation>
                        <xsd:documentation>Customer Reference Data Example: Cost Centre, Employee ID etc. Max Length 255</xsd:documentation>
                      </xsd:annotation>
                      <xsd:complexType>
                        <xsd:simpleContent>
                          <xsd:extension base="xsd:string">
                            <xsd:attribute name="Number" type="xsd:integer" use="required">
                              <xsd:annotation>
                                <xsd:documentation>Values 01 - 07</xsd:documentation>
                              </xsd:annotation>
                            </xsd:attribute>
                            <xsd:attribute name="TypeCode" type="xsd:integer" use="required">
                              <xsd:annotation>
                                <xsd:documentation>Values 0001 - 0007</xsd:documentation>
                              </xsd:annotation>
                            </xsd:attribute>
                          </xsd:extension>
                        </xsd:simpleContent>
                      </xsd:complexType>
                    </xsd:element>
                  </xsd:sequence>
                  <xsd:attribute name="IBTA">
                    <xsd:annotation>
                      <xsd:documentation>Indicates if IBTA is applicable or not Values are Y or N</xsd:documentation>
                    </xsd:annotation>
                    <xsd:simpleType>
                      <xsd:restriction base="xsd:string">
                        <xsd:minLength value="1" />
                        <xsd:maxLength value="1" />
                      </xsd:restriction>
                    </xsd:simpleType>
                  </xsd:attribute>
                  <xsd:attribute name="AgencyNumber" type="xsd:string" use="required">
                    <xsd:annotation>
                      <xsd:documentation>Travel agency code identifies the Travel Agency submitting the Transaction</xsd:documentation>
                    </xsd:annotation>
                  </xsd:attribute>
                  <xsd:attribute name="OfficeNumber" type="xsd:string" use="required">
                    <xsd:annotation>
                      <xsd:documentation>Travel Office Code identifies the individual Travel Office submitting the Transaction within the Travel Agency</xsd:documentation>
                    </xsd:annotation>
                  </xsd:attribute>
                </xsd:complexType>
              </xsd:element>
            </xsd:sequence>
          </xsd:complexType>
        </xsd:element>
        <xsd:element minOccurs="0" name="CCAddressGroup">
          <xsd:annotation>
            <xsd:documentation>Use this to map a CC address which deviates from the billing address in profile.  This is typically the case when (a) the traveler has a different billing address than CC address or (b) when a card is used of a person which is not part of itinerary</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="2" ref="AddressLine" />
              <xsd:element minOccurs="0" ref="City" />
              <xsd:element minOccurs="0" ref="PostalCode" />
              <xsd:element minOccurs="0" ref="StateProvinceCode" />
              <xsd:element minOccurs="0" name="CountryCode" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>ISO Country code. This element is introduced as mandatory although GDS implementation will not require its presence until 30MAR2008.

Example: US</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
            </xsd:sequence>
          </xsd:complexType>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="CCCode" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>Credit card code.  Example: VI</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="CCNumber" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>Credit card number.  Example: 4011236654652341</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="CCExpiration">
    <xsd:annotation>
      <xsd:documentation>Credit card expiration group</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element ref="Month" />
        <xsd:element ref="Year" />
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="Month">
    <xsd:annotation>
      <xsd:documentation>Credit card expiration month.  Example: 02</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleType>
      <xsd:restriction base="xsd:integer">
        <xsd:minInclusive value="1" />
        <xsd:maxInclusive value="12" />
      </xsd:restriction>
    </xsd:simpleType>
  </xsd:element>
  <xsd:element name="Year">
    <xsd:annotation>
      <xsd:documentation>Last two digits of the credit card expiration year.  Example: 06</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleType>
      <xsd:restriction base="xsd:integer">
        <xsd:minInclusive value="00" />
        <xsd:maxInclusive value="99" />
        <xsd:totalDigits value="2" />
      </xsd:restriction>
    </xsd:simpleType>
  </xsd:element>
  <xsd:element name="FrequentTravelerGroup">
    <xsd:annotation>
      <xsd:documentation>Frequent traveler group - only for traveler profile data</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" maxOccurs="unbounded" name="FreqFlyerNumber">
          <xsd:annotation>
            <xsd:documentation>Frequent Flyer Card and Status information, also used for Rail memberships</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:sequence>
              <xsd:element ref="AirlineCode">
                <xsd:annotation>
                  <xsd:documentation>Issuing Airline Code.  Example: LH</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element ref="IDNumber">
                <xsd:annotation>
                  <xsd:documentation>Frequent flyer number.  Example: 0956301007</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" ref="ProgramName">
                <xsd:annotation>
                  <xsd:documentation>Program name.  

Example: 
Miles and More (air)
Hilton HHonors (hotel)
Emerald Club (car)</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" maxOccurs="unbounded" ref="PartnerAirline">
                <xsd:annotation>
                  <xsd:documentation>Airline code. If entered, any miles flown on one of these partner airlines are credited to the associated frequent flyer program.  This allows via UI to select the accruel of miles for a partner airline flight.

Sceanrio:  The program "Miles and More" is offered by LH (Lufthansa).  Miles earned on flights marketed by any of LH's Star Alliance and other selected partners can be credited to LH's "Miles and More" program. 

Example: AC</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" name="Alliance" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>Name of alliance of which the program offering airline is a member.

Possible Values are
'Star Alliance'
'oneworld'
'SkyTeams'

Examples: Star Alliance</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" name="SubscriberName">
                <xsd:annotation>
                  <xsd:documentation>Name group</xsd:documentation>
                </xsd:annotation>
                <xsd:complexType>
                  <xsd:sequence>
                    <xsd:element ref="Surname">
                      <xsd:annotation>
                        <xsd:documentation>Subscriber family name.  Example: SMITH</xsd:documentation>
                      </xsd:annotation>
                    </xsd:element>
                    <xsd:element ref="GivenName">
                      <xsd:annotation>
                        <xsd:documentation>Subscriber given (first) name. Example: JANE</xsd:documentation>
                      </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" ref="Initial">
                      <xsd:annotation>
                        <xsd:documentation>Suscriber initial or middle name Example: G or George</xsd:documentation>
                      </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" ref="Title">
                      <xsd:annotation>
                        <xsd:documentation>Subscriber title.  Example: MISS, MRS, REV</xsd:documentation>
                      </xsd:annotation>
                    </xsd:element>
                  </xsd:sequence>
                </xsd:complexType>
              </xsd:element>
            </xsd:sequence>
            <xsd:attributeGroup ref="ActionOptional" />
            <xsd:attributeGroup ref="LineRef" />
          </xsd:complexType>
        </xsd:element>
        <xsd:element minOccurs="0" maxOccurs="unbounded" name="FreqGuestNumber">
          <xsd:annotation>
            <xsd:documentation>Frequent Guest Card and Status information</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:sequence>
              <xsd:element ref="CompanyCode" />
              <xsd:element ref="IDNumber">
                <xsd:annotation>
                  <xsd:documentation>Frequent Renter or Guest ID number.  Example: 0956301007</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" ref="ProgramName">
                <xsd:annotation>
                  <xsd:documentation>Program name.  

Example: 
Miles and More (air)
Hilton HHonors (hotel)
Emerald Club (car)</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" name="Association">
                <xsd:annotation>
                  <xsd:documentation>Associated airline frequent flyer program.  This is the frequent flyer program a traveler assigns in order to earn additional miles/points from hotel and/or car companies</xsd:documentation>
                </xsd:annotation>
                <xsd:complexType>
                  <xsd:sequence>
                    <xsd:element ref="AirlineCode">
                      <xsd:annotation>
                        <xsd:documentation>Issuing Airline Code.  Example: LH</xsd:documentation>
                      </xsd:annotation>
                    </xsd:element>
                    <xsd:element ref="IDNumber">
                      <xsd:annotation>
                        <xsd:documentation>Frequent flyer ID number.  Example: 0956301007</xsd:documentation>
                      </xsd:annotation>
                    </xsd:element>
                  </xsd:sequence>
                </xsd:complexType>
              </xsd:element>
            </xsd:sequence>
            <xsd:attributeGroup ref="ActionOptional" />
            <xsd:attributeGroup ref="LineRef" />
            <xsd:attribute name="Type" type="xsd:string">
              <xsd:annotation>
                <xsd:documentation>Identified association to one of the following groups:

C = CAR
H = HOTEL </xsd:documentation>
              </xsd:annotation>
            </xsd:attribute>
          </xsd:complexType>
        </xsd:element>
        <xsd:element minOccurs="0" maxOccurs="unbounded" name="OtherMemberships">
          <xsd:annotation>
            <xsd:documentation>Discount Cards such as AAA, AARP, etc.</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:sequence>
              <xsd:element minOccurs="0" ref="AssociationCode" />
              <xsd:element ref="IDNumber">
                <xsd:annotation>
                  <xsd:documentation>Membership ID number.  Example: 0956301007</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" ref="ProgramName">
                <xsd:annotation>
                  <xsd:documentation>Program name.  

Example: 
AARP Membership
AAA Membership</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
            </xsd:sequence>
            <xsd:attributeGroup ref="ActionOptional" />
            <xsd:attributeGroup ref="LineRef" />
          </xsd:complexType>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="IDNumber" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>Frequent flyer or guest ID number.  Example: 0956301007</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="ProgramName" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>Frequent flyer program name.  Example: Frequence Plus</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="CustomerIdentification">
    <xsd:annotation>
      <xsd:documentation>Customer identification group</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="Text" />
      </xsd:sequence>
      <xsd:attribute name="Order" type="xsd:IDREF" use="optional">
        <xsd:annotation>
          <xsd:documentation>Order in which the profile element should be added to the profile.  Example: L1</xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="Action" use="required">
        <xsd:annotation>
          <xsd:documentation>Requests what type of line to add to profile.  Values are: 
A = Always move lines
O = Optional move lines
N = Never move lines
Example: A</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:minLength value="1" />
            <xsd:maxLength value="1" />
            <xsd:enumeration value="A" />
            <xsd:enumeration value="O" />
            <xsd:enumeration value="N" />
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:attribute>
      <xsd:attribute name="Qualifier" type="xsd:string" use="optional">
        <xsd:annotation>
          <xsd:documentation>Identifies secondary qualifier for profile element.  Example: B</xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="GeneralRemark">
    <xsd:annotation>
      <xsd:documentation>General remark group</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="Text" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Any remark free-flow text</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
      <xsd:attributeGroup ref="ActionOptional" />
      <xsd:attributeGroup ref="ProfSource" />
      <xsd:attributeGroup ref="LineRef" />
      <xsd:attribute name="CustomCategory" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>Unique 1-letter category (offered by most GDS) and assigned by agency; mostly used to group remarks by AIR, CAR, FARES or HOTEL related remarks.

Possible values are all letters of the alphabet with the following exceptions: T, ??

Example: C

NOTE: ALL GDS MUST BE CHECKED IF A 1-LETTER CODE APPLIES TO ALL.</xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="HiddenRemark">
    <xsd:annotation>
      <xsd:documentation>Hidden/confidential remarks can only be displayed by PCCs listed if they have an EOS agreement.  A right to modify can be given to a PCC.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="Text" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Any remark free-flow text</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" maxOccurs="3" name="PseudoCityCode">
          <xsd:annotation>
            <xsd:documentation>PCCs listed here do have a right to read or update this type of remark lines according to access code defined in attribute</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:simpleContent>
              <xsd:extension base="xsd:string">
                <xsd:attribute name="Write" type="xsd:string">
                  <xsd:annotation>
                    <xsd:documentation>Allowed values: Y, N

Y = will allow this PCC to update this remark.  

N = allow that this PCC can only retrieve/read this remark (default)

Default or omission does NOT allow to update this remark.</xsd:documentation>
                  </xsd:annotation>
                </xsd:attribute>
              </xsd:extension>
            </xsd:simpleContent>
          </xsd:complexType>
        </xsd:element>
      </xsd:sequence>
      <xsd:attributeGroup ref="ActionOptional" />
      <xsd:attributeGroup ref="ProfSource" />
      <xsd:attributeGroup ref="LineRef" />
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="CorporateRemark">
    <xsd:annotation>
      <xsd:documentation>Corporate remarks allow corporations to share remarks with pre-defined offices (thus no need to enter PCC which are allowed to view)

Only PCCs with appropriate EOS with the PNR creating office can view this type of remark. </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="Text" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Any remark free-flow text</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
      <xsd:attributeGroup ref="ActionMandatory" />
      <xsd:attributeGroup ref="ProfSource" />
      <xsd:attributeGroup ref="LineRef" />
      <xsd:attribute name="Action">
        <xsd:annotation>
          <xsd:documentation>Indicates how this data is moved into or added to a PNR.  
Values are: 

A = Always move line
O = Optional move line
N = Never move line
Example: A

</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:minLength value="1" />
            <xsd:maxLength value="1" />
            <xsd:enumeration value="A" />
            <xsd:enumeration value="N" />
            <xsd:enumeration value="O" />
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:attribute>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="FareSavingTable">
    <xsd:annotation>
      <xsd:documentation>FareSaving remark group.  This table will allow to provide all Fare Saving Reason Codes applicable for theis Company profile.

Ideally used to provide a dropdown list with these values</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element maxOccurs="unbounded" name="FareSavingRemark">
          <xsd:annotation>
            <xsd:documentation>Individual Fare Saving Remark</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:sequence>
              <xsd:element name="FareSavingCode" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>FareSaving code assigned by agency to this remark

Example: FD</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element name="Text" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>Any remark free-flow text

Example:
Lowest Possible Fare</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
            </xsd:sequence>
          </xsd:complexType>
        </xsd:element>
      </xsd:sequence>
      <xsd:attributeGroup ref="DataBaseLink" />
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="QCRemarks">
    <xsd:annotation>
      <xsd:documentation>Quality Control remark group.  

This table allows the provision of Quality Control checks unique to the account (corporation).  The table is returned via the corporate profile and may be hosted in the profile database itself or may be appended from a supplemental database/table.

The execution of the required QC edits is ideally performed between the UI and a rule engine (without dispatching to any source).</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element maxOccurs="unbounded" name="QCRemark">
          <xsd:annotation>
            <xsd:documentation>Below are samples of some QC edits:

F1 = Check for FOP element
F2 = Check for stored fare
P1 = Check for Phone number
S1 = Check for service fee
C1 = Check for CAR element
H1 = Check for HOTEL element
XX = any code assigned by customer 
Example: XX</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:sequence>
              <xsd:element ref="QCCode">
                <xsd:annotation>
                  <xsd:documentation>A 2 letter alphanumeric code identifying the quality control check required for this PNR.

Example:
F1 - corresponds with example in Text node below</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element name="Text" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>Any descriptive free-flow text

Example:
Check for FOP element</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
            </xsd:sequence>
          </xsd:complexType>
        </xsd:element>
      </xsd:sequence>
      <xsd:attributeGroup ref="DataBaseLink" />
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="DocumentRemarks">
    <xsd:annotation>
      <xsd:documentation>Dpcument remarks group</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element maxOccurs="unbounded" ref="PrintRemark">
          <xsd:annotation>
            <xsd:documentation>Remark to be printed on Invoice, Itinerary, ETicket, PaxReceipt</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="PrintRemark">
    <xsd:annotation>
      <xsd:documentation>Remark to be printed on Invoice, Itinerary</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="Text" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Any free-flow text to be printed on defined document</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
      <xsd:attributeGroup ref="ActionOptional" />
      <xsd:attributeGroup ref="ProfSource" />
      <xsd:attributeGroup ref="LineRef" />
      <xsd:attribute name="PrintCode" type="xsd:string" use="required">
        <xsd:annotation>
          <xsd:documentation>defines where this remark is to be printed.
Possible values are:

IT = Itinerary Only
IN = Inv/PaxReceipt
II = Inv/Itin/PaxReceipt 
ET = Etkt PaxReceipt only
</xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="QCCode">
    <xsd:annotation>
      <xsd:documentation>A 2 letter alphanumeric code identifying the quality control check required for this PNR.

This is a table the customer can provide as an extension to the corporate profile coming either from the profile database or appended from a supplemental table.

The execution of the required QC edits may be performed between the UI and a rule engine (without dispatching to any source).

Below are samples of how these codes can be used:

F1 = Check for FOP element
F2 = Check for stored fare
P1 = Check for Phone number
S1 = Check for service fee
C1 = Check for CAR element
H1 = Check for HOTEL element
XX = any code assigned by customer 
Example: XX</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleType>
      <xsd:restriction base="xsd:string">
        <xsd:minLength value="2" />
        <xsd:maxLength value="2" />
      </xsd:restriction>
    </xsd:simpleType>
  </xsd:element>
  <xsd:element name="OtherServiceInfoGroup">
    <xsd:annotation>
      <xsd:documentation>Other service information group</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element maxOccurs="unbounded" ref="OSIElement" />
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="OSIElement">
    <xsd:annotation>
      <xsd:documentation>Individual OSI element</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element ref="AirlineCode">
          <xsd:annotation>
            <xsd:documentation>Specific Airline code.  If 'YY' is entered the OSI element is to be dispatched to all airlines participating in the itinerary.
Example: AA</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element name="Text" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>OSI free-flow text</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
      <xsd:attributeGroup ref="ActionOptional" />
      <xsd:attributeGroup ref="ProfSource" />
      <xsd:attributeGroup ref="LineRef" />
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="CompanyCode" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>Car Company or Hotel Chain 2-letter code.  Example: ZE</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="AssociationCode" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>Code for organization or association.  Example: AARP, AAA</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="SpecialServiceRequests">
    <xsd:annotation>
      <xsd:documentation>Special service request group</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" maxOccurs="unbounded" ref="Regular" />
        <xsd:element minOccurs="0" maxOccurs="unbounded" ref="APIS">
          <xsd:annotation>
            <xsd:documentation>Contains fully structured SSR elements if provided by source profile; applies to traveler profiles only; uses advanced "DOC[S,O,A]" SSR codes. 

Note: If APIS data is not provided by source profile, information to construct an APIS SSR may be available in the following nodes:  

.../ProfileInformation/TravelerInfo/PersonalData

.../ProfileInformation/TravelerInfo/TravelDocs</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="SSRCode">
    <xsd:annotation>
      <xsd:documentation>Special service request code.  IATA standard.  Example: VGML</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:simpleContent>
        <xsd:extension base="xsd:string" />
      </xsd:simpleContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="InfantLapIndicator">
    <xsd:annotation>
      <xsd:documentation>A mandatory indicator if traveler is accompanied by an infant on the lap (no seperate seat)

Possible value:
I = Infant on lap

Note: Infant w/own seat requires separate SSR</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleType>
      <xsd:restriction base="xsd:string">
        <xsd:length value="1" />
        <xsd:enumeration value="I" />
      </xsd:restriction>
    </xsd:simpleType>
  </xsd:element>
  <xsd:element name="Regular">
    <xsd:annotation>
      <xsd:documentation>Special service request, such as for wheelchair, special meal, special luggage, seats, etc.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element ref="SSRCode">
          <xsd:annotation>
            <xsd:documentation>Special service request code. 
IATA standard.  Example: VGML</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" ref="AirlineCode">
          <xsd:annotation>
            <xsd:documentation>Airline code to dispatch request to.  If code "YY" is used this request will be dispatched to all participating carriers in the itinerary.
Example: 
AA (specific)
YY (dispatch to all)</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="Text" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Free flow text associated to certain SSR codes, e.g. weight, number, size, description

Example: [MAAS] Elderly Person</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
      <xsd:attributeGroup ref="ActionOptional" />
      <xsd:attributeGroup ref="ProfSource" />
      <xsd:attributeGroup ref="LineRef" />
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="APIS">
    <xsd:annotation>
      <xsd:documentation>Use for advanced travel information using "DOC[S,O,A]" SSR codes. 
(traveler profile data only)

Note: If APIS data is not provided by source profile, information to construct an APIS SSR may be available in the following nodes:  

.../ProfileInformation/TravelerInfo/PersonalData

.../ProfileInformation/TravelerInfo/TravelDocs</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:choice>
        <xsd:element minOccurs="0" name="PictureID">
          <xsd:annotation>
            <xsd:documentation>Passport and secondary document data, not including Visa.
APIS SSR Code: DOCS</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:sequence>
              <xsd:element ref="SSRCode">
                <xsd:annotation>
                  <xsd:documentation>Only valid code for this re- quest type is DOCS(Passport or other ID) 
Example: DOCS</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" ref="AirlineCode">
                <xsd:annotation>
                  <xsd:documentation>Mandatory for Amadeus,
not applicable for Sabre.

Airline code to dispatch request to.  If code "YY" is used this request will be dispatched to all participating carriers in the itinerary.
Example: 
AA (specific)
YY (dispatch to all)</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" name="APISDocType" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>Document type as per IATA.

Mandatory for all airlines complying to AIRIMP standards, optional for others.

Valid IATA values are:
-- for DOCS --
A - Alien resident card
C - Permanent resident card
P - Passport
T - Refugee travel document and re-entry permit, US Travel document
F - Facilitation document
M - Military
N - Naturalization certificate
V - Border crossing card

-- for DOCO --
V - Visa                           K - Known Traveler           R - Redress Number

-- for DOCA --
no type for DOCA needed

Example: P</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" name="CountryOfIssue" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>The three-letter AIRIMP country code where this document was issued.
Example: USA

Mandatory for all airlines complying to AIRIMP standards, optional for others.

Note: 2-letter codes are allowed but above is IATA recommended</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" ref="DocNumber" />
              <xsd:element minOccurs="0" name="CountryOfNationality" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>Nationality in three-letter AIRIMP country code format. Example: USA 

Mandatory for all airlines complying to AIRIMP standards, optional for others.

Note: 2-letter codes are allowed but above is IATA recommended</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element ref="DateOfBirth">
                <xsd:annotation>
                  <xsd:documentation>Traveler birth date in ISO 8601 format (yyyy-mm-dd). Example: 2001-12-25

Note: when sent to airlines in APIS it needs to be formatted to: DDMMMYY.
Example: 25DEC2001</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element ref="Gender" />
              <xsd:element minOccurs="0" ref="DocExpiryDate">
                <xsd:annotation>
                  <xsd:documentation>Specifies the date when the document will expire. Date is in ISO 8601 format (yyyy-mm-dd).  Example: 2009-12-15

Note: when sent to airlines in APIS it needs to be formatted to: DDMMMYY.
Example: 15DEC2009</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" ref="Surname">
                <xsd:annotation>
                  <xsd:documentation>Traveler family (last) name - as it appears on the document.  
Example: SMITH</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" ref="GivenName">
                <xsd:annotation>
                  <xsd:documentation>Traveler given (first) name - as it appears on the document.  
Example: JANE</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" ref="MiddleName">
                <xsd:annotation>
                  <xsd:documentation>Traveler middle name or middle initial - as it appears on the document.  
Example: JANE</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" name="PassportHolder" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>Mandatory for a Multi-Passenger Passport.
If traveler is the primary passport holder the value must be set to "H".

Allowed value:
H = primary pspt holder</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
            </xsd:sequence>
          </xsd:complexType>
        </xsd:element>
        <xsd:element minOccurs="0" name="Visa">
          <xsd:annotation>
            <xsd:documentation>Passenger’s Visa, Place of Visa Issue and Passenger’s Place of Birth.
APIS SSR Code: DOCO</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:sequence>
              <xsd:element ref="SSRCode">
                <xsd:annotation>
                  <xsd:documentation>Only valid code for this re- quest type is DOCO(Visa) 
Example: 
DOCO</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" ref="AirlineCode">
                <xsd:annotation>
                  <xsd:documentation>Mandatory for Amadeus,
not applicable for Sabre.

Airline code to dispatch request to.  If code "YY" is used this request will be dispatched to all participating carriers in the itinerary.
Example: 
AA (specific)
YY (dispatch to all)</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" name="PlaceOfBirth">
                <xsd:annotation>
                  <xsd:documentation>Freeflow text - enter e.g. complete country name or the country code. a city and state, or a city and country name.
Examples: 
US
Houstan Texas</xsd:documentation>
                </xsd:annotation>
                <xsd:simpleType>
                  <xsd:restriction base="xsd:string">
                    <xsd:minLength value="1" />
                  </xsd:restriction>
                </xsd:simpleType>
              </xsd:element>
              <xsd:element name="APISDocType" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>Document type as per IATA.

Mandatory for all airlines complying to AIRIMP standards, optional for others.

Valid IATA code for this type is "V" "K" and "R".

Example: V</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element ref="DocNumber" />
              <xsd:element name="PlaceOfIssue">
                <xsd:annotation>
                  <xsd:documentation>Freeflow text - enter e.g. complete country name or the country code. a city and state, or a city and country name.
Examples: 
US
Houstan Texas</xsd:documentation>
                </xsd:annotation>
                <xsd:simpleType>
                  <xsd:restriction base="xsd:string">
                    <xsd:minLength value="1" />
                  </xsd:restriction>
                </xsd:simpleType>
              </xsd:element>
              <xsd:element ref="DocIssueDate">
                <xsd:annotation>
                  <xsd:documentation>Specifies the date when the document was issued. Date is in ISO 8601 format (yyyy-mm-dd).  Example: 2007-12-17

Note: when sent to airlines in APIS it needs to be formatted to: DDMMMYY.
Example: 17DEC2007</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element name="VisitingCountryCode" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>Three-letter AIRIMP country code of the country the Visa applies to. 
Example: HKG 

Note: 2-letter codes are allowed but above is IATA recommended</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" ref="InfantLapIndicator" />
            </xsd:sequence>
          </xsd:complexType>
        </xsd:element>
        <xsd:element minOccurs="0" name="AddressAdvice">
          <xsd:annotation>
            <xsd:documentation>Passenger’s Resident address 
APIS SSR Code: DOCA</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:sequence>
              <xsd:element ref="SSRCode">
                <xsd:annotation>
                  <xsd:documentation>Only valid code for this re- quest type is DOCA (Addresses) 
Example: 
DOCA</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" ref="AirlineCode">
                <xsd:annotation>
                  <xsd:documentation>Mandatory for Amadeus,
not applicable for Sabre.

Airline code to dispatch request to.  If code "YY" is used this request will be dispatched to all participating carriers in the itinerary.
Example: 
AA (specific)
YY (dispatch to all)</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element name="AddressType">
                <xsd:annotation>
                  <xsd:documentation>Valid address types as per industry standard are:
R - Residence Address
D - Destination Address 

Note: Only the type "R" can be stored in a profile.  

Any APIS/AddressAdvice of type "D" for a Destination address needs to be provided by the booking tool based on manual user entry </xsd:documentation>
                </xsd:annotation>
                <xsd:simpleType>
                  <xsd:restriction base="xsd:string">
                    <xsd:length value="1" />
                    <xsd:enumeration value="R" />
                    <xsd:enumeration value="D" />
                  </xsd:restriction>
                </xsd:simpleType>
              </xsd:element>
              <xsd:element minOccurs="0" name="CountryCode" type="xsd:string" />
              <xsd:element ref="AddressLine" />
              <xsd:element ref="City" />
              <xsd:element ref="PostalCode" />
              <xsd:element ref="StateProvinceCode" />
              <xsd:element minOccurs="0" ref="InfantLapIndicator" />
            </xsd:sequence>
          </xsd:complexType>
        </xsd:element>
      </xsd:choice>
      <xsd:attributeGroup ref="ActionOptional" />
      <xsd:attributeGroup ref="ProfSource" />
      <xsd:attributeGroup ref="LineRef" />
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="Seat">
    <xsd:annotation>
      <xsd:documentation>Traveler's seat preference</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" ref="SeatArea" />
        <xsd:element minOccurs="0" maxOccurs="2" ref="Characteristic" />
      </xsd:sequence>
      <xsd:attributeGroup ref="ActionOptional" />
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="SeatPreference">
    <xsd:annotation>
      <xsd:documentation>Traveler's seat preference</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" ref="SeatArea" />
        <xsd:element minOccurs="0" maxOccurs="2" ref="Characteristic" />
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="SeatArea">
    <xsd:annotation>
      <xsd:documentation>Seat area identifier.

Values are:
A = Aisle
B = Bulkhead
W = Window
C = Cot
R = Rear-Facing
P = Upper Deck
F = Front of Aircraft
T = Tail of Aircraft

Example: W</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:simpleContent>
        <xsd:extension base="xsd:string" />
      </xsd:simpleContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="Characteristic">
    <xsd:annotation>
      <xsd:documentation>Seat characteristic for generic seat request.  

Values are:
S = Smoking
E = Exit
Example: E</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:simpleContent>
        <xsd:extension base="xsd:string" />
      </xsd:simpleContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="UserDefinedIDGroup">
    <xsd:annotation>
      <xsd:documentation>User defined UDID for back office communication</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element maxOccurs="unbounded" ref="UDID" />
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="ProfileIndex" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>Profile Locator/Index of this company or traveler profile.
Example: ABC12T

ProfileInsertRQ: element is NOT APPLICABLE

ProfileReplaceRQ and ProfileViewRS: element is MANDATORY</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="ProfileName" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>Profile name.  Example: Profile</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="PriorityLines">
    <xsd:annotation>
      <xsd:documentation>Freeflow text lines which can be displayed to service agent to alert of any pending action/situation. These lines will never move into a PNR.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element maxOccurs="unbounded" name="Text">
          <xsd:annotation>
            <xsd:documentation>Free flow text.
Example: 
(1) VIP Status
(2) Always call him by his initials "TJ"</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:simpleContent>
              <xsd:extension base="xsd:string">
                <xsd:attributeGroup ref="ProfSource" />
                <xsd:attributeGroup ref="LineRef" />
              </xsd:extension>
            </xsd:simpleContent>
          </xsd:complexType>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="Notes">
    <xsd:annotation>
      <xsd:documentation>Freeflow text lines These lines will never move into a PNR.
Example: </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element maxOccurs="unbounded" name="Text">
          <xsd:annotation>
            <xsd:documentation>Text only stored in profile.
Never moved to PNR.

Example: Free flow text.  </xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:simpleContent>
              <xsd:extension base="xsd:string">
                <xsd:attributeGroup ref="ProfSource" />
                <xsd:attributeGroup ref="LineRef" />
              </xsd:extension>
            </xsd:simpleContent>
          </xsd:complexType>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="FollowUpItems">
    <xsd:annotation>
      <xsd:documentation>Contains free flow text and an optional date (up to 2 years from current date) to allow date based queries. </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element maxOccurs="unbounded" name="ActionItem">
          <xsd:annotation>
            <xsd:documentation>Any item stored contains a freeflow action text plus an optional date which can be used to extract actions due on a specific date </xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:sequence>
              <xsd:element minOccurs="0" ref="Date">
                <xsd:annotation>
                  <xsd:documentation>Date in ISO 8601 format (YYYY-MM-DD).  
Example: 2009-11-30</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element maxOccurs="unbounded" name="Text" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>Multiple lines of free flow text can be stored here.  Display and updates are recommended using a multi-line textbox (carriage returns to be added/removed as needed - no carriage return to be stored in these elements)
Example:
Annual travel policy review</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
            </xsd:sequence>
            <xsd:attributeGroup ref="ProfSource" />
            <xsd:attributeGroup ref="LineRef" />
          </xsd:complexType>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="DocType">
    <xsd:annotation>
      <xsd:documentation>DocType Values are:
PP = Passport
VI = Visa Waiver
ID = Other Identity Card
DL = Driver License
Example: PP </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleType>
      <xsd:restriction base="xsd:string">
        <xsd:minLength value="2" />
        <xsd:maxLength value="2" />
        <xsd:enumeration value="PP" />
        <xsd:enumeration value="VI" />
        <xsd:enumeration value="ID" />
        <xsd:enumeration value="DL" />
      </xsd:restriction>
    </xsd:simpleType>
  </xsd:element>
  <xsd:element name="ApisDocType">
    <xsd:annotation>
      <xsd:documentation>DocType Values are:
PP = Passport
VI = Visa Waiver
ID = Other Identity Card
DL = Driver License
Example: PP </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleType>
      <xsd:restriction base="xsd:string">
        <xsd:minLength value="2" />
        <xsd:maxLength value="2" />
        <xsd:enumeration value="PP" />
        <xsd:enumeration value="VI" />
        <xsd:enumeration value="ID" />
        <xsd:enumeration value="DL" />
      </xsd:restriction>
    </xsd:simpleType>
  </xsd:element>
  <xsd:element name="TravelerInfo">
    <xsd:annotation>
      <xsd:documentation>Holds personal structured information about traveler (only for traveler profiles)</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" name="PersonalData">
          <xsd:annotation>
            <xsd:documentation>Holds personal structured information about traveler and -if applicable- his relationship to the associated corporation.

Data stored here does not create a PNR element but can be used to apply within the UI for various purposes, such as creating Account elements as well as DOCS|O|S APIS SSR elements, etc.</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:sequence>
              <xsd:element minOccurs="0" name="HomeAirport" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>Home airport.  

Example: TPA</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" name="CountryBirth" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>Traveler's country of birth.
Example: US</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" maxOccurs="unbounded" name="CountryCitizen" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>Traveler's country/countries of citizenship. 
Example: US</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" ref="CountryResidence" />
              <xsd:element minOccurs="0" maxOccurs="unbounded" name="Language" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>Language(s) preferred by traveler using .net language codes (localization codes). 

Sample:  fr-ca</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" ref="DateOfBirth">
                <xsd:annotation>
                  <xsd:documentation>Traveler's date of birth in ISO 8601 format (yyyy-mm-dd). 
Example: 1978-12-25</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" ref="Gender" />
            </xsd:sequence>
          </xsd:complexType>
        </xsd:element>
        <xsd:element minOccurs="0" name="TravelDocs">
          <xsd:annotation>
            <xsd:documentation>Holds data matching the data of traveler's government issued documents.</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:sequence>
              <xsd:element maxOccurs="unbounded" name="Document">
                <xsd:annotation>
                  <xsd:documentation>Data stored here provides structured information about any ID and travel document the traveler uses.  This information in conjunction with personal data is used to create any DOCS|O|S APIS SSR elements, for advance security clearance, etc.</xsd:documentation>
                </xsd:annotation>
                <xsd:complexType>
                  <xsd:sequence>
                    <xsd:element ref="DocType" />
                    <xsd:sequence>
                      <xsd:annotation>
                        <xsd:documentation>At least one of the child elements must be mapped

This (mandatory) 2nd sequence is added to the root to make the use of at least one of these child nodes mandatory</xsd:documentation>
                      </xsd:annotation>
                      <xsd:element minOccurs="0" ref="HolderName">
                        <xsd:annotation>
                          <xsd:documentation>Name as it appears on the document (if different from Traveler Name) - if ommitted the name of this document is assumed to match the name stored as a traveler name</xsd:documentation>
                        </xsd:annotation>
                      </xsd:element>
                      <xsd:element minOccurs="0" name="HolderID" type="xsd:string">
                        <xsd:annotation>
                          <xsd:documentation>Identifies the Traveler as the  primary passport holder in case of a Multi-Person-Passport.  

Values: Omit or "H"</xsd:documentation>
                        </xsd:annotation>
                      </xsd:element>
                      <xsd:element minOccurs="0" name="CountryCode" type="xsd:string">
                        <xsd:annotation>
                          <xsd:documentation>Country code where document was issued.
Example: US</xsd:documentation>
                        </xsd:annotation>
                      </xsd:element>
                      <xsd:element minOccurs="0" name="DocNumber" type="xsd:string">
                        <xsd:annotation>
                          <xsd:documentation>The alphanumerical document number.
Example:
A074-777-451</xsd:documentation>
                        </xsd:annotation>
                      </xsd:element>
                      <xsd:element minOccurs="0" ref="DocIssueDate" />
                      <xsd:element minOccurs="0" ref="DocExpiryDate" />
                    </xsd:sequence>
                    <xsd:element minOccurs="0" name="DocDescription" type="xsd:string">
                      <xsd:annotation>
                        <xsd:documentation>Document type description.
Example:
Permanent Resident Card</xsd:documentation>
                      </xsd:annotation>
                    </xsd:element>
                  </xsd:sequence>
                </xsd:complexType>
              </xsd:element>
            </xsd:sequence>
          </xsd:complexType>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="CompanyInfo">
    <xsd:annotation>
      <xsd:documentation>Holds structured information about the company (only for company profiles)</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" name="CompanyName" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Full company name to be used if no name is given in company addresses
Example:
Company Inc.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" ref="CountryResidence" />
        <xsd:element minOccurs="0" name="AccountNumber" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Account number matching the back office system's account number used for this company (in Sabre this is e.g. the DK-Number)
Example: 1234520</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="IATACompanyNumber" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>An IATA assigned company number patterned as follows:
CCC = Company Code
DDD = Depatment Code
CC = 2-letter Country Code

Example: IBM245US</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="CustomerRefNumber" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Unique customer reference number if neither an "Accountnumber" nor "IATACompanyNumber" 
Example: VDFGFD2312</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="TripPurposeTable">
          <xsd:annotation>
            <xsd:documentation>Table of all TripPurpose codes defined for this Company and used in all Traveler Profiles associated to this company.

This table may be used by the GUI to populate dropdown lists with this dynamic array.</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:sequence>
              <xsd:element maxOccurs="unbounded" name="TripPurpose">
                <xsd:annotation>
                  <xsd:documentation>Individual code set</xsd:documentation>
                </xsd:annotation>
                <xsd:complexType>
                  <xsd:sequence>
                    <xsd:element name="Code" type="xsd:string">
                      <xsd:annotation>
                        <xsd:documentation>Up to 5-character code to identify the purpose of the trip.

Example: 
BIZ = business travel
TRNG = training
EDU = seminar/education
PERS = personal travel</xsd:documentation>
                      </xsd:annotation>
                    </xsd:element>
                    <xsd:element name="Text">
                      <xsd:annotation>
                        <xsd:documentation>Freeflow text to describe the TripPurpose code.

Example: Trip for Training</xsd:documentation>
                      </xsd:annotation>
                      <xsd:complexType>
                        <xsd:simpleContent>
                          <xsd:extension base="xsd:string" />
                        </xsd:simpleContent>
                      </xsd:complexType>
                    </xsd:element>
                  </xsd:sequence>
                </xsd:complexType>
              </xsd:element>
            </xsd:sequence>
          </xsd:complexType>
        </xsd:element>
        <xsd:element minOccurs="0" name="LoyaltyPrograms">
          <xsd:complexType>
            <xsd:sequence>
              <xsd:element maxOccurs="unbounded" name="Program">
                <xsd:annotation>
                  <xsd:documentation>Individual Program data</xsd:documentation>
                </xsd:annotation>
                <xsd:complexType>
                  <xsd:sequence>
                    <xsd:element name="LoyaltyMemberID" type="xsd:string">
                      <xsd:annotation>
                        <xsd:documentation>Membership number </xsd:documentation>
                      </xsd:annotation>
                    </xsd:element>
                    <xsd:element name="Name" type="xsd:string">
                      <xsd:annotation>
                        <xsd:documentation>Individual Program name</xsd:documentation>
                      </xsd:annotation>
                    </xsd:element>
                    <xsd:element ref="AirlineCode">
                      <xsd:annotation>
                        <xsd:documentation>Airline code of the airline offering this Loyaty Program</xsd:documentation>
                      </xsd:annotation>
                    </xsd:element>
                  </xsd:sequence>
                </xsd:complexType>
              </xsd:element>
            </xsd:sequence>
          </xsd:complexType>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="DocIssueDate" type="xsd:date">
    <xsd:annotation>
      <xsd:documentation>Specifies the date when the document was issued. Date is in ISO 8601 format (yyyy-mm-dd).  Example: 2007-12-17</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="DocExpiryDate" type="xsd:date">
    <xsd:annotation>
      <xsd:documentation>Specifies the date when the document will expire. Date is in ISO 8601 format (yyyy-mm-dd).  Example: 2009-12-15</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="CountryResidence" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>2-letter CountryCode where the company is located or where the traveler resides.
Example: GB</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="PTC" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>IATA Passenger Type Code(s) covered under this contract.

Example: ADT</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="BookingClass" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>Required Booking classes or Price classes to book this contracted fare.

Example:  
SUPERSAVER (if price class)
H (if booking class)</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="Cabin">
    <xsd:annotation>
      <xsd:documentation>Specifies the applicable cabin.

Valid values are : 
F = First class
C = Business class
Y = Coach class
W = Coach Premium
Example: F</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleType>
      <xsd:restriction base="xsd:string">
        <xsd:maxLength value="1" />
        <xsd:minLength value="1" />
        <xsd:enumeration value="F" />
        <xsd:enumeration value="C" />
        <xsd:enumeration value="Y" />
        <xsd:enumeration value="W" />
      </xsd:restriction>
    </xsd:simpleType>
  </xsd:element>
  <xsd:element name="DocNumber" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>The alphanumerical document number.
Example:
A074-777-451</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="Remark" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>Freeflow text remark
Example: After hours only</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="HolderName">
    <xsd:annotation>
      <xsd:documentation>Name as it appears on the document (if different from Traveler Name)</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element ref="Surname" />
        <xsd:element ref="GivenName" />
        <xsd:element minOccurs="0" ref="Initial" />
        <xsd:element minOccurs="0" ref="Title" />
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="ArrivalCode" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>Arrival airport or city code.  Example: NYC</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="CarType" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>Car type.  Example: ECAR</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="ChainCode" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>Hotel property chain code.  Example: 101</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="DepartureCode" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>Departure airport or city code.  Example: MIA</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="Description" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>Tax or surcharge description.  Example: US national transportation</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="Designator" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>Tax or surcharge designator.  Example: US</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="DocumentInfo">
    <xsd:annotation>
      <xsd:documentation>Ticket information group</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="CRSID" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Identifies the issuing source system (CRS identification).
Example: 1G</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="IssuingOfficeID" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Issuing Office PCC (PseudoCityCode).
Example: KLTLOB</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="IssuingIATA" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>IATA number of issuing office.

Example: 78561234</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element name="IssueDate" type="xsd:date">
          <xsd:annotation>
            <xsd:documentation>Date in ISO 8601 format (yyyy-mm-dd).  Example: 2001-12-25</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="IssueTime">
          <xsd:annotation>
            <xsd:documentation>Time in ISO 8601 format (hh:mm).  Example: 14:00</xsd:documentation>
          </xsd:annotation>
          <xsd:simpleType>
            <xsd:restriction base="xsd:string" />
          </xsd:simpleType>
        </xsd:element>
        <xsd:element minOccurs="0" name="IssuePlace">
          <xsd:annotation>
            <xsd:documentation>Identifies location where document was issued. Normally a 3-letter airport/city code.</xsd:documentation>
          </xsd:annotation>
          <xsd:simpleType>
            <xsd:restriction base="xsd:string">
              <xsd:length value="3" />
            </xsd:restriction>
          </xsd:simpleType>
        </xsd:element>
        <xsd:element minOccurs="0" name="IssueCountry">
          <xsd:annotation>
            <xsd:documentation>Identifies country where document was issued by a two letter country code.
Example: CA</xsd:documentation>
          </xsd:annotation>
          <xsd:simpleType>
            <xsd:restriction base="xsd:string">
              <xsd:length value="2" />
            </xsd:restriction>
          </xsd:simpleType>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="DocumentNumber">
    <xsd:annotation>
      <xsd:documentation>The 13-digit Document Number including 3-digit airline code (excluding check digit)</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:simpleContent>
        <xsd:extension base="xsd:string">
          <xsd:attribute name="DocType" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>Possible values are:

TKT
MCO
EMD
PTA
MPD</xsd:documentation>
            </xsd:annotation>
          </xsd:attribute>
          <xsd:attribute name="IssueType">
            <xsd:annotation>
              <xsd:documentation>Specifies type of document. Possible values are 
E (electronically issued), 
P (paper issue). 

Example: E</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
              <xsd:restriction base="xsd:string">
                <xsd:length value="1" />
                <xsd:enumeration value="E" />
                <xsd:enumeration value="P" />
              </xsd:restriction>
            </xsd:simpleType>
          </xsd:attribute>
          <xsd:attribute name="ConjDocumentNumber">
            <xsd:annotation>
              <xsd:documentation>LAST 13-digit document number of an conjunctive document set. 
Example: 1761233215673</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
              <xsd:restriction base="xsd:string">
                <xsd:minLength value="1" />
              </xsd:restriction>
            </xsd:simpleType>
          </xsd:attribute>
        </xsd:extension>
      </xsd:simpleContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="DocumentTracking">
    <xsd:annotation>
      <xsd:documentation>Can be used to track unused tickets. Data may be provided by
a/ profile db itself
b/ independent tracking db
c/ query to participating airlines</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element maxOccurs="unbounded" name="Document">
          <xsd:complexType>
            <xsd:sequence>
              <xsd:element name="ValidatingAirline" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>Airline code.  Example: AA</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element ref="DocumentNumber" />
              <xsd:element ref="DocumentInfo" />
              <xsd:element name="ExpiryDate">
                <xsd:complexType>
                  <xsd:sequence>
                    <xsd:element ref="Date" />
                  </xsd:sequence>
                </xsd:complexType>
              </xsd:element>
              <xsd:element name="DocumentValue">
                <xsd:complexType>
                  <xsd:sequence>
                    <xsd:element name="CurrencyCode" type="xsd:string" />
                    <xsd:element name="OriginalValue" type="xsd:string">
                      <xsd:annotation>
                        <xsd:documentation>This is the Original UNUSED Value of the document.  If not partially used this is the Original total document amount;

If partially used, this is the residual(unused) value of the document.</xsd:documentation>
                      </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" name="Deductions">
                      <xsd:annotation>
                        <xsd:documentation>Withdrawals against the remaining Value of the document</xsd:documentation>
                      </xsd:annotation>
                      <xsd:complexType>
                        <xsd:sequence>
                          <xsd:element maxOccurs="unbounded" name="Debit">
                            <xsd:annotation>
                              <xsd:documentation>When this document's remaining value is applied to pay for a new transaction, a "Debit" must be entered either manually or by automated process.</xsd:documentation>
                            </xsd:annotation>
                            <xsd:complexType>
                              <xsd:sequence>
                                <xsd:element name="Type" type="xsd:string">
                                  <xsd:annotation>
                                    <xsd:documentation>Valid Values:

P = Penalty
W = Withdrawal</xsd:documentation>
                                  </xsd:annotation>
                                </xsd:element>
                                <xsd:element name="Amount" type="xsd:string">
                                  <xsd:annotation>
                                    <xsd:documentation>Amount deducted from Remaining Value attribute</xsd:documentation>
                                  </xsd:annotation>
                                </xsd:element>
                                <xsd:element ref="Date">
                                  <xsd:annotation>
                                    <xsd:documentation>Date of transaction.

Date in ISO 8601 format (YYYY-MM-DD).  Example: 2009-11-30</xsd:documentation>
                                  </xsd:annotation>
                                </xsd:element>
                              </xsd:sequence>
                            </xsd:complexType>
                          </xsd:element>
                        </xsd:sequence>
                        <xsd:attribute name="Total" type="xsd:string">
                          <xsd:annotation>
                            <xsd:documentation>Sum of all debit nodes</xsd:documentation>
                          </xsd:annotation>
                        </xsd:attribute>
                      </xsd:complexType>
                    </xsd:element>
                    <xsd:element minOccurs="0" name="RemainingValue" type="xsd:string">
                      <xsd:annotation>
                        <xsd:documentation>Current value available for a withdrawal</xsd:documentation>
                      </xsd:annotation>
                    </xsd:element>
                  </xsd:sequence>
                </xsd:complexType>
              </xsd:element>
            </xsd:sequence>
          </xsd:complexType>
        </xsd:element>
      </xsd:sequence>
      <xsd:attributeGroup ref="DataBaseLink" />
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="FeeAmount">
    <xsd:annotation>
      <xsd:documentation>Service fee break down</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="BaseAmount">
          <xsd:annotation>
            <xsd:documentation>base amount of the service fee</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:simpleContent>
              <xsd:extension base="xsd:integer">
                <xsd:attribute name="Amount" type="xsd:integer" use="required">
                  <xsd:annotation>
                    <xsd:documentation>Base fee amount.  

Example: 6500</xsd:documentation>
                  </xsd:annotation>
                </xsd:attribute>
              </xsd:extension>
            </xsd:simpleContent>
          </xsd:complexType>
        </xsd:element>
        <xsd:element minOccurs="0" ref="Taxes" />
      </xsd:sequence>
      <xsd:attribute name="Total" type="xsd:integer" use="optional">
        <xsd:annotation>
          <xsd:documentation>Total fee amount as specified either per traveler, transaction, reservation.

Total price = base amount + taxes amount.  

Example: 6500 + 650 = 7150</xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="IATA" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>Agency IATA number.  Example: 123456</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="PartnerAirline" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>Airline code. If entered, any miles flown on this airline is credited to this associated frequent flyer program.  This allows to predefine where miles accrued on a partner airline flights are credited.

Sceanrio:  The program "Miles and More" is offered by LH (Lufthansa).  Miles earned on flights marketed by any of LH's Star Alliance and other selected partners can be credited to LH's "Miles and More" program. 

Example: AC</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="RoomTypeCode" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>Room type code.  The code consists of three parameters: room category, number of beds and bed type.

1st Character value to be assigned from this list of possible values:

A-SUPERIOR ROOM
B-MODERATE ROOM
C-STANDARD ROOM
D-MINIMUM ROOM
P-EXECUTIVE FLOOR
S-MODERATE SUITE
T-STANDARD SUITE

2nd Character value (number of beds) to be assigned from this list of possible values: 1 - 9

3rd Character value to be assigned from this list of possible values:

D-DOUBLE
K-KING
P-PULLOUT
Q-QUEEN
S-SINGLE
T-TWIN
W-WATER BED

Example: A1K</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="SelfServiceDevices">
    <xsd:annotation>
      <xsd:documentation>Self servicing devices - allowing traveler to self service their reservations</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" maxOccurs="unbounded" ref="SelfServiceDevice">
          <xsd:annotation>
            <xsd:documentation>Self service device data</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="SelfServiceDevice">
    <xsd:annotation>
      <xsd:documentation>Self service devices used by traveler to directly service a reservation</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="DeviceType" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Device Type

Allowed values are:
iPhone
GooglePhone
Blackberry
OtherHandheld
Other

Example: 
iPhone</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element name="DeviceID" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Mac ID or telephone number associated with the device </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="DevicePIN" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>PIN or Security ID if required by device type or configuration</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="ServiceFees">
    <xsd:annotation>
      <xsd:documentation>Service Fees group.  

This table allows the provision of Service Fees unique to the account (corporation).  The table is returned via the corporate profile and may be hosted in the profile database itself or may be appended from a supplemental database/table.

This service fee table is ideally used by the UI to populate Dropdown menus and/or to automatically create service fee entries (TASF) via PNRCreateRQ.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element maxOccurs="unbounded" name="ServiceFee">
          <xsd:annotation>
            <xsd:documentation>Service Fee Table unique to this corporate account (company profile). </xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:sequence>
              <xsd:element minOccurs="0" name="ServiceFeeCode" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>Any alphanumeric code if used by the account.

Example:
TKT - Ticketing Service Fee 
EXCH - Exchange Fee
</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element name="Text" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>Any descriptive free-flow text

Example:
Check for FOP element</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element ref="FeeAmount" />
              <xsd:element name="FeeType">
                <xsd:annotation>
                  <xsd:documentation>determines how the identified service fee is to be applied.

Possible values are:
PAX = per passenger (default)
TRX = per transaction
RES = per reservation
SEG = per segment
HTL = per hotel reservation
CAR = per car reservation</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
            </xsd:sequence>
          </xsd:complexType>
        </xsd:element>
        <xsd:element minOccurs="0" name="CurrencyCode" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>The currency code applicable to the Service Fees.  

Example: USD</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
      <xsd:attributeGroup ref="DataBaseLink" />
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="StateProvinceCode" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>State or province code.  Example: NY</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="Taxes">
    <xsd:annotation>
      <xsd:documentation>Taxes group</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" maxOccurs="unbounded" ref="Tax" />
      </xsd:sequence>
      <xsd:attribute name="Amount" type="xsd:integer" use="required">
        <xsd:annotation>
          <xsd:documentation>Total taxes amount.  Example: 300</xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="Tax">
    <xsd:annotation>
      <xsd:documentation>Tax break down information group </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" ref="Designator">
          <xsd:annotation>
            <xsd:documentation>Tax designator.  
Example: CA</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" ref="Description">
          <xsd:annotation>
            <xsd:documentation>Tax description.  

Example: 
Canadian VAT Tax</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
      <xsd:attribute name="Amount" type="xsd:integer" use="required">
        <xsd:annotation>
          <xsd:documentation>Individual tax amount.  Example: 300</xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="Title" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>Traveler title.  Example: MISS</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="UDID">
    <xsd:annotation>
      <xsd:documentation>User defined remark</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element ref="UDIDNumber" />
        <xsd:element name="Text" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>UDID text</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
      <xsd:attributeGroup ref="ActionOptional" />
      <xsd:attributeGroup ref="ProfSource" />
      <xsd:attributeGroup ref="LineRef" />
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="UDIDNumber" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>User defined number.  Example: 09</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="ProfileInsertRQ">
    <xsd:annotation>
      <xsd:documentation>The ProfileInsert transaction set inserts a new profile into the profile database.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element ref="ProfileData" />
      </xsd:sequence>
      <xsd:attributeGroup ref="PayloadStdAttributes" />
    </xsd:complexType>
  </xsd:element>
  <xsd:complexType name="BaseFareType">
    <xsd:all>
      <xsd:element minOccurs="0" ref="FiledIn" />
      <xsd:element minOccurs="0" name="Surcharges" type="SurchargesType">
        <xsd:annotation>
          <xsd:documentation>Surcharges group</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:all>
    <xsd:attribute name="Amount" type="xsd:integer" use="required">
      <xsd:annotation>
        <xsd:documentation>Total base fare amount that includes surcharges (if any).  Example: 200000</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>
  <xsd:complexType name="BasicCreditCardType">
    <xsd:sequence>
      <xsd:element name="CCCode">
        <xsd:annotation>
          <xsd:documentation>Credit card vendor code.</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:length value="2" />
            <xsd:pattern value="[A-Z0-9]{2}" />
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="CCNumber">
        <xsd:annotation>
          <xsd:documentation>Credit card number.  Example: 4011236654652341

Can be returned encrypted by GDS/CRS.
Example: XXXXXXXXXXXXXXXX</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:minLength value="1" />
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="CCExpiration">
        <xsd:annotation>
          <xsd:documentation>Credit card expiration group</xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="Month">
              <xsd:annotation>
                <xsd:documentation>Credit card expiration month.  Example: 02

Can be returned encrypted by GDS/CRS.
Example: XX</xsd:documentation>
              </xsd:annotation>
              <xsd:simpleType>
                <xsd:restriction base="xsd:string">
                  <xsd:pattern value="0[1-9]|1[0-2]|[^0-9]*" />
                </xsd:restriction>
              </xsd:simpleType>
            </xsd:element>
            <xsd:element name="Year">
              <xsd:annotation>
                <xsd:documentation>Last two digits of the credit card expiration year.  Example: 06

Can be returned encrypted by GDS/CRS.
Example: XX</xsd:documentation>
              </xsd:annotation>
              <xsd:simpleType>
                <xsd:restriction base="xsd:string">
                  <xsd:pattern value="[0-9][0-9]|[^0-9]*" />
                </xsd:restriction>
              </xsd:simpleType>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="BasicEndorsement">
    <xsd:annotation>
      <xsd:documentation>Represents an endorsement line - automatic or manual. The actual text is displayed in the child element Text. </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" name="Text" type="FreeFormTextField">
        <xsd:annotation>
          <xsd:documentation>Endorsement text.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="CarHotelSupplementalInformationType">
    <xsd:sequence>
      <xsd:element minOccurs="0" ref="BookingSource" />
      <xsd:element minOccurs="0" name="CorporateRateOverride" type="xsd:integer">
        <xsd:annotation>
          <xsd:documentation>Corporate rate override.  Example: 25900</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="CorporateDiscountNumber">
        <xsd:annotation>
          <xsd:documentation>Corporate discount number.  Example: 5643356</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:minLength value="1" />
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element minOccurs="0" name="PaymentGuarantee">
        <xsd:complexType>
          <xsd:choice>
            <xsd:element name="CreditCard">
              <xsd:complexType>
                <xsd:complexContent mixed="false">
                  <xsd:extension base="BasicCreditCardType">
                    <xsd:sequence minOccurs="0">
                      <xsd:element minOccurs="0" name="CardholderFirstName">
                        <xsd:annotation>
                          <xsd:documentation>FirstName on card. </xsd:documentation>
                        </xsd:annotation>
                        <xsd:simpleType>
                          <xsd:restriction base="xsd:string">
                            <xsd:minLength value="1" />
                          </xsd:restriction>
                        </xsd:simpleType>
                      </xsd:element>
                      <xsd:element name="CardholderLastName">
                        <xsd:annotation>
                          <xsd:documentation>Name on card. </xsd:documentation>
                        </xsd:annotation>
                        <xsd:simpleType>
                          <xsd:restriction base="xsd:string">
                            <xsd:minLength value="1" />
                          </xsd:restriction>
                        </xsd:simpleType>
                      </xsd:element>
                    </xsd:sequence>
                  </xsd:extension>
                </xsd:complexContent>
              </xsd:complexType>
            </xsd:element>
            <xsd:element name="Other">
              <xsd:simpleType>
                <xsd:restriction base="xsd:string">
                  <xsd:minLength value="1" />
                </xsd:restriction>
              </xsd:simpleType>
            </xsd:element>
          </xsd:choice>
          <xsd:attribute default="G" name="Type" use="optional">
            <xsd:annotation>
              <xsd:documentation>Type of payment.  Values are:
G = Guarantee
D = Deposit
Example: G</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
              <xsd:restriction base="xsd:string">
                <xsd:enumeration value="G">
                  <xsd:annotation>
                    <xsd:documentation>Guarantee</xsd:documentation>
                  </xsd:annotation>
                </xsd:enumeration>
                <xsd:enumeration value="D">
                  <xsd:annotation>
                    <xsd:documentation>Deposit</xsd:documentation>
                  </xsd:annotation>
                </xsd:enumeration>
              </xsd:restriction>
            </xsd:simpleType>
          </xsd:attribute>
        </xsd:complexType>
      </xsd:element>
      <xsd:element minOccurs="0" name="FrequentGuest">
        <xsd:annotation>
          <xsd:documentation>Frequent Guest Group</xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element minOccurs="0" name="FGCode">
              <xsd:annotation>
                <xsd:documentation>Frequent guest code.  Example: MC</xsd:documentation>
              </xsd:annotation>
              <xsd:simpleType>
                <xsd:restriction base="xsd:string">
                  <xsd:length value="2" />
                </xsd:restriction>
              </xsd:simpleType>
            </xsd:element>
            <xsd:element name="FGNumber">
              <xsd:annotation>
                <xsd:documentation>Frequent guest number.  Example: 123456</xsd:documentation>
              </xsd:annotation>
              <xsd:simpleType>
                <xsd:restriction base="xsd:string">
                  <xsd:minLength value="1" />
                </xsd:restriction>
              </xsd:simpleType>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element minOccurs="0" name="FrequentFlyer">
        <xsd:annotation>
          <xsd:documentation>Frequent Flyer Group</xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element minOccurs="0" name="FFCode">
              <xsd:annotation>
                <xsd:documentation>Frequent flyer code.  Example: DL</xsd:documentation>
              </xsd:annotation>
              <xsd:simpleType>
                <xsd:restriction base="xsd:string">
                  <xsd:length value="2" />
                </xsd:restriction>
              </xsd:simpleType>
            </xsd:element>
            <xsd:element name="FFNumber">
              <xsd:annotation>
                <xsd:documentation>Frequent flyer number.  Example: 0956301007</xsd:documentation>
              </xsd:annotation>
              <xsd:simpleType>
                <xsd:restriction base="xsd:string">
                  <xsd:minLength value="1" />
                </xsd:restriction>
              </xsd:simpleType>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element minOccurs="0" name="AdditionalInformation">
        <xsd:annotation>
          <xsd:documentation>Optional additional information.  Example: Traveler on wheelchair</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:minLength value="1" />
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="CarLocation">
    <xsd:annotation>
      <xsd:documentation>Type definition for particular car location (for particular car vendor).</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="CityCode">
        <xsd:annotation>
          <xsd:documentation>IATA 3-letter city/airport code for location. In case of non-airport location Category and Number need to be present. Example: NYC</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:length value="3" />
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:sequence minOccurs="0">
        <xsd:element name="Category">
          <xsd:annotation>
            <xsd:documentation>Location category:
T = Airport terminal
O = Off-airport
C = City location 
P = Port 
X = Rail
N = North suburban
E = East suburban
S = South suburban
W = West suburban
A = All suburban locations 
R = Resort location
Example: C</xsd:documentation>
          </xsd:annotation>
          <xsd:simpleType>
            <xsd:restriction base="xsd:string">
              <xsd:length value="1" />
            </xsd:restriction>
          </xsd:simpleType>
        </xsd:element>
        <xsd:element name="Number" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Location number used to identify specific rental location within a location category.  Example: 001</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="CertificateType">
    <xsd:annotation>
      <xsd:documentation source="DESCRIPTION" xml:lang="en">Electronic Certificate information.

=notes=
1. Supports non-revenue and flightpass certificates.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="Number" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation source="DESCRIPTION" xml:lang="en">Unique certificate number.
Example: 12345678</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="IssuingAirline">
        <xsd:annotation>
          <xsd:documentation source="DESCRIPTION" xml:lang="en">Airline designator code.
Example: UA</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:minLength value="2" />
            <xsd:maxLength value="3" />
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element minOccurs="0" name="ProgramName">
        <xsd:annotation>
          <xsd:documentation source="DESCRIPTION" xml:lang="en">Associated program name.
Example: PASSPRO</xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
          <xsd:simpleContent>
            <xsd:extension base="xsd:string">
              <xsd:attribute name="Type" type="xsd:string" use="optional">
                <xsd:annotation>
                  <xsd:documentation source="DESCRIPTION" xml:lang="en">Program type.
Examples:
BUSINESS
LEISURE</xsd:documentation>
                </xsd:annotation>
              </xsd:attribute>
            </xsd:extension>
          </xsd:simpleContent>
        </xsd:complexType>
      </xsd:element>
      <xsd:element minOccurs="0" name="CertificateName" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>Associated certificate name. This element is returned by the program and onlly valid as part of a response message.                             Example: Flex 30 credits</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="CreditsUsed" type="xsd:integer">
        <xsd:annotation>
          <xsd:documentation>Credits consumed as part of the given certificate. This element is returned by the program and only valid as part of a response message. </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="Holder">
        <xsd:annotation>
          <xsd:documentation source="DESCRIPTION" xml:lang="en">Certificate holder or owner information.</xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
          <xsd:simpleContent>
            <xsd:extension base="xsd:string">
              <xsd:attribute name="OwnerID" type="xsd:string" use="optional">
                <xsd:annotation>
                  <xsd:documentation source="DESCRIPTION" xml:lang="en">Owner ID.
Example: AAA2

=notes=
1. This will be a PCC (Pseudo City Code) if an agency has ownership.</xsd:documentation>
                </xsd:annotation>
              </xsd:attribute>
              <xsd:attribute name="IATA" use="optional">
                <xsd:annotation>
                  <xsd:documentation source="DESCRIPTION" xml:lang="en">IATA number if agency has ownership.
Example: 98417900</xsd:documentation>
                </xsd:annotation>
                <xsd:simpleType>
                  <xsd:restriction base="xsd:string">
                    <xsd:pattern value="[A-Z0-9]{7,8}" />
                  </xsd:restriction>
                </xsd:simpleType>
              </xsd:attribute>
              <xsd:attribute name="CorpID" type="xsd:string" use="optional">
                <xsd:annotation>
                  <xsd:documentation source="DESCRIPTION" xml:lang="en">Account number if agency has ownership.
Example: 23456</xsd:documentation>
                </xsd:annotation>
              </xsd:attribute>
              <xsd:attribute name="FQTVNumber" type="xsd:string" use="optional">
                <xsd:annotation>
                  <xsd:documentation source="DESCRIPTION" xml:lang="en">Traveler frequent flyer number if personal ownership.
Example: 0956301007</xsd:documentation>
                </xsd:annotation>
              </xsd:attribute>
            </xsd:extension>
          </xsd:simpleContent>
        </xsd:complexType>
      </xsd:element>
      <xsd:element minOccurs="0" maxOccurs="unbounded" ref="SegmentIDRef" />
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="Children">
    <xsd:annotation>
      <xsd:documentation>Group of child elements defining age and bedding type (optional) for each child. Used in hotel requests.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" name="Child">
        <xsd:annotation>
          <xsd:documentation>Child elements - one per requested child.</xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="Age">
              <xsd:annotation>
                <xsd:documentation>Age of child in years (allowed values are 0-17).</xsd:documentation>
              </xsd:annotation>
              <xsd:simpleType>
                <xsd:restriction base="xsd:int">
                  <xsd:minInclusive value="0" />
                  <xsd:maxInclusive value="17" />
                </xsd:restriction>
              </xsd:simpleType>
            </xsd:element>
            <xsd:element minOccurs="0" name="ExtraBed">
              <xsd:annotation>
                <xsd:documentation>Defines if child will need its own bed ('Y') or sleep in parents bed ('N'). If omitted no extra bed is required.</xsd:documentation>
              </xsd:annotation>
              <xsd:simpleType>
                <xsd:restriction base="xsd:string">
                  <xsd:enumeration value="Y" />
                  <xsd:enumeration value="N" />
                </xsd:restriction>
              </xsd:simpleType>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="CommissionType">
    <xsd:simpleContent>
      <xsd:extension base="xsd:decimal">
        <xsd:attribute name="Type" use="required">
          <xsd:annotation>
            <xsd:documentation>Commission type.  Values are: P = Percent, A = Amount  Example: A</xsd:documentation>
          </xsd:annotation>
          <xsd:simpleType>
            <xsd:restriction base="xsd:string">
              <xsd:minLength value="1" />
              <xsd:maxLength value="1" />
              <xsd:enumeration value="P" />
              <xsd:enumeration value="A" />
            </xsd:restriction>
          </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="CommissionSource" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Indicates where or how the commission was entered. Valid Values:                       M = Manual                        P = From Pricing provider     X = Calculated using FLX-M</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:simpleType name="COSType">
    <xsd:annotation>
      <xsd:documentation> Basic definition of air  ClassOfService. Alpha-coded. Usually single char.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="1" />
      <xsd:minLength value="1" />
      <xsd:pattern value="[A-Z]" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="CountryCodeAlpha2">
    <xsd:annotation>
      <xsd:documentation>2 character country code as defined in ISO3166, restricted to upper case.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:pattern value="[A-Z]{2}" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="CurrencyCodeType">
    <xsd:annotation>
      <xsd:documentation>Defines currency code (ISO 3-letter code) and optional number of decimals. Not that for request messages the NumberOfDecimals has no effect and is not needed.</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:string">
        <xsd:attribute name="NumberOfDecimals" type="xsd:integer" use="optional">
          <xsd:annotation>
            <xsd:documentation>Decimal position in fare amount.  Example: 2</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="Rate" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>The daily exchange rate defined through sources such as BSR, BBR, ICH between two currencies  applied in the conversion</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="ROE" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Conversion rate applied to the conversion of a filed fare to NUC as published by IATA. Applicable to FiledInCurrency only.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="Table" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Table reference for the exchange rate.
Sample: BSR</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:simpleType name="Date">
    <xsd:annotation>
      <xsd:documentation>Date in ISO 8601 format (yyyy-mm-dd). Example: 2001-12-25</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:date" />
  </xsd:simpleType>
  <xsd:complexType name="DerivationType">
    <xsd:annotation>
      <xsd:documentation source="DESCRIPTION" xml:lang="en">Price derivation information definition.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice>
      <xsd:element minOccurs="0" name="Account" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation source="DESCRIPTION" xml:lang="en">Corporate ID or account number. 
Example: 675124</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="Contract" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation source="DESCRIPTION" xml:lang="en">Contract ID.
Example: 675124</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" maxOccurs="unbounded" name="Certificate">
        <xsd:annotation>
          <xsd:documentation>Certificate Data.</xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="Number" type="xsd:string">
              <xsd:annotation>
                <xsd:documentation source="DESCRIPTION" xml:lang="en">Unique Certificate Number.
Example: 12345678</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
            <xsd:element minOccurs="0" name="ProgramName">
              <xsd:annotation>
                <xsd:documentation source="DESCRIPTION" xml:lang="en">Associated program name.
Example: PASSPRO</xsd:documentation>
              </xsd:annotation>
              <xsd:complexType>
                <xsd:simpleContent>
                  <xsd:extension base="xsd:string">
                    <xsd:attribute name="Type" type="xsd:string" use="optional">
                      <xsd:annotation>
                        <xsd:documentation source="DESCRIPTION" xml:lang="en">Program type.
Examples:
BUSINESS
LEISURE</xsd:documentation>
                      </xsd:annotation>
                    </xsd:attribute>
                  </xsd:extension>
                </xsd:simpleContent>
              </xsd:complexType>
            </xsd:element>
            <xsd:element minOccurs="0" name="Holder">
              <xsd:annotation>
                <xsd:documentation source="DESCRIPTION" xml:lang="en">Certificate holder or owner information.</xsd:documentation>
              </xsd:annotation>
              <xsd:complexType>
                <xsd:attribute name="OwnerID" type="xsd:string" use="optional">
                  <xsd:annotation>
                    <xsd:documentation source="DESCRIPTION" xml:lang="en">Owner ID.
Example: AAA2

=notes=
1. This will be a PCC (Pseudo City Code) if an agency has ownership.</xsd:documentation>
                  </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="IATA" use="optional">
                  <xsd:annotation>
                    <xsd:documentation source="DESCRIPTION" xml:lang="en">IATA number if agency has ownership.
Example: 98417900</xsd:documentation>
                  </xsd:annotation>
                  <xsd:simpleType>
                    <xsd:restriction base="xsd:string">
                      <xsd:pattern value="[A-Z0-9]{7,8}" />
                    </xsd:restriction>
                  </xsd:simpleType>
                </xsd:attribute>
                <xsd:attribute name="CorpID" type="xsd:string" use="optional">
                  <xsd:annotation>
                    <xsd:documentation source="DESCRIPTION" xml:lang="en">Account number if agency has ownership.
Example: 23456</xsd:documentation>
                  </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="FQTVNumber" type="xsd:string" use="optional">
                  <xsd:annotation>
                    <xsd:documentation source="DESCRIPTION" xml:lang="en">Traveler frequent flyer number if personal ownership.
Example: 0956301007</xsd:documentation>
                  </xsd:annotation>
                </xsd:attribute>
              </xsd:complexType>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element minOccurs="0" name="PromoCode" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation source="DESCRIPTION" xml:lang="en">Promotion code ID or number.
Example: PROMO123</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="Discount">
        <xsd:annotation>
          <xsd:documentation source="DESCRIPTION" xml:lang="en">Discount ID.</xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element minOccurs="0" name="DiscountID" type="xsd:string">
              <xsd:annotation>
                <xsd:documentation source="DESCRIPTION" xml:lang="en">Discount ID.
Example: DSC12345</xsd:documentation>
                <xsd:documentation source="GUIDELINES" xml:lang="en">=notes=
1. This may be used for ZapOff.</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
            <xsd:element minOccurs="0" name="TicketDesignator" type="xsd:string">
              <xsd:annotation>
                <xsd:documentation source="DESCRIPTION" xml:lang="en">Discount pricing ticket designator.
Examples:
DISC
SPCL
AD75</xsd:documentation>
                <xsd:documentation source="GUIDELINES" xml:lang="en">=notes=
1. Any ticket designator used for fare selection is to be mapped to the root of the PricingInfo/FareSelection node.</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element minOccurs="0" name="TourCode">
        <xsd:annotation>
          <xsd:documentation source="DESCRIPTION" xml:lang="en">Tour code.
Example: GOGO123</xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
          <xsd:simpleContent>
            <xsd:extension base="xsd:string" />
          </xsd:simpleContent>
        </xsd:complexType>
      </xsd:element>
    </xsd:choice>
  </xsd:complexType>
  <xsd:simpleType name="FlightNumberType">
    <xsd:annotation>
      <xsd:documentation>A flight number. Flight numbers are integer values within the range of [0-9999]. Example: 1234</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:integer">
      <xsd:minInclusive value="0" />
      <xsd:maxInclusive value="9999" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="FlightNumberWithSuffixType">
    <xsd:annotation>
      <xsd:documentation>A flight number with optional suffix letter. Flight numbers are integer values within the range of [0,9999]. 

Example: 1234</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="FlightNumberType">
        <xsd:attribute name="Suffix" use="optional">
          <xsd:annotation>
            <xsd:documentation>Flight number alpha qualifier.  
Values are:
A
B
C
D

Example: A</xsd:documentation>
          </xsd:annotation>
          <xsd:simpleType>
            <xsd:restriction base="xsd:string">
              <xsd:enumeration value="A" />
              <xsd:enumeration value="B" />
              <xsd:enumeration value="C" />
              <xsd:enumeration value="D" />
            </xsd:restriction>
          </xsd:simpleType>
        </xsd:attribute>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:simpleType name="FreeFormTextField">
    <xsd:annotation>
      <xsd:documentation>any type of freeform text - basic type</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="Lang">
    <xsd:annotation>
      <xsd:documentation>ISO language code. A two letter code as defined by ISO-639-1. This code specifies the requested language for text content. Default value is 'en'.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:length value="2" />
      <xsd:pattern value="[a-z][a-z]" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="MarketingDataType">
    <xsd:annotation>
      <xsd:documentation source="DESCRIPTION" xml:lang="en">Marketing Messages and Multimedia Links.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" name="MediaContent">
        <xsd:annotation>
          <xsd:documentation source="DESCRIPTION" xml:lang="en">Media content information.</xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element minOccurs="0" name="Images">
              <xsd:annotation>
                <xsd:documentation source="DESCRIPTION" xml:lang="en">Image information.</xsd:documentation>
              </xsd:annotation>
              <xsd:complexType>
                <xsd:sequence>
                  <xsd:element maxOccurs="unbounded" name="Image">
                    <xsd:annotation>
                      <xsd:documentation source="DESCRIPTION" xml:lang="en">Image detail.</xsd:documentation>
                    </xsd:annotation>
                    <xsd:complexType>
                      <xsd:sequence>
                        <xsd:element name="Height">
                          <xsd:annotation>
                            <xsd:documentation>Height of media content in specified units.</xsd:documentation>
                          </xsd:annotation>
                          <xsd:complexType>
                            <xsd:simpleContent>
                              <xsd:extension base="xsd:int">
                                <xsd:attribute name="Unit" type="xsd:string" use="required">
                                  <xsd:annotation>
                                    <xsd:documentation source="DESCRIPTION" xml:lang="en">Dimension unit.
Examples:
MM (MILLIMETER)
PX (PIXEL)</xsd:documentation>
                                    <xsd:documentation source="ENCODING" xml:lang="en">Select a value from the enumerated list or enter a string value.
=enumerated values=
MM = MILLIMETER
PX = PIXEL</xsd:documentation>
                                  </xsd:annotation>
                                </xsd:attribute>
                              </xsd:extension>
                            </xsd:simpleContent>
                          </xsd:complexType>
                        </xsd:element>
                        <xsd:element name="Width">
                          <xsd:annotation>
                            <xsd:documentation>Width of media content in specified units.</xsd:documentation>
                          </xsd:annotation>
                          <xsd:complexType>
                            <xsd:simpleContent>
                              <xsd:extension base="xsd:int">
                                <xsd:attribute name="Unit" type="xsd:string" use="required">
                                  <xsd:annotation>
                                    <xsd:documentation source="DESCRIPTION" xml:lang="en">Dimension unit.
Examples:
MM (MILLIMETER)
PX (PIXEL)</xsd:documentation>
                                    <xsd:documentation source="ENCODING" xml:lang="en">Select a value from the enumerated list or enter a string value.
=enumerated values=
MM = MILLIMETER
PX = PIXEL</xsd:documentation>
                                  </xsd:annotation>
                                </xsd:attribute>
                              </xsd:extension>
                            </xsd:simpleContent>
                          </xsd:complexType>
                        </xsd:element>
                        <xsd:element minOccurs="0" name="ImageData" type="xsd:string">
                          <xsd:annotation>
                            <xsd:documentation source="DESCRIPTION" xml:lang="en">Encoded image value, typically in base64.</xsd:documentation>
                          </xsd:annotation>
                        </xsd:element>
                        <xsd:element minOccurs="0" name="ImageText">
                          <xsd:annotation>
                            <xsd:documentation source="DESCRIPTION" xml:lang="en">Media associated text.</xsd:documentation>
                          </xsd:annotation>
                          <xsd:complexType>
                            <xsd:sequence>
                              <xsd:element maxOccurs="unbounded" name="Text">
                                <xsd:simpleType>
                                  <xsd:restriction base="xsd:string">
                                    <xsd:minLength value="1" />
                                  </xsd:restriction>
                                </xsd:simpleType>
                              </xsd:element>
                            </xsd:sequence>
                          </xsd:complexType>
                        </xsd:element>
                      </xsd:sequence>
                      <xsd:attribute name="ImageID" type="xsd:string" use="optional">
                        <xsd:annotation>
                          <xsd:documentation source="DESCRIPTION" xml:lang="en">Unique media ID.
Examples:
IMG713
SFO_LOUNGE</xsd:documentation>
                          <xsd:documentation source="GUIDELINES" xml:lang="en">=notes=
1. Provides an unique ID for any available images returned in any responsemessages.
2. FileRetrieveRQ/ FileListRS will utilize these ID's to retrieve the full image(s) as needed.</xsd:documentation>
                        </xsd:annotation>
                      </xsd:attribute>
                      <xsd:attribute name="Caption" type="xsd:string" use="optional">
                        <xsd:annotation>
                          <xsd:documentation source="DESCRIPTION" xml:lang="en">Media caption.
Example: PREMIUM SEAT</xsd:documentation>
                        </xsd:annotation>
                      </xsd:attribute>
                      <xsd:attribute name="Symbology" type="xsd:string" use="optional">
                        <xsd:annotation>
                          <xsd:documentation source="DESCRIPTION" xml:lang="en">Barcode symbology applied.
Example: PDF417</xsd:documentation>
                        </xsd:annotation>
                      </xsd:attribute>
                      <xsd:attribute name="Encoding" type="xsd:string" use="optional">
                        <xsd:annotation>
                          <xsd:documentation source="DESCRIPTION" xml:lang="en">Media encoding method.
Example: BASE64</xsd:documentation>
                        </xsd:annotation>
                      </xsd:attribute>
                      <xsd:attribute name="Format" type="xsd:string" use="optional">
                        <xsd:annotation>
                          <xsd:documentation source="DESCRIPTION" xml:lang="en">Media format.
Example: JPEG</xsd:documentation>
                        </xsd:annotation>
                      </xsd:attribute>
                    </xsd:complexType>
                  </xsd:element>
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
            <xsd:element minOccurs="0" name="MediaLinks">
              <xsd:annotation>
                <xsd:documentation source="DESCRIPTION" xml:lang="en">Link information.</xsd:documentation>
              </xsd:annotation>
              <xsd:complexType>
                <xsd:sequence>
                  <xsd:element maxOccurs="unbounded" name="Link">
                    <xsd:annotation>
                      <xsd:documentation source="DESCRIPTION" xml:lang="en">Link detail.</xsd:documentation>
                    </xsd:annotation>
                    <xsd:complexType>
                      <xsd:attribute name="LinkID" type="xsd:string" use="optional">
                        <xsd:annotation>
                          <xsd:documentation source="DESCRIPTION" xml:lang="en">Unique link ID.
Example: SFOLOUNGE</xsd:documentation>
                        </xsd:annotation>
                      </xsd:attribute>
                      <xsd:attribute name="Caption" type="xsd:string" use="optional">
                        <xsd:annotation>
                          <xsd:documentation source="DESCRIPTION" xml:lang="en">Caption or label.
Example: PREMIUM SEAT</xsd:documentation>
                        </xsd:annotation>
                      </xsd:attribute>
                      <xsd:attribute name="Type" type="xsd:string" use="optional">
                        <xsd:annotation>
                          <xsd:documentation source="DESCRIPTION" xml:lang="en">Media link type.
Example:
DET (Details)
DIS (Disclosure)
VID (Video)
CAM (Webcam)
PGE (Webpage)</xsd:documentation>
                        </xsd:annotation>
                      </xsd:attribute>
                    </xsd:complexType>
                  </xsd:element>
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element minOccurs="0" maxOccurs="unbounded" name="Message">
        <xsd:annotation>
          <xsd:documentation source="DESCRIPTION" xml:lang="en">Marketing message.
Example: ONE TRAVELER MAY BE ELIGIBLE FOR A FREE SEAT</xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="unbounded" name="Text">
              <xsd:simpleType>
                <xsd:restriction base="xsd:string">
                  <xsd:minLength value="1" />
                </xsd:restriction>
              </xsd:simpleType>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:sequence>
    <xsd:attributeGroup ref="sourceOptional" />
  </xsd:complexType>
  <xsd:complexType name="Media">
    <xsd:annotation>
      <xsd:documentation>Holds reference to multi media content such as pictures, videos, etc. for this hotel property.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent mixed="false">
      <xsd:extension base="MediaType">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="Preview" type="MediaType">
            <xsd:annotation>
              <xsd:documentation>Preview of the referenced media content (e.g. thumbnail of the picture).</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="Description" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>Media content description (e.g. exterior view).</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:simpleType name="MediaSizeUnitType">
    <xsd:annotation>
      <xsd:documentation>Unit used to specify dimensions of media content.

Example:
mm (millimeter) 
px (pixel)</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="px" />
      <xsd:enumeration value="mm" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="MediaType">
    <xsd:sequence>
      <xsd:element name="Url" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>Hyperlink defining the location of the referenced media (e.g. location of a JPG file).</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:sequence minOccurs="0">
        <xsd:element name="Width">
          <xsd:annotation>
            <xsd:documentation>Width of media content in specified units.</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:simpleContent>
              <xsd:extension base="xsd:int">
                <xsd:attribute name="Unit" type="MediaSizeUnitType" use="required">
                  <xsd:annotation>
                    <xsd:documentation>Unit used to specify dimensions of media content.

Example:
mm (millimeter) 
px (pixel)</xsd:documentation>
                  </xsd:annotation>
                </xsd:attribute>
              </xsd:extension>
            </xsd:simpleContent>
          </xsd:complexType>
        </xsd:element>
        <xsd:element name="Height">
          <xsd:annotation>
            <xsd:documentation>Height of media content in specified units.</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:simpleContent>
              <xsd:extension base="xsd:int">
                <xsd:attribute name="Unit" type="MediaSizeUnitType" use="required">
                  <xsd:annotation>
                    <xsd:documentation>Unit used to specify dimensions of media content.

Example:
mm (millimeter) 
px (pixel)</xsd:documentation>
                  </xsd:annotation>
                </xsd:attribute>
              </xsd:extension>
            </xsd:simpleContent>
          </xsd:complexType>
        </xsd:element>
      </xsd:sequence>
      <xsd:element name="Type" type="MediaTypeType">
        <xsd:annotation>
          <xsd:documentation>Type of media content. 

Example:
image
webcam
video 
360 (panorama view)</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:simpleType name="MediaTypeType">
    <xsd:annotation>
      <xsd:documentation>Type of media content. 

Example:
image
webcam
video 
360 (panorama view)</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="image" />
      <xsd:enumeration value="webcam" />
      <xsd:enumeration value="360" />
      <xsd:enumeration value="video" />
      <xsd:enumeration value="logo" />
      <xsd:enumeration value="map" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="MessageStructure">
    <xsd:complexContent mixed="false">
      <xsd:extension base="xsd:anyType" />
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:simpleType name="PNRRecordLocator">
    <xsd:annotation>
      <xsd:documentation>Defines PNR record locator format in accordance with industry standard. [A-Z0-9]{6}.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:length value="6" />
      <xsd:pattern value="[A-Z0-9]{6}" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="positiveDecimal">
    <xsd:annotation>
      <xsd:documentation>A restriction of the built-in decimal type to positive values (excluding 0). Defined as a type of its own, because this type of restriction cannot be stated direcetly for a derived type, which is at the same time extended by attributes.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:decimal">
      <xsd:minExclusive value="0" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="positiveIntegerOrEmpty">
    <xsd:annotation>
      <xsd:documentation>Either a positive integer value (without leading zeros) or the empty string.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:pattern value="[1-9][0-9]*" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="RequestForCarLocation">
    <xsd:annotation>
      <xsd:documentation>Type definition for one or more (if only citycode and category is specified) car locations for one or more car vendors.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="CityCode">
        <xsd:annotation>
          <xsd:documentation>IATA 3-letter city/airport code for location. In case of non-airport location Category need to be present (Number for particular locaction). Example: NYC</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:length value="3" />
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:sequence minOccurs="0">
        <xsd:element name="Category">
          <xsd:annotation>
            <xsd:documentation>Location category:
T = Airport terminal
O = Off-airport
C = City location 
P = Port 
X = Rail
N = North suburban
E = East suburban
S = South suburban
W = West suburban 
D = default location for the city.
R = Resort location
Example: C</xsd:documentation>
          </xsd:annotation>
          <xsd:simpleType>
            <xsd:restriction base="xsd:string">
              <xsd:length value="1" />
            </xsd:restriction>
          </xsd:simpleType>
        </xsd:element>
        <xsd:element minOccurs="0" name="Number" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Location number used to identify specific rental location within a location category.  Example: 001</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="SegmentIDRef">
    <xsd:annotation>
      <xsd:documentation>ID reference used to associate this item to a segment. No comma separated lists and no ranges supported. Example: F1</xsd:documentation>
    </xsd:annotation>
    <xsd:attributeGroup ref="OFFPoint" />
    <xsd:attributeGroup ref="ONPoint" />
    <xsd:attributeGroup ref="RefType" />
  </xsd:complexType>
  <xsd:complexType name="SourceStdAttributes">
    <xsd:annotation>
      <xsd:documentation>Source Aggregation Information. </xsd:documentation>
    </xsd:annotation>
    <xsd:attributeGroup ref="sourceOptional" />
    <xsd:attribute name="Version" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation source="DESCRIPTION" xml:lang="en">Message version number.
Example: 1.0</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="TimeStamp" type="xsd:dateTime" use="optional">
      <xsd:annotation>
        <xsd:documentation source="DESCRIPTION" xml:lang="en">Message creation timestamp.
Example: 2012-01-13T13:59:38Z</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="TransactionIdentifier" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation source="DESCRIPTION" xml:lang="en">Unique relationship identifier for request and response messages that are part of an on-going transaction.
Example: TRN12345</xsd:documentation>
        <xsd:documentation source="GUIDELINES" xml:lang="en">=notes=
1. This is a unique identifier to relate all messages that are part of an on-going transaction.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>
  <xsd:simpleType name="stringLength4">
    <xsd:annotation>
      <xsd:documentation>4 character string.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:length value="4" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="SurchargesType">
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" name="Surcharge" type="SurchargeType">
        <xsd:annotation>
          <xsd:documentation>Surcharges break down information.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
    <xsd:attribute name="Amount" type="xsd:integer" use="required">
      <xsd:annotation>
        <xsd:documentation>Total surcharges amount.  Example: 2000</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>
  <xsd:complexType name="SurchargeType">
    <xsd:complexContent mixed="false">
      <xsd:extension base="SurchargeTypeBasic">
        <xsd:attribute name="Segment" type="xsd:integer">
          <xsd:annotation>
            <xsd:documentation>Segment number to which the surcharge applies.  Example: 1</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attributeGroup ref="ONPoint" />
        <xsd:attributeGroup ref="OFFPoint" />
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="SurchargeTypeBasic">
    <xsd:sequence>
      <xsd:element name="Designator">
        <xsd:annotation>
          <xsd:documentation>Surcharge designator.</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:minLength value="1" />
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element minOccurs="0" name="Description">
        <xsd:annotation>
          <xsd:documentation>Surcharge descriptions as free form text.</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:minLength value="1" />
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element minOccurs="0" ref="FiledCurrencyCode">
        <xsd:annotation>
          <xsd:documentation>Currency for this FareComponent may not be the same as POS Currency Code.  Example: HKD</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" ref="FiledAmount">
        <xsd:annotation>
          <xsd:documentation>Fare Amount as filed in the currency defined in FiledCurrencyCode</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
    <xsd:attribute name="Amount" type="xsd:integer" use="required">
      <xsd:annotation>
        <xsd:documentation>Individual surcharge amount.  Example: 270</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>
  <xsd:simpleType name="Time">
    <xsd:annotation>
      <xsd:documentation>Time in ISO 8601 twenty-four hour clock format. Example: 14:00</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:length value="5" />
      <xsd:pattern value="([0-1][0-9]|2[0-3]):[0-5][0-9]" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="TimeDurationHoursMinutes">
    <xsd:annotation>
      <xsd:documentation>A duration of time specified in hours and minutes (HH:MM) with a maximum value of 99:59.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:pattern value="[0-9][0-9]:[0-5][0-9]" />
    </xsd:restriction>
  </xsd:simpleType>
</xsd:schema>