<?xml version="1.0" encoding="utf-8"?>
<xsd:schema xmlns="http://farelogix.com/flx/PNRCreateRQ" attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://farelogix.com/flx/PNRCreateRQ" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <xsd:attributeGroup name="BalanceAmount">
    <xsd:attribute name="BalanceAmount" type="xsd:string">
      <xsd:annotation>
        <xsd:documentation> Amount (without decimal) available on card. Example: 100 (one hundred)</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:attributeGroup>
  <xsd:attributeGroup name="DistanceUnit">
    <xsd:attribute name="DistanceUnit">
      <xsd:annotation>
        <xsd:documentation>Unit of distance.
Values:
M = Miles
K = Kilometers
Example: K</xsd:documentation>
      </xsd:annotation>
      <xsd:simpleType>
        <xsd:restriction base="xsd:string">
          <xsd:minLength value="1" />
          <xsd:maxLength value="1" />
          <xsd:enumeration value="M" />
          <xsd:enumeration value="K" />
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:attribute>
  </xsd:attributeGroup>
  <xsd:attributeGroup name="OFFPoint">
    <xsd:attribute name="OFFPoint" type="xsd:string">
      <xsd:annotation>
        <xsd:documentation>Identifies the OFF point of each slice of a flight (direct flight w/stop(s) and/or COG flights) using 3-character airport codes.
Example:  LHR</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:attributeGroup>
  <xsd:attributeGroup name="ONPoint">
    <xsd:attribute name="ONPoint" type="xsd:string">
      <xsd:annotation>
        <xsd:documentation>Identifies the ON point of each slice of a flight (direct flight w/stop(s) and/or COG flights) using 3-character airport codes.
Example:  ORD</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:attributeGroup>
  <xsd:attributeGroup name="Radius">
    <xsd:attribute name="Radius">
      <xsd:annotation>
        <xsd:documentation>Radius around the specified location, within which results should be included.
Example: 0.5</xsd:documentation>
      </xsd:annotation>
      <xsd:simpleType>
        <xsd:restriction base="xsd:unsignedLong" />
      </xsd:simpleType>
    </xsd:attribute>
  </xsd:attributeGroup>
  <xsd:attributeGroup name="RefType">
    <xsd:attribute name="RefType" type="xsd:string">
      <xsd:annotation>
        <xsd:documentation>Location of the referenced data. Example: TravelerRefInfo  Accepted Values: Any child node specified in ReferenceData, eg. FlightRefInfo, ServiceRefInfo, FareRefInfo, SeatRefInfo.
</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:attributeGroup>
  <xsd:attributeGroup name="sourceMandatory">
    <xsd:attribute name="Source" use="required">
      <xsd:annotation>
        <xsd:documentation>Identifies the source of this  element. In other words where the content originates from. Not limited to GDS, applicable to direct connect as well. Example: 1A, 1V, or other. </xsd:documentation>
      </xsd:annotation>
      <xsd:simpleType>
        <xsd:restriction base="xsd:string">
          <xsd:minLength value="1" />
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:attribute>
  </xsd:attributeGroup>
  <xsd:attributeGroup name="sourceOptional">
    <xsd:attribute name="Source">
      <xsd:annotation>
        <xsd:documentation>Identifies the source of this  element. In other words where the content originates from. Not limited to GDS, applicable to direct connect as well. Example: 1A, 1V, or other. </xsd:documentation>
      </xsd:annotation>
      <xsd:simpleType>
        <xsd:restriction base="xsd:string">
          <xsd:minLength value="1" />
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:attribute>
  </xsd:attributeGroup>
  <xsd:attributeGroup name="SourceRef">
    <xsd:attribute name="SourceRef">
      <xsd:annotation>
        <xsd:documentation>PNR Record Locator associated to Source attribute.</xsd:documentation>
      </xsd:annotation>
      <xsd:simpleType>
        <xsd:restriction base="xsd:string">
          <xsd:minLength value="1" />
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:attribute>
  </xsd:attributeGroup>
  <xsd:attributeGroup name="PayloadStdAttributes">
    <xsd:annotation>
      <xsd:documentation source="DESCRIPTION" xml:lang="en">NDC schema payload standard attributes.</xsd:documentation>
    </xsd:annotation>
    <xsd:attribute name="Version" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation source="DESCRIPTION" xml:lang="en">Message version number.
Example: 1.0</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="TimeStamp" type="xsd:dateTime" use="optional">
      <xsd:annotation>
        <xsd:documentation source="DESCRIPTION" xml:lang="en">Message creation timestamp.
Example: 2012-01-13T13:59:38Z</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="TransactionIdentifier" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation source="DESCRIPTION" xml:lang="en">Unique relationship identifier for request and response messages that are part of an on-going transaction.
Example: TRN12345</xsd:documentation>
        <xsd:documentation source="GUIDELINES" xml:lang="en">=notes=
1. This is a unique identifier to relate all messages that are part of an on-going transaction.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="PrimaryLangID" use="optional">
      <xsd:annotation>
        <xsd:documentation source="DESCRIPTION" xml:lang="en">Primary language preference for message content.
Example: en-US (English, United States)</xsd:documentation>
        <xsd:documentation source="ENCODING" xml:lang="en">For maximum interoperability, content language designators are specified using Microsoft National Language Support (NLS) encoding.
http://msdn.microsoft.com/en-us/goglobal/bb896001.aspx</xsd:documentation>
      </xsd:annotation>
      <xsd:simpleType>
        <xsd:restriction base="xsd:string">
          <xsd:minLength value="2" />
          <xsd:maxLength value="5" />
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:attribute>
    <xsd:attribute name="AltLangID" use="optional">
      <xsd:annotation>
        <xsd:documentation source="DESCRIPTION" xml:lang="en">Alternate language preference for message content.
Example: en-GB (English, United Kingdom)</xsd:documentation>
        <xsd:documentation source="ENCODING" xml:lang="en">For maximum interoperability, content language designators are specified using Microsoft National Language Support (NLS) encoding.
http://msdn.microsoft.com/en-us/goglobal/bb896001.aspx</xsd:documentation>
      </xsd:annotation>
      <xsd:simpleType>
        <xsd:restriction base="xsd:string">
          <xsd:minLength value="2" />
          <xsd:maxLength value="5" />
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:attribute>
    <xsd:attribute name="TargetSystem" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation source="DESCRIPTION" xml:lang="en">Message target system type.
Examples:
PRODUCTION
STAGING
TEST</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="TargetSystemName" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation source="DESCRIPTION" xml:lang="en">Message target system name.
Example: STG002</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:attributeGroup>
  <xsd:attributeGroup name="version">
    <xsd:attribute name="version" type="xsd:string">
      <xsd:annotation>
        <xsd:documentation>Version of message</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:attributeGroup>
  <xsd:attributeGroup name="Time">
    <xsd:attribute name="Time">
      <xsd:annotation>
        <xsd:documentation>Time in ISO 8601 format.  Example: 12:35:22 or 19:45:22</xsd:documentation>
      </xsd:annotation>
      <xsd:simpleType>
        <xsd:restriction base="xsd:string">
          <xsd:pattern value="([0-1][0-9]|2[0-3]):[0-5][0-9](:[0-5][0-9])?">
            <xsd:annotation>
              <xsd:documentation />
            </xsd:annotation>
          </xsd:pattern>
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:attribute>
  </xsd:attributeGroup>
  <xsd:element name="AirlineCode">
    <xsd:annotation>
      <xsd:documentation>Airline code.  Example: AA</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleType>
      <xsd:restriction base="xsd:string" />
    </xsd:simpleType>
  </xsd:element>
  <xsd:element name="AirportCode">
    <xsd:annotation>
      <xsd:documentation>Airport code.  Example: MIA</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleType>
      <xsd:restriction base="xsd:string">
        <xsd:maxLength value="3" />
        <xsd:minLength value="3" />
      </xsd:restriction>
    </xsd:simpleType>
  </xsd:element>
  <xsd:element name="Arrival">
    <xsd:annotation>
      <xsd:documentation>Flight arrival group</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:annotation>
          <xsd:documentation>IMPORTANT: Note that Date and Time elements are mandatory for regular flight sell. Only optional for OPEN segments . 

See also Flight/@Type=O  attribute of the Flight element.</xsd:documentation>
        </xsd:annotation>
        <xsd:element ref="AirportCode" />
        <xsd:element minOccurs="0" ref="Date" />
        <xsd:element minOccurs="0" ref="Time" />
        <xsd:element minOccurs="0" ref="Terminal" />
        <xsd:element minOccurs="0" name="AirportName" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Airport Name. Example Miami International Airport</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="AltTicketingDate">
    <xsd:annotation>
      <xsd:documentation>This date stamp specifies a future or historic alternative date validation for ticketing.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="Date" type="Date">
          <xsd:annotation>
            <xsd:documentation>Specifies date in ISO 8601 format (yyyy-mm-dd). Example: 2001-12-25</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="BookingSource" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>Agency booking source number.  Example: 99199</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="Certificates">
    <xsd:annotation>
      <xsd:documentation>Electronic Certificate information.

=notes=
1. Supports non-revenue and flightpass certificates.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element maxOccurs="unbounded" name="Certificate" type="CertificateType">
          <xsd:annotation>
            <xsd:documentation>Certificate detail.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="CityCode">
    <xsd:annotation>
      <xsd:documentation>Departure or arrival city code.  Example: MIA</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleType>
      <xsd:restriction base="xsd:string">
        <xsd:maxLength value="3" />
        <xsd:minLength value="3" />
      </xsd:restriction>
    </xsd:simpleType>
  </xsd:element>
  <xsd:element name="ClassOfService" type="COSType">
    <xsd:annotation>
      <xsd:documentation>Class of service.  Example: B</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="Code" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>Error code or equipment type code.  Example: 0104 (error code), 747 (equipment code)</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="Control">
    <xsd:annotation>
      <xsd:documentation>The control(s) needed for this pop-up.a) Textbox

Possible types are:
a) TextBox
b) DropDown w/values
c) OptionGroup</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" maxOccurs="unbounded" name="Value" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Applicable to these control types:

ListBox
DropDown
ComboBox
OptionGroup
CheckBox

The provided values are used to provide a dynamically built list and/or single choice (OptionGroup) or multi-choice (CheckBox) labels.

In case of 'OptionGroup' and 'CheckBox' the value is the description/label for each checkbox or radio button.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
      <xsd:attribute name="Type" type="xsd:string" use="required">
        <xsd:annotation>
          <xsd:documentation>Possible Values:

TextBox
ListBox
DropDown w/values
ComboBox
OptionGroup(radio)
CheckBox
DateInput
TimeInput
TextArea</xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="GUILabel" type="xsd:string" use="required">
        <xsd:annotation>
          <xsd:documentation>Label to describe this control. 
This label is usually placed in front or above the respective control. In case of a 'Button' it is the name of the button.</xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="PNRLabel" type="xsd:string" use="required">
        <xsd:annotation>
          <xsd:documentation>Description to be used to enter the returned value into a PNR General Remark element, if needed or desired.

This label is usually placed in front of the returned value as remark text.

Example:
"ProjectID: 105514"</xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="MouseOverText" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>Freeflow informational text designed to use as a 'mouseover' text or similar</xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="Mandatory" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>Allowed Values: Y or N

If 'Y' the UI needs to identify the control as mandatory input/selection, e.g. with an asteriks or different colored background</xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="Width" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>Width in pixels</xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="SameLine" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>Allowed Values: Y or N

If 'Y' the UI needs to position this control to the right of and on the same line as the preceding control.</xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="Pattern" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>use a regular expression string</xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="MinChar" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>Minimum characters</xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="MaxChar" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>Maximum characters</xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="CountryCode">
    <xsd:annotation>
      <xsd:documentation>Country where sale takes place or Ticket issuing country. Example: US</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleType>
      <xsd:restriction base="xsd:string" />
    </xsd:simpleType>
  </xsd:element>
  <xsd:element name="CurrencyCode">
    <xsd:annotation>
      <xsd:documentation>Currency code.  Example: USD</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:simpleContent>
        <xsd:restriction base="CurrencyCodeType">
          <xsd:pattern value="[A-Z0-9]{3}" />
          <xsd:attribute name="NumberOfDecimals" type="xsd:nonNegativeInteger" use="required">
            <xsd:annotation>
              <xsd:documentation>Decimal position in fare amount.  Example: 2</xsd:documentation>
            </xsd:annotation>
          </xsd:attribute>
        </xsd:restriction>
      </xsd:simpleContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="CustomRequest">
    <xsd:annotation>
      <xsd:documentation>Mostly used when source specific additional input is needed and/or when QC (Quality Control) edits are processed and the POS needs instructions/options how to proceed.

Multiple sources may return a separate 'Error' node with their own CustomRequest request.

the UI must display one screen at a time and respond to each with a separate message.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="DialogTitle" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Freeflow Text to be displayed in the Title Bar of the pop-up window</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="Instructions">
          <xsd:annotation>
            <xsd:documentation>Freeflow lines of text to be displayed inside of the pop-up window to explain or instruct the user of the necessary action(s)</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:sequence>
              <xsd:element maxOccurs="unbounded" name="Text">
                <xsd:annotation>
                  <xsd:documentation>Individual line of freeflow text</xsd:documentation>
                </xsd:annotation>
                <xsd:complexType>
                  <xsd:simpleContent>
                    <xsd:extension base="xsd:string">
                      <xsd:attribute name="Type" type="xsd:string" use="optional">
                        <xsd:annotation>
                          <xsd:documentation>Information content type.</xsd:documentation>
                        </xsd:annotation>
                      </xsd:attribute>
                    </xsd:extension>
                  </xsd:simpleContent>
                </xsd:complexType>
              </xsd:element>
            </xsd:sequence>
          </xsd:complexType>
        </xsd:element>
        <xsd:element maxOccurs="unbounded" ref="Control">
          <xsd:annotation>
            <xsd:documentation>Control(s) needed for this pop-up.

Important: The UI is asked to build the Pop-Up controls in sequential order.

Possible types are:
TextBox
ListBox
DropDown w/values
ComboBox
OptionGroup
CheckBox
DateInput
TimeInput
TextArea</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element maxOccurs="unbounded" name="Button">
          <xsd:annotation>
            <xsd:documentation>The 1st button defined will be the default button for the window.

All buttons will be positioned at the bottom of the forms and arranged from left to right (centered)</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:attribute name="ButtonLabel" type="xsd:string" use="required">
              <xsd:annotation>
                <xsd:documentation>The label to be used for the button.

Example: Submit</xsd:documentation>
              </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="Validate" type="xsd:string">
              <xsd:annotation>
                <xsd:documentation>Possible values Y or N (default)

If "Y" this button will trigger the validation needed by the GUI prior to processing the screen.

Note:  Only a single button can have this attribute set to "Y".  If multiple, the first instance will be used.</xsd:documentation>
              </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="MouseOverText" type="xsd:string">
              <xsd:annotation>
                <xsd:documentation>Freeflow informational text designed to use as a 'mouseover' text or similar</xsd:documentation>
              </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="Width" type="xsd:string">
              <xsd:annotation>
                <xsd:documentation>GUI normally autosizes based on width of label.  A certain width may be defined here in pixels.</xsd:documentation>
              </xsd:annotation>
            </xsd:attribute>
          </xsd:complexType>
        </xsd:element>
        <xsd:element name="OrigMsg" type="MessageStructure">
          <xsd:annotation>
            <xsd:documentation>This is the message originally received by Company</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="Reference" type="MessageStructure">
          <xsd:annotation>
            <xsd:documentation>Reference node to be returned with CustomResponse node - mostly used as a linking reference between CustomRequest and CustomResponse</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="CancelRefKey" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Cancel reference key.
Example: QUERYID=6209000C296C648F?PNR=KSZJ2R?CANCEL_INIT=1548018?REFUND=FULL?REFUND_TYPE=IC?RETAIN_DATE=2014-10-14?H24=Y</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="CustomResponse">
    <xsd:annotation>
      <xsd:documentation>This node is used to return custom data previously requested via an error response using the InfoGroup/Error/ CustomRequest node of any supporting RS message.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element maxOccurs="unbounded" ref="Response">
          <xsd:annotation>
            <xsd:documentation>Custom response to each control sent to the GUI in the "CustomRequest" request.

If Control is of type 'Button' only the control which was clicked is returned with the @PNRLabel value provided or mapped from the associated @GUILabel.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element name="Button">
          <xsd:annotation>
            <xsd:documentation>This node represents the button clicked by the user.</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:attribute name="PNRLabel" type="xsd:string" use="required">
              <xsd:annotation>
                <xsd:documentation>Description to be used to enter the returned value into a PNR General Remark element. Value is passed thru from the request - if provided.</xsd:documentation>
              </xsd:annotation>
            </xsd:attribute>
          </xsd:complexType>
        </xsd:element>
        <xsd:element minOccurs="0" name="Reference" type="MessageStructure">
          <xsd:annotation>
            <xsd:documentation>Custom parameter node received in the CustomRequest node</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
      <xsd:attributeGroup ref="sourceMandatory" />
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="Date" type="xsd:date">
    <xsd:annotation>
      <xsd:documentation>Date in ISO 8601 format (yyyy-mm-dd).  Example: 2001-12-25</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="DateOfBirth" type="xsd:date">
    <xsd:annotation>
      <xsd:documentation>Traveler birth date in ISO 8601 format (yyyy-mm-dd).  Date of birth is not supported in Galileo.  Example: 2001-12-25</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="Departure">
    <xsd:annotation>
      <xsd:documentation>Flight departure group</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:annotation>
          <xsd:documentation>IMPORTANT: Note that Date and Time elements are mandatory for regular flight sell. Only optional for OPEN segments. 

See also Flight/@Type=O  attribute of the Flight element.</xsd:documentation>
        </xsd:annotation>
        <xsd:element ref="AirportCode" />
        <xsd:element minOccurs="0" ref="Date" />
        <xsd:element minOccurs="0" ref="Time" />
        <xsd:element minOccurs="0" ref="Terminal" />
        <xsd:element minOccurs="0" name="AirportName" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Airport Name. Example Miami International Airport</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="Derivation" type="DerivationType">
    <xsd:annotation>
      <xsd:documentation source="DESCRIPTION" xml:lang="en">Price derivation information.

=notes=
1. Used for dynamic price classes to identify the derivation for the designated price class (e.g. which qualifier triggered the creation of this price class.)</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="Diagnostics">
    <xsd:complexType>
      <xsd:simpleContent>
        <xsd:extension base="xsd:string">
          <xsd:attribute name="ID" type="xsd:integer" use="optional" />
        </xsd:extension>
      </xsd:simpleContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="DispAmount" type="xsd:decimal">
    <xsd:annotation>
      <xsd:documentation>Formated Display amount with decimals. e.g 75.00 </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="Error">
    <xsd:annotation>
      <xsd:documentation>Error group</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" ref="Code" />
        <xsd:element maxOccurs="unbounded" ref="Text" />
        <xsd:element minOccurs="0" ref="CustomRequest" />
      </xsd:sequence>
      <xsd:attribute name="ErrorType" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>Type of error.  Example: Air</xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
      <xsd:attributeGroup ref="sourceOptional" />
      <xsd:attributeGroup ref="SourceRef" />
      <xsd:attribute name="SegmentIDRef" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>ID reference used to associate this item to a segment. No comma separated lists and no ranges supported. Example: F1</xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="FareRefKey">
    <xsd:annotation>
      <xsd:documentation>Unique fare reference key. If present in pricing response messages, must be included in FareRulesRQ.</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleType>
      <xsd:restriction base="xsd:string">
        <xsd:minLength value="1" />
      </xsd:restriction>
    </xsd:simpleType>
  </xsd:element>
  <xsd:element name="FiledAmount">
    <xsd:annotation>
      <xsd:documentation>Base Fare Amount as originally filed.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:simpleContent>
        <xsd:extension base="xsd:integer" />
      </xsd:simpleContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="FiledCurrencyCode">
    <xsd:annotation>
      <xsd:documentation>Currency code.  Example: USD</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:simpleContent>
        <xsd:restriction base="CurrencyCodeType">
          <xsd:pattern value="[A-Z0-9]{3}" />
          <xsd:attribute name="NumberOfDecimals" type="xsd:nonNegativeInteger" use="required">
            <xsd:annotation>
              <xsd:documentation>Decimal position in fare amount.  Example: 2</xsd:documentation>
            </xsd:annotation>
          </xsd:attribute>
        </xsd:restriction>
      </xsd:simpleContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="FiledIn">
    <xsd:annotation>
      <xsd:documentation>This group represents fares filed in a currency different from the currency of a point of sale. The content elements represent the original currency and amount as filed.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:all>
        <xsd:element ref="CurrencyCode" />
        <xsd:element name="Amount">
          <xsd:annotation>
            <xsd:documentation>Base Fare Amount as originally filed.</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:simpleContent>
              <xsd:extension base="xsd:integer">
                <xsd:attribute name="BulkMask" type="xsd:string">
                  <xsd:annotation>
                    <xsd:documentation>This mask applies to IT/BT tickets where the masked value may be "BT" or "IT" instead of the true amount.

Note: this mask is ALWAYS used for the passenger ticket image. </xsd:documentation>
                  </xsd:annotation>
                </xsd:attribute>
              </xsd:extension>
            </xsd:simpleContent>
          </xsd:complexType>
        </xsd:element>
        <xsd:element minOccurs="0" name="NUCAmount">
          <xsd:annotation>
            <xsd:documentation>Base Fare Amount as originally filed.</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:simpleContent>
              <xsd:extension base="xsd:integer">
                <xsd:attribute name="ROE" type="xsd:string">
                  <xsd:annotation>
                    <xsd:documentation>Applicable rate of exhange</xsd:documentation>
                  </xsd:annotation>
                </xsd:attribute>
              </xsd:extension>
            </xsd:simpleContent>
          </xsd:complexType>
        </xsd:element>
      </xsd:all>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="FlightNumber" type="FlightNumberWithSuffixType">
    <xsd:annotation>
      <xsd:documentation>Flight number - an integer value within the range of [0,9999].

Example: 1234</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="ForInfo">
    <xsd:annotation>
      <xsd:documentation>Information group</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" ref="Code">
          <xsd:annotation>
            <xsd:documentation>Warning-, error- or equipment type code.  Example: 0104 (error code), 747 (equipment code)</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element maxOccurs="unbounded" ref="Text">
          <xsd:annotation>
            <xsd:documentation>Information text or error text. Example: Free flow text.  Example: Invalid flight number</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
      <xsd:attributeGroup ref="sourceOptional" />
      <xsd:attributeGroup ref="SourceRef" />
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="Gender">
    <xsd:annotation>
      <xsd:documentation>Traveler gender.  Values are: F = Female M = Male U= Unknown at time of booking.  Example: M      NOTE: Always use M or F in the FLX API, even for infants. FLX backend processing will submit alternative indicators (such as MI/FI) as appropriate.</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleType>
      <xsd:restriction base="xsd:string">
        <xsd:minLength value="1" />
        <xsd:maxLength value="2" />
        <xsd:enumeration value="F" />
        <xsd:enumeration value="M" />
        <xsd:enumeration value="U" />
        <xsd:enumeration value="MI" />
        <xsd:enumeration value="FI" />
      </xsd:restriction>
    </xsd:simpleType>
  </xsd:element>
  <xsd:element name="GeoCoded">
    <xsd:annotation>
      <xsd:documentation>Geographical position information. 
Allows search by geographical longitude and latitude and to define a search radius around the specified geo location.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:all>
        <xsd:element ref="Longitude" />
        <xsd:element ref="Latitude" />
      </xsd:all>
      <xsd:attributeGroup ref="Radius" />
      <xsd:attributeGroup ref="DistanceUnit" />
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="GivenName" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>Traveler given (first) name.  Example: JANE</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="HistoricalPricingInfo">
    <xsd:annotation>
      <xsd:documentation>DEPRECATED.
Please use definitions in PricingInfo: ReservationsDateTime, HistoricPricingDate, AltTicketingDate.

Historical pricing group. Required if OriginDestination group includes past date segments.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:choice>
        <xsd:sequence>
          <xsd:element minOccurs="0" name="ReservationDateTime">
            <xsd:annotation>
              <xsd:documentation>This timestamp indetifies when PNR was created client application requests historical pricing for.</xsd:documentation>
            </xsd:annotation>
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="Date" type="Date">
                  <xsd:annotation>
                    <xsd:documentation>Specifies departure or arrival date in ISO 8601 format (yyyy-mm-dd). Example: 2001-12-25</xsd:documentation>
                  </xsd:annotation>
                </xsd:element>
                <xsd:element minOccurs="0" name="Time" type="Time">
                  <xsd:annotation>
                    <xsd:documentation>Departure or arrival time in ISO 8601 twenty-four hour clock format. Example: 14:00</xsd:documentation>
                  </xsd:annotation>
                </xsd:element>
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="TicketedDateTime">
            <xsd:annotation>
              <xsd:documentation>Timestamp of ticket issuance  for past date segments in OriginDestination section.</xsd:documentation>
            </xsd:annotation>
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="Date" type="Date">
                  <xsd:annotation>
                    <xsd:documentation>Specifies departure or arrival date in ISO 8601 format (yyyy-mm-dd). Example: 2001-12-25</xsd:documentation>
                  </xsd:annotation>
                </xsd:element>
                <xsd:element minOccurs="0" name="Time" type="Time">
                  <xsd:annotation>
                    <xsd:documentation>Departure or arrival time in ISO 8601 twenty-four hour clock format. Example: 14:00</xsd:documentation>
                  </xsd:annotation>
                </xsd:element>
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
        <xsd:element minOccurs="0" maxOccurs="0" name="RecordLocator" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>FUTURE USE.
	NOT SUPPORTED.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:choice>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="HistoricPricingDate">
    <xsd:annotation>
      <xsd:documentation>Date for which a historical pricing is requested.  When used for ticket reissue in BSP markets this is commonly the issuance date of the original ticket.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="Date" type="Date">
          <xsd:annotation>
            <xsd:documentation>Specifies the date in ISO 8601 format (yyyy-mm-dd). Example: 2008-05-02</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="HotelRating">
    <xsd:annotation>
      <xsd:documentation>Rating of this hotel. Note that this element will eventually supercede the AAARating element definition. The latter will be deprecated soon.
Example: NTM3  CROWN</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:simpleContent>
        <xsd:extension base="xsd:string">
          <xsd:attribute name="RatingSystem">
            <xsd:annotation>
              <xsd:documentation>Identifies the rating system used to rate the hotel. Values are: 
AAA - AAA in US
GUESTS - Guest rating
HRS - Hotel Reservation System 'stars' rating
NTM - North Star Media 'crown' rating.
HBC - Booking.com rating
UNK - unknown.</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
              <xsd:restriction base="xsd:string">
                <xsd:enumeration value="AAA" />
                <xsd:enumeration value="GUESTS" />
                <xsd:enumeration value="HRS" />
                <xsd:enumeration value="NTM" />
                <xsd:enumeration value="UNK" />
                <xsd:enumeration value="HBC" />
              </xsd:restriction>
            </xsd:simpleType>
          </xsd:attribute>
        </xsd:extension>
      </xsd:simpleContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="Identification">
    <xsd:annotation>
      <xsd:documentation>Identification values for requestor, aggregator and airline</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="RequestorInfo">
          <xsd:annotation>
            <xsd:documentation>Requestor identification values </xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:sequence minOccurs="0">
              <xsd:element minOccurs="0" name="UserInfo">
                <xsd:annotation>
                  <xsd:documentation>User Information.</xsd:documentation>
                </xsd:annotation>
                <xsd:complexType>
                  <xsd:simpleContent>
                    <xsd:extension base="xsd:string">
                      <xsd:attribute name="UserID" type="xsd:string" use="required">
                        <xsd:annotation>
                          <xsd:documentation>In case of an agency this is typically the Agent's ID </xsd:documentation>
                        </xsd:annotation>
                      </xsd:attribute>
                      <xsd:attribute name="UserRole" type="xsd:string" use="optional">
                        <xsd:annotation>
                          <xsd:documentation>User's role as set in system provider's requestor profile</xsd:documentation>
                        </xsd:annotation>
                      </xsd:attribute>
                      <xsd:attribute name="UserPW" type="xsd:string" use="optional">
                        <xsd:annotation>
                          <xsd:documentation>User's password</xsd:documentation>
                        </xsd:annotation>
                      </xsd:attribute>
                      <xsd:attribute name="DutyCode" type="xsd:string" use="optional">
                        <xsd:annotation>
                          <xsd:documentation source="DESCRIPTION" xml:lang="en">Agent duty code.
Example: UZ</xsd:documentation>
                        </xsd:annotation>
                      </xsd:attribute>
                      <xsd:attribute name="SignOn" type="xsd:string" use="optional">
                        <xsd:annotation>
                          <xsd:documentation source="DESCRIPTION" xml:lang="en">Agent sign on (SINE).
Example: 6146TL</xsd:documentation>
                        </xsd:annotation>
                      </xsd:attribute>
                      <xsd:attribute name="LNIATA" type="xsd:string" use="optional">
                        <xsd:annotation>
                          <xsd:documentation source="DESCRIPTION" xml:lang="en">Agent CRT or terminal LNIATA number.
Example: 956301007</xsd:documentation>
                        </xsd:annotation>
                      </xsd:attribute>
                    </xsd:extension>
                  </xsd:simpleContent>
                </xsd:complexType>
              </xsd:element>
              <xsd:element minOccurs="0" name="AccountInfo">
                <xsd:annotation>
                  <xsd:documentation>Account info as it relates to a (customer) account of the requestor such as a corporate booking tool</xsd:documentation>
                </xsd:annotation>
                <xsd:complexType>
                  <xsd:sequence minOccurs="0">
                    <xsd:element name="AccountUserInfo">
                      <xsd:annotation>
                        <xsd:documentation>Account User Info</xsd:documentation>
                      </xsd:annotation>
                      <xsd:complexType>
                        <xsd:simpleContent>
                          <xsd:extension base="xsd:string">
                            <xsd:attribute name="AccountUserID" type="xsd:string" use="required">
                              <xsd:annotation>
                                <xsd:documentation>User ID of the account</xsd:documentation>
                              </xsd:annotation>
                            </xsd:attribute>
                          </xsd:extension>
                        </xsd:simpleContent>
                      </xsd:complexType>
                    </xsd:element>
                    <xsd:element minOccurs="0" name="SourceInfo">
                      <xsd:annotation>
                        <xsd:documentation source="DESCRIPTION" xml:lang="en">System source detail used for auditing and traceability.</xsd:documentation>
                      </xsd:annotation>
                      <xsd:complexType>
                        <xsd:sequence>
                          <xsd:element name="IPAddress" type="xsd:string">
                            <xsd:annotation>
                              <xsd:documentation>IP address of the requestor</xsd:documentation>
                            </xsd:annotation>
                          </xsd:element>
                          <xsd:element minOccurs="0" name="IPPort" type="xsd:string">
                            <xsd:annotation>
                              <xsd:documentation>IP port associated to above IP address</xsd:documentation>
                            </xsd:annotation>
                          </xsd:element>
                        </xsd:sequence>
                      </xsd:complexType>
                    </xsd:element>
                  </xsd:sequence>
                  <xsd:attribute name="AccountID" type="xsd:string" use="required">
                    <xsd:annotation>
                      <xsd:documentation>In case of an agency this is typically the Account ID as set up between requestor and client, such as a corporate booking tool </xsd:documentation>
                    </xsd:annotation>
                  </xsd:attribute>
                </xsd:complexType>
              </xsd:element>
              <xsd:element minOccurs="0" name="SourceInfo">
                <xsd:annotation>
                  <xsd:documentation>System source detail used for auditing and traceability.</xsd:documentation>
                </xsd:annotation>
                <xsd:complexType>
                  <xsd:sequence>
                    <xsd:element name="IPAddress" type="xsd:string">
                      <xsd:annotation>
                        <xsd:documentation>IP address of the requestor</xsd:documentation>
                      </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" name="IPPort" type="xsd:string">
                      <xsd:annotation>
                        <xsd:documentation>IP port associated to above IP address</xsd:documentation>
                      </xsd:annotation>
                    </xsd:element>
                  </xsd:sequence>
                </xsd:complexType>
              </xsd:element>
            </xsd:sequence>
            <xsd:attribute name="RequestorID" type="xsd:string" use="required">
              <xsd:annotation>
                <xsd:documentation>In case of an agency this is typically the PCC of the POS agency (PseudoCityCode)</xsd:documentation>
              </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="RequestorIATA" type="xsd:string" use="optional">
              <xsd:annotation>
                <xsd:documentation>Requestor's IATA number (if applicable)</xsd:documentation>
              </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="ReportingAgency" type="xsd:string" use="optional">
              <xsd:annotation>
                <xsd:documentation source="DESCRIPTION" xml:lang="en">Reporting agency.
Examples:
ARC
BSP
Other</xsd:documentation>
              </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="DocStock" type="xsd:string" use="optional">
              <xsd:annotation>
                <xsd:documentation source="DESCRIPTION" xml:lang="en">Stock to be used.
Examples: BSP, AL</xsd:documentation>
              </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="RequestorName" type="xsd:string" use="optional">
              <xsd:annotation>
                <xsd:documentation source="DESCRIPTION" xml:lang="en">Requestor name.
Example: UNITED AIRLINES</xsd:documentation>
              </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="RequestorPW" type="xsd:string" use="optional">
              <xsd:annotation>
                <xsd:documentation source="DESCRIPTION" xml:lang="en">Requestor password.</xsd:documentation>
              </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="RequestorType" type="xsd:string" use="optional">
              <xsd:annotation>
                <xsd:documentation source="DESCRIPTION" xml:lang="en">Requestor type.
Example:
A (Airline)
C (Consolidator)
E (Electronic Selling System)
G (General Sales Agent)
I (Internal CRS Locations)
T (Travel Agent)
V (Vendor)
W (Wholesaler/Tour Operator)</xsd:documentation>
              </xsd:annotation>
            </xsd:attribute>
          </xsd:complexType>
        </xsd:element>
        <xsd:element minOccurs="0" maxOccurs="2" name="AggregatorInfo">
          <xsd:annotation>
            <xsd:documentation>Aggregator identification values </xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:sequence>
              <xsd:element minOccurs="0" name="SourceInfo">
                <xsd:annotation>
                  <xsd:documentation source="DESCRIPTION" xml:lang="en">System source detail used for auditing and traceability.</xsd:documentation>
                </xsd:annotation>
                <xsd:complexType>
                  <xsd:sequence>
                    <xsd:element name="IPAddress" type="xsd:string">
                      <xsd:annotation>
                        <xsd:documentation>IP address of the requestor</xsd:documentation>
                      </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" name="IPPort" type="xsd:string">
                      <xsd:annotation>
                        <xsd:documentation>IP port associated to above IP address</xsd:documentation>
                      </xsd:annotation>
                    </xsd:element>
                  </xsd:sequence>
                </xsd:complexType>
              </xsd:element>
            </xsd:sequence>
            <xsd:attribute name="AggregatorID" type="xsd:string" use="required">
              <xsd:annotation>
                <xsd:documentation>ID of the aggregating entity, such as GDS, OTA, MetaSearch, etc.</xsd:documentation>
              </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="AggregatorPW" type="xsd:string" use="optional">
              <xsd:annotation>
                <xsd:documentation>Aggregator's password</xsd:documentation>
              </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="AggregatorType" type="xsd:string" use="optional">
              <xsd:annotation>
                <xsd:documentation>Values as per IATA's AIRIMP are as follows:
A - Airline
E - ERSP (Electronic Reservation System Provider)
N - Requestor has no identification
T - Requestor has a user identification number assigned by IATA/ARC other than ERSP</xsd:documentation>
              </xsd:annotation>
            </xsd:attribute>
          </xsd:complexType>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="InfoGroup">
    <xsd:annotation>
      <xsd:documentation>Error and information group</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" maxOccurs="unbounded" ref="ForInfo" />
        <xsd:element minOccurs="0" maxOccurs="unbounded" ref="Error" />
        <xsd:element minOccurs="0" maxOccurs="unbounded" ref="MarketingData" />
        <xsd:element minOccurs="0" name="BackOffice">
          <xsd:annotation>
            <xsd:documentation>Used by certain applications to relay data</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:sequence minOccurs="0">
              <xsd:element minOccurs="0" name="Services">
                <xsd:complexType>
                  <xsd:sequence minOccurs="0">
                    <xsd:element minOccurs="0" maxOccurs="unbounded" name="Service">
                      <xsd:complexType>
                        <xsd:sequence minOccurs="0">
                          <xsd:element minOccurs="0" maxOccurs="unbounded" ref="SegmentIDRef" />
                        </xsd:sequence>
                        <xsd:attribute name="Type">
                          <xsd:annotation>
                            <xsd:documentation>Offer Code</xsd:documentation>
                          </xsd:annotation>
                          <xsd:simpleType>
                            <xsd:restriction base="xsd:string">
                              <xsd:enumeration value="CDA" />
                              <xsd:enumeration value="CDD" />
                              <xsd:enumeration value="BSD" />
                              <xsd:enumeration value="BSA" />
                              <xsd:enumeration value="STPC" />
                            </xsd:restriction>
                          </xsd:simpleType>
                        </xsd:attribute>
                        <xsd:attribute name="Text" type="xsd:string">
                          <xsd:annotation>
                            <xsd:documentation>Description</xsd:documentation>
                          </xsd:annotation>
                        </xsd:attribute>
                        <xsd:attribute name="Offer">
                          <xsd:annotation>
                            <xsd:documentation>Offer indicator if present set to Y</xsd:documentation>
                          </xsd:annotation>
                          <xsd:simpleType>
                            <xsd:restriction base="xsd:string">
                              <xsd:enumeration value="Y" />
                            </xsd:restriction>
                          </xsd:simpleType>
                        </xsd:attribute>
                      </xsd:complexType>
                    </xsd:element>
                  </xsd:sequence>
                </xsd:complexType>
              </xsd:element>
              <xsd:element minOccurs="0" name="MerchTxnRef" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>Transaction number returned by Credit Card Merchant Provider</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" name="ReceiptNo" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>Complements the MechTxnRef - returned by Credit Card Merchant Provider</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
            </xsd:sequence>
          </xsd:complexType>
        </xsd:element>
        <xsd:element minOccurs="0" name="FeeGroup">
          <xsd:annotation>
            <xsd:documentation>OB Fees associated with PNR - These are only indicative and actual fees will be calculated an applied udring ticketing. Returned if PNRRetrieveRQ/Display/OBFees is set to "Y" and the carrier files OB fees.</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:sequence>
              <xsd:element ref="CurrencyCode" />
              <xsd:element maxOccurs="unbounded" name="Fee">
                <xsd:complexType>
                  <xsd:sequence>
                    <xsd:element name="Amount" type="xsd:integer">
                      <xsd:annotation>
                        <xsd:documentation>Fee amount. Example: 2000</xsd:documentation>
                      </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" name="Description" type="xsd:string">
                      <xsd:annotation>
                        <xsd:documentation>Title description (Commercial Name) of Fee.

Example: "Credit Card Fee"</xsd:documentation>
                      </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" name="Taxes">
                      <xsd:annotation>
                        <xsd:documentation>Tax Group</xsd:documentation>
                      </xsd:annotation>
                      <xsd:complexType>
                        <xsd:sequence>
                          <xsd:element minOccurs="0" maxOccurs="unbounded" name="Tax">
                            <xsd:annotation>
                              <xsd:documentation>Tax break down information group </xsd:documentation>
                            </xsd:annotation>
                            <xsd:complexType>
                              <xsd:sequence minOccurs="0">
                                <xsd:element name="Designator" type="xsd:string">
                                  <xsd:annotation>
                                    <xsd:documentation>Tax or surcharge designator.  Example: US</xsd:documentation>
                                  </xsd:annotation>
                                </xsd:element>
                                <xsd:element minOccurs="0" name="Description" type="xsd:string">
                                  <xsd:annotation>
                                    <xsd:documentation>Tax or surcharge description.  Example: US national transportation</xsd:documentation>
                                  </xsd:annotation>
                                </xsd:element>
                              </xsd:sequence>
                              <xsd:attribute name="Amount" type="xsd:integer" use="required">
                                <xsd:annotation>
                                  <xsd:documentation>Individual tax amount.  Example: 250</xsd:documentation>
                                </xsd:annotation>
                              </xsd:attribute>
                              <xsd:attribute name="Refundable" use="optional">
                                <xsd:annotation>
                                  <xsd:documentation>Indicates if tax is refundable.  Values are:
Y = Tax refundable (default)
N = Tax not refundable
Example: N</xsd:documentation>
                                </xsd:annotation>
                                <xsd:simpleType>
                                  <xsd:restriction base="xsd:string">
                                    <xsd:enumeration value="Y" />
                                    <xsd:enumeration value="N" />
                                  </xsd:restriction>
                                </xsd:simpleType>
                              </xsd:attribute>
                            </xsd:complexType>
                          </xsd:element>
                        </xsd:sequence>
                        <xsd:attribute name="Amount" type="xsd:integer" use="required">
                          <xsd:annotation>
                            <xsd:documentation>Total taxes amount.  Example: 750</xsd:documentation>
                          </xsd:annotation>
                        </xsd:attribute>
                      </xsd:complexType>
                    </xsd:element>
                    <xsd:element minOccurs="0" name="TravelerElementNumber" type="xsd:string">
                      <xsd:annotation>
                        <xsd:documentation>PNR element number.  Example: 1</xsd:documentation>
                      </xsd:annotation>
                    </xsd:element>
                  </xsd:sequence>
                  <xsd:attribute name="ServiceCode">
                    <xsd:annotation>
                      <xsd:documentation>Additional unique ATPCO code. Please refer to FLX Codeset document for acceptable values.
Example: OC</xsd:documentation>
                    </xsd:annotation>
                  </xsd:attribute>
                  <xsd:attribute name="SubCode">
                    <xsd:annotation>
                      <xsd:documentation>ATPCO RFISC (ReasonForIssuance  Subcode).
Example of RFISC: 0CC</xsd:documentation>
                    </xsd:annotation>
                  </xsd:attribute>
                  <xsd:attribute name="Refundable">
                    <xsd:annotation>
                      <xsd:documentation>Indicates if fee is refundable.  Values are:
Y = Fee refundable  N = Fee not refundable. If attribute is not there then
default is Y.</xsd:documentation>
                    </xsd:annotation>
                    <xsd:simpleType>
                      <xsd:restriction base="xsd:string">
                        <xsd:length value="1" />
                      </xsd:restriction>
                    </xsd:simpleType>
                  </xsd:attribute>
                </xsd:complexType>
              </xsd:element>
            </xsd:sequence>
          </xsd:complexType>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="Initial">
    <xsd:annotation>
      <xsd:documentation>Traveler middle name or  initial.  Example: G or Gary</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleType>
      <xsd:restriction base="xsd:string" />
    </xsd:simpleType>
  </xsd:element>
  <xsd:element name="Latitude">
    <xsd:annotation>
      <xsd:documentation>Geographical information for latitude. If sign attribute is missing, positive values stand for North, negative values for South. Example: 49.9856</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:simpleContent>
        <xsd:extension base="xsd:decimal">
          <xsd:attribute name="Sign">
            <xsd:annotation>
              <xsd:documentation>Latitude Indicator.  Values are: N = North of Equator S = South of Equator  Example: S</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
              <xsd:restriction base="xsd:string">
                <xsd:enumeration value="S" />
                <xsd:enumeration value="N" />
              </xsd:restriction>
            </xsd:simpleType>
          </xsd:attribute>
        </xsd:extension>
      </xsd:simpleContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="Longitude">
    <xsd:annotation>
      <xsd:documentation>Geographical information for longitude. If sign attribute is missing, positive values stand for East, negative values for West. Example: 9.1220</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:simpleContent>
        <xsd:extension base="xsd:decimal">
          <xsd:attribute name="Sign">
            <xsd:annotation>
              <xsd:documentation>Longitude indicator.  Values are: E = East of Meridian, W = West of Meridian  Example: E</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
              <xsd:restriction base="xsd:string">
                <xsd:enumeration value="E" />
                <xsd:enumeration value="W" />
              </xsd:restriction>
            </xsd:simpleType>
          </xsd:attribute>
        </xsd:extension>
      </xsd:simpleContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="MarketingData">
    <xsd:annotation>
      <xsd:documentation>Marketing Messages and Multimedia Links.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" name="MediaContent">
          <xsd:annotation>
            <xsd:documentation source="DESCRIPTION" xml:lang="en">Media content information.</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:sequence>
              <xsd:element minOccurs="0" name="Images">
                <xsd:annotation>
                  <xsd:documentation source="DESCRIPTION" xml:lang="en">Image information.</xsd:documentation>
                </xsd:annotation>
                <xsd:complexType>
                  <xsd:sequence>
                    <xsd:element maxOccurs="unbounded" name="Image">
                      <xsd:annotation>
                        <xsd:documentation source="DESCRIPTION" xml:lang="en">Image detail.</xsd:documentation>
                      </xsd:annotation>
                      <xsd:complexType>
                        <xsd:sequence>
                          <xsd:element name="Height">
                            <xsd:annotation>
                              <xsd:documentation>Height of media content in specified units.</xsd:documentation>
                            </xsd:annotation>
                            <xsd:complexType>
                              <xsd:simpleContent>
                                <xsd:extension base="xsd:int">
                                  <xsd:attribute name="Unit" type="xsd:string" use="required">
                                    <xsd:annotation>
                                      <xsd:documentation source="DESCRIPTION" xml:lang="en">Dimension unit.
Examples:
MM (MILLIMETER)
PX (PIXEL)</xsd:documentation>
                                      <xsd:documentation source="ENCODING" xml:lang="en">Select a value from the enumerated list or enter a string value.
=enumerated values=
MM = MILLIMETER
PX = PIXEL</xsd:documentation>
                                    </xsd:annotation>
                                  </xsd:attribute>
                                </xsd:extension>
                              </xsd:simpleContent>
                            </xsd:complexType>
                          </xsd:element>
                          <xsd:element name="Width">
                            <xsd:annotation>
                              <xsd:documentation>Width of media content in specified units.</xsd:documentation>
                            </xsd:annotation>
                            <xsd:complexType>
                              <xsd:simpleContent>
                                <xsd:extension base="xsd:int">
                                  <xsd:attribute name="Unit" type="xsd:string" use="required">
                                    <xsd:annotation>
                                      <xsd:documentation source="DESCRIPTION" xml:lang="en">Dimension unit.
Examples:
MM (MILLIMETER)
PX (PIXEL)</xsd:documentation>
                                      <xsd:documentation source="ENCODING" xml:lang="en">Select a value from the enumerated list or enter a string value.
=enumerated values=
MM = MILLIMETER
PX = PIXEL</xsd:documentation>
                                    </xsd:annotation>
                                  </xsd:attribute>
                                </xsd:extension>
                              </xsd:simpleContent>
                            </xsd:complexType>
                          </xsd:element>
                          <xsd:element minOccurs="0" name="ImageData" type="xsd:string">
                            <xsd:annotation>
                              <xsd:documentation source="DESCRIPTION" xml:lang="en">Encoded image value, typically in base64.</xsd:documentation>
                            </xsd:annotation>
                          </xsd:element>
                          <xsd:element minOccurs="0" name="ImageText">
                            <xsd:annotation>
                              <xsd:documentation source="DESCRIPTION" xml:lang="en">Media associated text.</xsd:documentation>
                            </xsd:annotation>
                            <xsd:complexType>
                              <xsd:sequence>
                                <xsd:element maxOccurs="unbounded" name="Text">
                                  <xsd:simpleType>
                                    <xsd:restriction base="xsd:string">
                                      <xsd:minLength value="1" />
                                    </xsd:restriction>
                                  </xsd:simpleType>
                                </xsd:element>
                              </xsd:sequence>
                            </xsd:complexType>
                          </xsd:element>
                        </xsd:sequence>
                        <xsd:attribute name="ImageID" type="xsd:string" use="optional">
                          <xsd:annotation>
                            <xsd:documentation source="DESCRIPTION" xml:lang="en">Unique media ID.
Examples:
IMG713
SFO_LOUNGE</xsd:documentation>
                            <xsd:documentation source="GUIDELINES" xml:lang="en">=notes=
1. Provides an unique ID for any available images returned in any responsemessages.
2. FileRetrieveRQ/ FileListRS will utilize these ID's to retrieve the full image(s) as needed.</xsd:documentation>
                          </xsd:annotation>
                        </xsd:attribute>
                        <xsd:attribute name="Caption" type="xsd:string" use="optional">
                          <xsd:annotation>
                            <xsd:documentation source="DESCRIPTION" xml:lang="en">Media caption.
Example: PREMIUM SEAT</xsd:documentation>
                          </xsd:annotation>
                        </xsd:attribute>
                        <xsd:attribute name="Symbology" type="xsd:string" use="optional">
                          <xsd:annotation>
                            <xsd:documentation source="DESCRIPTION" xml:lang="en">Barcode symbology applied.
Example: PDF417</xsd:documentation>
                          </xsd:annotation>
                        </xsd:attribute>
                        <xsd:attribute name="Encoding" type="xsd:string" use="optional">
                          <xsd:annotation>
                            <xsd:documentation source="DESCRIPTION" xml:lang="en">Media encoding method.
Example: BASE64</xsd:documentation>
                          </xsd:annotation>
                        </xsd:attribute>
                        <xsd:attribute name="Format" type="xsd:string" use="optional">
                          <xsd:annotation>
                            <xsd:documentation source="DESCRIPTION" xml:lang="en">Media format.
Example: JPEG</xsd:documentation>
                          </xsd:annotation>
                        </xsd:attribute>
                      </xsd:complexType>
                    </xsd:element>
                  </xsd:sequence>
                </xsd:complexType>
              </xsd:element>
              <xsd:element minOccurs="0" name="MediaLinks">
                <xsd:annotation>
                  <xsd:documentation source="DESCRIPTION" xml:lang="en">Link information.</xsd:documentation>
                </xsd:annotation>
                <xsd:complexType>
                  <xsd:sequence>
                    <xsd:element maxOccurs="unbounded" name="Link">
                      <xsd:annotation>
                        <xsd:documentation source="DESCRIPTION" xml:lang="en">Link detail.</xsd:documentation>
                      </xsd:annotation>
                      <xsd:complexType>
                        <xsd:simpleContent>
                          <xsd:extension base="xsd:anyURI">
                            <xsd:attribute name="LinkID" type="xsd:string" use="optional">
                              <xsd:annotation>
                                <xsd:documentation source="DESCRIPTION" xml:lang="en">Unique link ID.
Example: SFOLOUNGE</xsd:documentation>
                              </xsd:annotation>
                            </xsd:attribute>
                            <xsd:attribute name="Caption" type="xsd:string" use="optional">
                              <xsd:annotation>
                                <xsd:documentation source="DESCRIPTION" xml:lang="en">Caption or label.
Example: PREMIUM SEAT</xsd:documentation>
                              </xsd:annotation>
                            </xsd:attribute>
                            <xsd:attribute name="Type" type="xsd:string" use="optional">
                              <xsd:annotation>
                                <xsd:documentation source="DESCRIPTION" xml:lang="en">Media link type.
Example:
DET (Details)
DIS (Disclosure)
VID (Video)
CAM (Webcam)
PGE (Webpage)</xsd:documentation>
                              </xsd:annotation>
                            </xsd:attribute>
                          </xsd:extension>
                        </xsd:simpleContent>
                      </xsd:complexType>
                    </xsd:element>
                  </xsd:sequence>
                </xsd:complexType>
              </xsd:element>
            </xsd:sequence>
          </xsd:complexType>
        </xsd:element>
        <xsd:element minOccurs="0" maxOccurs="unbounded" name="Message">
          <xsd:annotation>
            <xsd:documentation source="DESCRIPTION" xml:lang="en">Marketing message.
Example: ONE TRAVELER MAY BE ELIGIBLE FOR A FREE SEAT</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:sequence>
              <xsd:element maxOccurs="unbounded" name="Text">
                <xsd:simpleType>
                  <xsd:restriction base="xsd:string">
                    <xsd:minLength value="1" />
                  </xsd:restriction>
                </xsd:simpleType>
              </xsd:element>
            </xsd:sequence>
          </xsd:complexType>
        </xsd:element>
      </xsd:sequence>
      <xsd:attribute name="Source" type="xsd:string" use="optional">
        <xsd:annotation>
          <xsd:documentation>Identifies the source of this  element. In other words where the content originates from. Not limited to GDS, applicable to direct connect as well. Example: 1A, 1V, or other. </xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="NegoRateCode">
    <xsd:annotation>
      <xsd:documentation>Negotiated rate code.</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleType>
      <xsd:restriction base="xsd:string">
        <xsd:minLength value="1" />
      </xsd:restriction>
    </xsd:simpleType>
  </xsd:element>
  <xsd:element name="NVA" type="xsd:date">
    <xsd:annotation>
      <xsd:documentation>Identifies "not valid after" date for a fare.Date in ISO 8601 format (yyyy-mm-dd).  Example: 2001-12-25</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="NVB" type="xsd:date">
    <xsd:annotation>
      <xsd:documentation>Identifies "not valid before" date for a fare. Date in ISO 8601 format (yyyy-mm-dd).  Example: 2001-12-25</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="POIDistance">
    <xsd:annotation>
      <xsd:documentation>Distance to a point of interest. Will somewhen replace DistanceToAirport. Example: 5.5</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:simpleContent>
        <xsd:extension base="xsd:decimal">
          <xsd:attribute name="POIType" use="required">
            <xsd:annotation>
              <xsd:documentation>Point of interest type. Example: AIRPORT</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
              <xsd:restriction base="xsd:string">
                <xsd:enumeration value="AIRPORT" />
                <xsd:enumeration value="TRAIN STATION" />
                <xsd:enumeration value="CITY CENTER" />
                <xsd:enumeration value="HIGHWAY" />
                <xsd:enumeration value="SHOPPING" />
                <xsd:enumeration value="PETROL STATION" />
                <xsd:enumeration value="THEATER" />
                <xsd:enumeration value="CINEMA" />
                <xsd:enumeration value="CAR RENTAL STATION" />
                <xsd:enumeration value="UNKNOWN" />
                <xsd:enumeration value="LOCATION" />
              </xsd:restriction>
            </xsd:simpleType>
          </xsd:attribute>
          <xsd:attribute name="POIName" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>Point of interest name.
Example: FRANKFURT/MAIN </xsd:documentation>
            </xsd:annotation>
          </xsd:attribute>
        </xsd:extension>
      </xsd:simpleContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="PriceRefKey">
    <xsd:annotation>
      <xsd:documentation>Unique price reference key. Key must be included in request message if present in previous offer (response) message, </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleType>
      <xsd:restriction base="xsd:string">
        <xsd:minLength value="1" />
      </xsd:restriction>
    </xsd:simpleType>
  </xsd:element>
  <xsd:element name="ReferenceData">
    <xsd:annotation>
      <xsd:documentation>Displays generic refence data such as aiport code, GEO coordinates, names, car, hotel other.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="Airport">
          <xsd:annotation>
            <xsd:documentation>Aiport code and associated GEO coordinates (latitude and longitude).</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:attribute name="Code" use="required">
              <xsd:annotation>
                <xsd:documentation>IATA 3-letter airport code.
Example: MIA</xsd:documentation>
              </xsd:annotation>
              <xsd:simpleType>
                <xsd:restriction base="xsd:string">
                  <xsd:length value="3" />
                </xsd:restriction>
              </xsd:simpleType>
            </xsd:attribute>
            <xsd:attribute name="Long" type="xsd:double" use="required">
              <xsd:annotation>
                <xsd:documentation>Longitude.
Example: -80.277922</xsd:documentation>
              </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="Lat" type="xsd:double" use="required">
              <xsd:annotation>
                <xsd:documentation>Latitude.
Example: 25.795343</xsd:documentation>
              </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="Name" type="xsd:string">
              <xsd:annotation>
                <xsd:documentation>Airport name</xsd:documentation>
              </xsd:annotation>
            </xsd:attribute>
          </xsd:complexType>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="ReferenceDefinitions">
    <xsd:annotation>
      <xsd:documentation>PNR element association information.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" maxOccurs="unbounded" name="TravelerRefInfo">
          <xsd:complexType>
            <xsd:sequence>
              <xsd:element ref="Surname" />
              <xsd:element ref="GivenName" />
              <xsd:element minOccurs="0" ref="Initial" />
              <xsd:element minOccurs="0" ref="DateOfBirth" />
              <xsd:element minOccurs="0" ref="Gender" />
            </xsd:sequence>
            <xsd:attribute name="PaxType" type="xsd:string" />
            <xsd:attribute name="AssociationID" type="xsd:string" />
          </xsd:complexType>
        </xsd:element>
        <xsd:element minOccurs="0" maxOccurs="unbounded" name="FlightRefInfo">
          <xsd:complexType>
            <xsd:sequence>
              <xsd:element ref="AirlineCode" />
              <xsd:element ref="FlightNumber" />
              <xsd:element ref="Departure" />
              <xsd:element ref="Arrival" />
              <xsd:element ref="ClassOfService" />
            </xsd:sequence>
            <xsd:attribute name="AssociationID" type="xsd:string" />
          </xsd:complexType>
        </xsd:element>
        <xsd:element minOccurs="0" maxOccurs="unbounded" name="ServiceRefInfo">
          <xsd:complexType>
            <xsd:sequence>
              <xsd:element name="ReasonCode" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>IATA RFIC (ReasonFor IssuanceCode, a 1-character main code)
Example of RFIC: A  

Note: Only services of same RFIC code can be combined on an EMD-A document.  For example, if there are services of RFIC code "A" and "B", two separate EMD documents are needed, issuing all services of "A" and "B" on seperate docs.</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element name="SubCode" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>ATPCO RFIS (ReasonForIssuance  Subcode).
Example of RFIS: 0CC </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element ref="TravelerIDRef" />
              <xsd:element minOccurs="0" maxOccurs="unbounded" ref="SegmentIDRef" />
            </xsd:sequence>
            <xsd:attribute name="AssociationID" type="xsd:string" />
          </xsd:complexType>
        </xsd:element>
        <xsd:element minOccurs="0" maxOccurs="unbounded" name="FareRefInfo">
          <xsd:complexType>
            <xsd:sequence>
              <xsd:element maxOccurs="unbounded" name="TravelerGroup">
                <xsd:complexType>
                  <xsd:sequence>
                    <xsd:element name="TypePriced" type="xsd:string">
                      <xsd:annotation>
                        <xsd:documentation>Passenger type being priced. This type can be different from the type requested if there is no available fare for the requested type.  For example the requested type is GOV and the priced type is ADT because there is no available fare for type GOV and there is an available fare for type ADT.  If the passenger type sent by the GDS is not the below predefined list, then it is shown as is.  Predefined values are:
ADT= Adult
CHD = Child
INF = Infant
GOV = Government
MIL = Military
SRC = Senior citizen
STD = Student
YTH = Youth
Example: ADT</xsd:documentation>
                      </xsd:annotation>
                    </xsd:element>
                    <xsd:element maxOccurs="unbounded" ref="TravelerIDRef" />
                    <xsd:element name="FareCalculation">
                      <xsd:annotation>
                        <xsd:documentation>FareCalculation Line</xsd:documentation>
                      </xsd:annotation>
                      <xsd:simpleType>
                        <xsd:restriction base="xsd:string">
                          <xsd:minLength value="1" />
                        </xsd:restriction>
                      </xsd:simpleType>
                    </xsd:element>
                  </xsd:sequence>
                </xsd:complexType>
              </xsd:element>
            </xsd:sequence>
            <xsd:attribute name="AssociationID" type="xsd:string" />
          </xsd:complexType>
        </xsd:element>
        <xsd:element minOccurs="0" maxOccurs="unbounded" name="SeatRefInfo">
          <xsd:complexType>
            <xsd:sequence>
              <xsd:element ref="TravelerIDRef" />
              <xsd:element ref="SegmentIDRef" />
              <xsd:element name="SeatLocation" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>Seat assignment location.  Example: 03A</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
            </xsd:sequence>
            <xsd:attribute name="AssociationID" type="xsd:string" />
          </xsd:complexType>
        </xsd:element>
        <xsd:element minOccurs="0" maxOccurs="unbounded" name="ChangeRefInfo">
          <xsd:complexType>
            <xsd:sequence>
              <xsd:element minOccurs="0" ref="TravelerIDRef" />
              <xsd:element minOccurs="0" ref="SegmentIDRef" />
              <xsd:element minOccurs="0" name="ServiceIDRef">
                <xsd:annotation>
                  <xsd:documentation>ID reference used to associate this item to a service. No comma separated lists and no ranges supported. Example: S1</xsd:documentation>
                </xsd:annotation>
                <xsd:complexType>
                  <xsd:attributeGroup ref="RefType" />
                </xsd:complexType>
              </xsd:element>
              <xsd:element minOccurs="0" name="FFNumber" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>Frequent flyer number.  Example: 0956301007</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" maxOccurs="unbounded" name="FOPOther">
                <xsd:annotation>
                  <xsd:documentation>"Other" FOP such as Check, Cash etc</xsd:documentation>
                </xsd:annotation>
                <xsd:complexType>
                  <xsd:simpleContent>
                    <xsd:extension base="xsd:string" />
                  </xsd:simpleContent>
                </xsd:complexType>
              </xsd:element>
              <xsd:element minOccurs="0" name="CCNumber" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>Credit card number.  Example: 4011236654652341

Can be returned encrypted.
Example: XXXXXXXXXXXX2341</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" name="Email" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>Seat assignment location.  Example: 03A</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" name="TelephoneNumber" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>Seat assignment location.  Example: 03A</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" ref="Text" />
              <xsd:element minOccurs="0" name="SSRCode" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>Special service request code.  IATA standard.  Example: VGML</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" name="TktDate" type="xsd:date">
                <xsd:annotation>
                  <xsd:documentation>Ticketing date </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" name="TktTime" type="xsd:time">
                <xsd:annotation>
                  <xsd:documentation>TicketingTime</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" name="Address" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>Address</xsd:documentation>
                  <xsd:documentation>Address type.  Example: HOME</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" name="CLIDNumber">
                <xsd:annotation>
                  <xsd:documentation>CorporateID. Example: C900395168859</xsd:documentation>
                </xsd:annotation>
                <xsd:simpleType>
                  <xsd:restriction base="xsd:string">
                    <xsd:maxLength value="50" />
                    <xsd:minLength value="1" />
                  </xsd:restriction>
                </xsd:simpleType>
              </xsd:element>
              <xsd:element minOccurs="0" name="CLIDStatus" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>CLID level for this member as provided by airline's database.</xsd:documentation>
                  <xsd:appinfo>
                    <title xmlns="">Schematron Release Notes</title>
                    <change version="2.0" change="V2-Child elements should have defined types." changeDetail="Element typed as xsd:string" xmlns="" />
                  </xsd:appinfo>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" name="CLIDCompanyCode">
                <xsd:annotation>
                  <xsd:documentation source="description" xml:lang="en">Airline code of the program/ membership sponsoring airline.</xsd:documentation>
                </xsd:annotation>
                <xsd:complexType>
                  <xsd:simpleContent>
                    <xsd:extension base="xsd:string" />
                  </xsd:simpleContent>
                </xsd:complexType>
              </xsd:element>
              <xsd:element minOccurs="0" name="CLIDCompanyName">
                <xsd:annotation>
                  <xsd:documentation source="description" xml:lang="en">Name of the program/ membership sponsoring airline.</xsd:documentation>
                </xsd:annotation>
                <xsd:complexType>
                  <xsd:simpleContent>
                    <xsd:extension base="xsd:string" />
                  </xsd:simpleContent>
                </xsd:complexType>
              </xsd:element>
            </xsd:sequence>
            <xsd:attribute name="AssociationID" type="xsd:string" />
          </xsd:complexType>
        </xsd:element>
        <xsd:element minOccurs="0" maxOccurs="unbounded" name="DeleteOtherRefInfo">
          <xsd:complexType>
            <xsd:sequence>
              <xsd:element minOccurs="0" ref="TravelerIDRef" />
              <xsd:element minOccurs="0" ref="SegmentIDRef" />
              <xsd:element minOccurs="0" name="ServiceIDRef">
                <xsd:annotation>
                  <xsd:documentation>ID reference used to associate this item to a service. No comma separated lists and no ranges supported. Example: S1</xsd:documentation>
                </xsd:annotation>
                <xsd:complexType>
                  <xsd:attributeGroup ref="RefType" />
                </xsd:complexType>
              </xsd:element>
              <xsd:element minOccurs="0" name="FFNumber" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>Frequent flyer number.  Example: 0956301007</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" maxOccurs="unbounded" name="FOPOther">
                <xsd:annotation>
                  <xsd:documentation>Form of payment other than credit card</xsd:documentation>
                </xsd:annotation>
                <xsd:complexType>
                  <xsd:simpleContent>
                    <xsd:extension base="xsd:string" />
                  </xsd:simpleContent>
                </xsd:complexType>
              </xsd:element>
              <xsd:element minOccurs="0" name="CCNumber" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>Credit card number.  Example: 4011236654652341

Can be returned encrypted.
Example: XXXXXXXXXXXX2341</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" name="Email" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>Seat assignment location.  Example: 03A</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" name="TelephoneNumber" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>Seat assignment location.  Example: 03A</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" ref="Text" />
              <xsd:element minOccurs="0" name="SSRCode" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>Special service request code.  IATA standard.  Example: VGML</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" name="OSICode" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>Conventional code (AIRIMP code) for other service information. Recommended to use when sending OSI to airline. Example: CTCA</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" name="ServiceTrxRefKey" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>Data binding reference key created for each supported PNR element such as "Services".

Generate standard 36 character GUID (example 540c2d5f-a9ab-4414-bd36-9999f5388773) and convert to base64 (example Xy0MVKupFES9NpmZ9TiHcw).  Result is unique 22 character key.</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" name="TktDate" type="xsd:date">
                <xsd:annotation>
                  <xsd:documentation>Ticketing date </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" name="TktTime" type="xsd:time">
                <xsd:annotation>
                  <xsd:documentation>TicketingTime</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" name="Address" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>Address</xsd:documentation>
                  <xsd:documentation>Address type.  Example: HOME</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" name="CLIDNumber">
                <xsd:annotation>
                  <xsd:documentation>CorporateID. Example: C900395168859</xsd:documentation>
                </xsd:annotation>
                <xsd:simpleType>
                  <xsd:restriction base="xsd:string">
                    <xsd:length value="50" />
                  </xsd:restriction>
                </xsd:simpleType>
              </xsd:element>
              <xsd:element minOccurs="0" name="CLIDStatus" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>CLID level for this member as provided by airline's database.</xsd:documentation>
                  <xsd:appinfo>
                    <title xmlns="">Schematron Release Notes</title>
                    <change version="2.0" change="V2-Child elements should have defined types." changeDetail="Element typed as xsd:string" xmlns="" />
                  </xsd:appinfo>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" name="CLIDCompanyCode">
                <xsd:annotation>
                  <xsd:documentation source="description" xml:lang="en">Airline code of the program/ membership sponsoring airline.</xsd:documentation>
                </xsd:annotation>
                <xsd:complexType>
                  <xsd:simpleContent>
                    <xsd:extension base="xsd:string" />
                  </xsd:simpleContent>
                </xsd:complexType>
              </xsd:element>
              <xsd:element minOccurs="0" name="CLIDCompanyName">
                <xsd:annotation>
                  <xsd:documentation source="description" xml:lang="en">Name of the program/ membership sponsoring airline.</xsd:documentation>
                </xsd:annotation>
                <xsd:complexType>
                  <xsd:simpleContent>
                    <xsd:extension base="xsd:string" />
                  </xsd:simpleContent>
                </xsd:complexType>
              </xsd:element>
            </xsd:sequence>
            <xsd:attribute name="AssociationID" type="xsd:string" />
          </xsd:complexType>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="ReservationsDateTime">
    <xsd:annotation>
      <xsd:documentation>Date/time when the entire booking was reserved.  Alternatively this date/time may be set independently for each flight - see ReservationsDateTime element in the Flight element of the OriginDestination element(s).</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:choice>
        <xsd:sequence>
          <xsd:element name="Date" type="Date">
            <xsd:annotation>
              <xsd:documentation>Specifies date in ISO 8601 format (yyyy-mm-dd). Example: 2001-12-25</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="Time" type="Time">
            <xsd:annotation>
              <xsd:documentation>Specifies time in ISO 8601 twenty-four hour clock format. Example: 14:00</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
        <xsd:element name="TimeStamp" type="xsd:dateTime">
          <xsd:annotation>
            <xsd:documentation source="DESCRIPTION" xml:lang="en">Full timestamp.
Example: 2013-01-13T13:20:00</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:choice>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="Response">
    <xsd:annotation>
      <xsd:documentation>Custom response to each control sent to the GUI in the "CustomRequest" request.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" maxOccurs="unbounded" name="Value" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Value(s) entered or selected by the user.

The value(s) are always the "GUILabel(s)" as selected.

In case of a textbox or combobox entry it is the value entered by the user.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
      <xsd:attribute name="PNRLabel" type="xsd:string" use="required">
        <xsd:annotation>
          <xsd:documentation>Description to be used to enter the returned value into a PNR General Remark element. Value is passed thru from the request - if provided.

This label can be used by the DM rule or the DC adaptor to create a PNR remark storing the returned value.  If e.g. the value here is "ProjectID" then a remark may be added to the PNR like this:

"ProjectID: 105514"</xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="S5">
    <xsd:annotation>
      <xsd:documentation>Shows ATPCO record S5 diagnostic infromation </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:attribute name="uid" type="xsd:integer" />
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="S7">
    <xsd:annotation>
      <xsd:documentation>Shows ATPCO record S7 diagnostic infromation </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:attribute name="uid" type="xsd:integer" />
      <xsd:attribute name="seq" type="xsd:integer">
        <xsd:annotation>
          <xsd:documentation>ATPCO table seq number </xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="excess_first" type="xsd:integer">
        <xsd:annotation>
          <xsd:documentation>represent the first occurrence of the excess bag.</xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="excess_last" type="xsd:integer">
        <xsd:annotation>
          <xsd:documentation>represent the last occurrence of the excess bag.</xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="SaleInfo">
    <xsd:annotation>
      <xsd:documentation>Point of Sale information</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" ref="CityCode">
          <xsd:annotation>
            <xsd:documentation>Point of Sale City Code 
Example: BOS</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" ref="CountryCode">
          <xsd:annotation>
            <xsd:documentation>Point of Sale Country Code 
Example: US</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="CurrencyCode">
          <xsd:annotation>
            <xsd:documentation>Point of Sale Currency Code
Example: USD</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:simpleContent>
              <xsd:restriction base="CurrencyCodeType">
                <xsd:pattern value="[A-Z0-9]{3}" />
                <xsd:attribute name="NumberOfDecimals" type="xsd:integer" use="prohibited">
                  <xsd:annotation>
                    <xsd:documentation>Decimal position in fare amount.  Example: 2</xsd:documentation>
                  </xsd:annotation>
                </xsd:attribute>
              </xsd:restriction>
            </xsd:simpleContent>
          </xsd:complexType>
        </xsd:element>
        <xsd:element minOccurs="0" ref="Identification" />
        <xsd:element minOccurs="0" name="Channel" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Describes the channel through which the request is made. E.g. "WEB"</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="SegmentIDRef">
    <xsd:annotation>
      <xsd:documentation>ID reference used to associate this item to a segment. No comma separated lists and no ranges supported. Example: F1</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:simpleContent>
        <xsd:extension base="xsd:string">
          <xsd:attributeGroup ref="ONPoint" />
          <xsd:attributeGroup ref="OFFPoint" />
          <xsd:attributeGroup ref="RefType" />
        </xsd:extension>
      </xsd:simpleContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="SourceStdAttributes" type="SourceStdAttributes">
    <xsd:annotation>
      <xsd:documentation>Source Aggregation Information. </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="Surname" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>Traveler family (last) name.  Example: SMITH</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="Terminal" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>Airport terminal.  Example: 2B</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="Text" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>Information text or error text. Example: Free flow text.  </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="Time">
    <xsd:annotation>
      <xsd:documentation>Time in ISO 8601 format (hh:mm).  Example: 14:30</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleType>
      <xsd:restriction base="xsd:string" />
    </xsd:simpleType>
  </xsd:element>
  <xsd:element name="TravelerIDRef">
    <xsd:annotation>
      <xsd:documentation>Unique association ID reference of the traveler associated to this item. No comma separated lists and no ranges allowed.        Example: T1</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:simpleContent>
        <xsd:extension base="xsd:string">
          <xsd:attributeGroup ref="RefType" />
        </xsd:extension>
      </xsd:simpleContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="ValidatingCarrier">
    <xsd:annotation>
      <xsd:documentation>The 2-character airline code of the carrier validating this Ticket/Document.</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleType>
      <xsd:restriction base="xsd:string">
        <xsd:length value="2" />
      </xsd:restriction>
    </xsd:simpleType>
  </xsd:element>
  <xsd:element name="PNRCreateRQ">
    <xsd:annotation>
      <xsd:documentation>PNR create request root element</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" ref="SaleInfo" />
        <xsd:element minOccurs="0" ref="TicketingInfo" />
        <xsd:element minOccurs="0" ref="MoveFromProfile" />
        <xsd:element minOccurs="0" ref="CompletePNRElements" />
        <xsd:element minOccurs="0" ref="OtherPNRElements" />
        <xsd:element minOccurs="0" maxOccurs="unbounded" ref="PricingInfo" />
        <xsd:element minOccurs="0" maxOccurs="unbounded" name="TicketInfo">
          <xsd:annotation>
            <xsd:documentation>Allows for association of external ticket numbers to segments and passengers in PNR along with commission used for ticket. This node can only be used if the PNR has a GDS recordlocator, the PNR is ticketed through the GDS of record and an SSR TKNE is created in the same PNRCreateRQ message as this node.</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:sequence>
              <xsd:element ref="TicketNumber" />
              <xsd:element name="TicketSource">
                <xsd:annotation>
                  <xsd:documentation>Source - GDS/CRS - that was used to drive the ticket.</xsd:documentation>
                </xsd:annotation>
                <xsd:simpleType>
                  <xsd:restriction base="xsd:string">
                    <xsd:minLength value="1" />
                  </xsd:restriction>
                </xsd:simpleType>
              </xsd:element>
              <xsd:element minOccurs="0" name="Commission">
                <xsd:annotation>
                  <xsd:documentation>Commission that was used while issuing the ticket.</xsd:documentation>
                </xsd:annotation>
                <xsd:complexType>
                  <xsd:attribute name="Type">
                    <xsd:annotation>
                      <xsd:documentation>Idetifies type of the commission: P-per cent, A- amount.
Example; A</xsd:documentation>
                    </xsd:annotation>
                    <xsd:simpleType>
                      <xsd:restriction base="xsd:string">
                        <xsd:enumeration value="P" />
                        <xsd:enumeration value="A" />
                      </xsd:restriction>
                    </xsd:simpleType>
                  </xsd:attribute>
                  <xsd:attribute name="NumberOfDecimals" type="xsd:integer">
                    <xsd:annotation>
                      <xsd:documentation>Number of digits after the decimal point. Positive integer or 0. </xsd:documentation>
                    </xsd:annotation>
                  </xsd:attribute>
                </xsd:complexType>
              </xsd:element>
              <xsd:element ref="TravelerElementNumber" />
              <xsd:element maxOccurs="unbounded" name="FlightReferences">
                <xsd:annotation>
                  <xsd:documentation>Flight element associated to this item</xsd:documentation>
                </xsd:annotation>
                <xsd:complexType>
                  <xsd:sequence>
                    <xsd:element ref="AirlineCode" />
                    <xsd:element ref="FlightNumber" />
                    <xsd:element ref="ClassOfService" />
                    <xsd:element ref="Date">
                      <xsd:annotation>
                        <xsd:documentation>DEPARTURE Date in ISO 8601 format (yyyy-mm-dd).  Example: 2001-12-25</xsd:documentation>
                      </xsd:annotation>
                    </xsd:element>
                    <xsd:element ref="Time">
                      <xsd:annotation>
                        <xsd:documentation>DEPARTURE Time in ISO 8601 format (hh:mm).  
Example: 14:00</xsd:documentation>
                      </xsd:annotation>
                    </xsd:element>
                    <xsd:element ref="DepartureCode" />
                    <xsd:element ref="ArrivalCode" />
                  </xsd:sequence>
                  <xsd:attribute name="BookingDate" use="required">
                    <xsd:annotation>
                      <xsd:documentation>ISO format: yyyy-mm-dd</xsd:documentation>
                    </xsd:annotation>
                  </xsd:attribute>
                  <xsd:attribute name="BookingTime" type="xsd:string" use="required">
                    <xsd:annotation>
                      <xsd:documentation>ISO format: hh:mm:ss.sssZ</xsd:documentation>
                    </xsd:annotation>
                  </xsd:attribute>
                  <xsd:attribute name="TicketNumber">
                    <xsd:annotation>
                      <xsd:documentation>The actual ticket number.  In a conjunctive set this must be the respective number within the set.

Needed in order to know to which ticket in a ticket set the coupon number belongs - as the range of coupon numbers is always 1-4 and is repeated for each ticket in a conjunctive set</xsd:documentation>
                    </xsd:annotation>
                  </xsd:attribute>
                  <xsd:attribute name="Coupon">
                    <xsd:annotation>
                      <xsd:documentation>The Ticket coupon number for this flight (segment)</xsd:documentation>
                    </xsd:annotation>
                  </xsd:attribute>
                </xsd:complexType>
              </xsd:element>
              <xsd:element minOccurs="0" maxOccurs="unbounded" name="SegmentElementNumber">
                <xsd:annotation>
                  <xsd:documentation>Deprecated node (Use "FlightReferences" instead) Tobe removed in future version

Segment element number associated to this item.  Example: 1</xsd:documentation>
                </xsd:annotation>
                <xsd:complexType>
                  <xsd:simpleContent>
                    <xsd:extension base="xsd:integer">
                      <xsd:attribute name="TicketNumber">
                        <xsd:annotation>
                          <xsd:documentation>The actual ticket number.  In a conjunctive set this must be the respective number within the set.

Needed in order to know to which ticket in a ticket set the coupon number belongs - as the range of coupon numbers is always 1-4 and is repeated for each ticket in a conjunctive set</xsd:documentation>
                        </xsd:annotation>
                      </xsd:attribute>
                      <xsd:attribute name="Coupon">
                        <xsd:annotation>
                          <xsd:documentation>The Ticket coupon number for this flight (segment)</xsd:documentation>
                        </xsd:annotation>
                      </xsd:attribute>
                      <xsd:attributeGroup ref="RefType" />
                    </xsd:extension>
                  </xsd:simpleContent>
                </xsd:complexType>
              </xsd:element>
            </xsd:sequence>
            <xsd:attributeGroup ref="sourceMandatory" />
            <xsd:attribute name="NameDiscrepancy">
              <xsd:annotation>
                <xsd:documentation>Only acceptable value is "Y".  This is set by backend system when the name in the PNR gets changed and a ticket was previously issued using the original name.</xsd:documentation>
              </xsd:annotation>
            </xsd:attribute>
          </xsd:complexType>
        </xsd:element>
        <xsd:element minOccurs="0" ref="Display" />
        <xsd:element minOccurs="0" ref="EndTransaction" />
        <xsd:element minOccurs="0" ref="RecordLocator">
          <xsd:annotation>
            <xsd:documentation>Record locator reference of the PNR to create elements on if not a new PNR.  Example: XDFWES.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" ref="InExchangeForTicket" />
        <xsd:element minOccurs="0" maxOccurs="unbounded" name="CustomData">
          <xsd:annotation>
            <xsd:documentation>Custom Data element.</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:complexContent mixed="false">
              <xsd:extension base="xsd:anyType">
                <xsd:attribute name="ActionType" use="required">
                  <xsd:annotation>
                    <xsd:documentation>Identifies if element is to be added or deleted to/from the specified PNR

Valid Values:
"Add"
"Delete"</xsd:documentation>
                  </xsd:annotation>
                  <xsd:simpleType>
                    <xsd:restriction base="xsd:string">
                      <xsd:enumeration value="Add" />
                      <xsd:enumeration value="Delete" />
                    </xsd:restriction>
                  </xsd:simpleType>
                </xsd:attribute>
                <xsd:attributeGroup ref="sourceOptional" />
              </xsd:extension>
            </xsd:complexContent>
          </xsd:complexType>
        </xsd:element>
        <xsd:element minOccurs="0" ref="ReferenceDefinitions" />
      </xsd:sequence>
      <xsd:attributeGroup ref="PayloadStdAttributes" />
      <xsd:attribute name="RedisplayPNR" use="optional">
        <xsd:annotation>
          <xsd:documentation>Attribute used when the PNR Creation is done during a sessioned process. Indicates if the PNR has to be redisplayed after each message sent during an opened session. If attribute omitted or RedisplayPNR = "Y", PNR will be redisplayed with each response. If RedisplayPNR = "N", the PNR will not be redisplayed after each entry and a simple Info text with an * in it will indicate the successfull entry. Error message will be displayed if an error occurs for the entry.</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:length value="1" />
            <xsd:enumeration value="N" />
            <xsd:enumeration value="Y" />
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:attribute>
      <xsd:attribute default="Y" name="UpdateFareGroups" use="optional">
        <xsd:annotation>
          <xsd:documentation>Switch to disable fare validation and update functionality. This includes deletion of fares with invalid segment references (occurs on Apollo, Sabre and Worldspan) and (in the future) attempt to reprice and restore fares which have been rendered invalid by segment reordering. Values are: Y = Yes, N = No (Default is Yes). Example: Y</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:length value="1" />
            <xsd:enumeration value="Y" />
            <xsd:enumeration value="N" />
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:attribute>
      <xsd:attribute name="IgnoreWarning">
        <xsd:annotation>
          <xsd:documentation>This attribute is set in response to a previously returned Warning and after the user confirm the continuation of said transaction.

Only value allowed is 'Y'.</xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="version" type="xsd:string" use="optional">
        <xsd:annotation>
          <xsd:documentation>=WARNINGS=
This property will be DEPRECATED as of March 31, 2014.
It has been left in the specification for backwards compatibility only.
Instead use the @Version.

Version number.  Example: 1.0</xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="Account">
    <xsd:annotation>
      <xsd:documentation>Specifies the corporate account number to use to price private fares.  Example: 000243</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:simpleContent>
        <xsd:extension base="xsd:string" />
      </xsd:simpleContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="AccountingLine">
    <xsd:annotation>
      <xsd:documentation>Accounting line information</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element ref="SegmentIDRef" />
        <xsd:element ref="VendorText" />
        <xsd:element ref="ChargeCode" />
        <xsd:element minOccurs="0" ref="ReceiptNumber" />
        <xsd:element ref="Commission" />
        <xsd:element ref="BaseAmount" />
        <xsd:element ref="TaxAmount" />
        <xsd:element minOccurs="0" ref="TaxSurcharge" />
        <xsd:element ref="FareApplication" />
        <xsd:element ref="Payment" />
        <xsd:element ref="NumberOfDocuments" />
        <xsd:element minOccurs="0" ref="Text" />
      </xsd:sequence>
      <xsd:attribute fixed="OTH" name="Type" use="required">
        <xsd:annotation>
          <xsd:documentation>Accounting line type.  It can either be a supplier name or a vendor code or a number or segment type.  Today it's value is fixed and can be only OTH, which means we only support OTH type accounting line.  Example: OTH</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:minLength value="3" />
            <xsd:maxLength value="3" />
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:attribute>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="ActionCode">
    <xsd:annotation>
      <xsd:documentation>Action code for the sell of a segment.  This a standard defined action code used by different airlines and reservation systems.  If omitted the default value is NN.  Example: GK</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleType>
      <xsd:restriction base="xsd:string">
        <xsd:minLength value="2" />
        <xsd:maxLength value="2" />
      </xsd:restriction>
    </xsd:simpleType>
  </xsd:element>
  <xsd:element name="AdditionalInformation" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>Optional additional information.  Example: Traveler on wheelchair</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="Address">
    <xsd:annotation>
      <xsd:documentation>Street or PO Box address.  Example: 1234 Main Street</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:simpleContent>
        <xsd:extension base="xsd:string" />
      </xsd:simpleContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="AddressGroup">
    <xsd:annotation>
      <xsd:documentation>Address group</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" maxOccurs="unbounded" ref="TravelerIDRef" />
        <xsd:element minOccurs="0" maxOccurs="unbounded" ref="SegmentIDRef" />
        <xsd:element minOccurs="0" ref="ServiceIDRef" />
        <xsd:element minOccurs="0" name="OptionalCompanyName" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Addressee's if the addressee as an organisation.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" ref="OptionalName" />
        <xsd:element maxOccurs="2" ref="Address" />
        <xsd:element ref="City" />
        <xsd:element ref="PostalCode" />
        <xsd:element minOccurs="0" ref="StateCode" />
        <xsd:element ref="Country" />
        <xsd:element ref="CountryCode">
          <xsd:annotation>
            <xsd:documentation>ISO Country code. This element is introduced as mandatory although GDS implementation will not require its presence until 30MAR2008.

Example: US</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="StreetNumber" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation source="DESCRIPTION" xml:lang="en">Street number (if not included in Address lines.)
Example: 100</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
      <xsd:attribute name="Use" use="optional">
        <xsd:annotation>
          <xsd:documentation>Indicates use of address information.  Values are:
B = Billing
D = Delivery
A = Agency address (Sabre)
H = Mailing home address (Amadeus)
O = Mailing miscellaneous address (Amadeus)
M = Mailing address (Amadeus)

As you can see B and D are supported by all GDS. See for GDS specific address types above.

Example: D</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:length value="1" />
            <xsd:enumeration value="B" />
            <xsd:enumeration value="D" />
            <xsd:enumeration value="A" />
            <xsd:enumeration value="H" />
            <xsd:enumeration value="O" />
            <xsd:enumeration value="M" />
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:attribute>
      <xsd:attribute name="SplitItems" use="optional">
        <xsd:annotation>
          <xsd:documentation>Indicates if the address elements should be split in the reservation system across multiple lines (entries). Possible values are: 
Y = split entries
N = do not split and keep all elements into one entry
Example: N</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:minLength value="1" />
            <xsd:maxLength value="1" />
            <xsd:enumeration value="Y" />
            <xsd:enumeration value="N" />
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:attribute>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="Age" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>Traveler age.  Age is not supported in Galileo.  Example: 01</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="AgencyProfile" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>Agency profile.  Example: A Tours</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="AgencyType" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>Agency predefined pricing type code.  Example: LMG</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="Agent" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>Agent code.  Example: TT</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="AirTaxiSegment">
    <xsd:annotation>
      <xsd:documentation>Air taxi segment group</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" maxOccurs="8" ref="TravelerIDRef" />
        <xsd:element ref="VendorCode" />
        <xsd:element ref="ServiceDate" />
        <xsd:element ref="OriginCityCode" />
        <xsd:element ref="DestinationCityCode" />
        <xsd:element ref="ActionCode" />
        <xsd:element ref="NumberInParty" />
        <xsd:element minOccurs="0" maxOccurs="unbounded" ref="Text" />
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="Amount" type="xsd:integer">
    <xsd:annotation>
      <xsd:documentation>Monetary amount.  This is the real amount without the decimal point.  An amount of 10000 means 100.00 Example:  100     </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="ApprovalCode">
    <xsd:annotation>
      <xsd:documentation>Credit card approval code.  Example: 996456</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleType>
      <xsd:restriction base="xsd:string">
        <xsd:minLength value="5" />
        <xsd:pattern value="([a-zA-Z0-9])* " />
      </xsd:restriction>
    </xsd:simpleType>
  </xsd:element>
  <xsd:element name="ArrivalCode" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>Arrival airport or city code.  Example: NYC</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="ArrivalPoint" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>Arrival point.  Example: Terminal 3</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="ArrivalTime">
    <xsd:annotation>
      <xsd:documentation>Arrival time in ISO 8601 format (hh:mm).  Example: 14:30</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleType>
      <xsd:restriction base="xsd:string">
        <xsd:pattern value="([0-1][0-9]|2[0-4]):[0-5][0-9]">
          <xsd:annotation>
            <xsd:documentation />
          </xsd:annotation>
        </xsd:pattern>
      </xsd:restriction>
    </xsd:simpleType>
  </xsd:element>
  <xsd:element name="Assignment">
    <xsd:annotation>
      <xsd:documentation>Assignment group</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" ref="TravelerIDRef" />
        <xsd:choice>
          <xsd:element ref="SeatLocation" />
          <xsd:element ref="Characteristic" />
        </xsd:choice>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="AssociationCode" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>Code for organization or association.  Example: AARP, AAA</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="Attributes">
    <xsd:annotation>
      <xsd:documentation>ATPCO S5 record attributes</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="Group">
          <xsd:annotation>
            <xsd:documentation>Samples:
BG = Baggage
FF = Frequent Flyer
GT = Ground Transportation
         and Non Air Services
IE = In-flight entertainment
LG = Lounge
MD = Medical
ML = Meal/Beverage
PT = Pets
RO = Rule Override
SA = Prereserved Seat
         Assignment
SB = Standby
ST = Store
TS = Travel Services
UN = Unaccompanied
         Travel (Escort)
UP = Upgrades</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:sequence>
              <xsd:element name="Code" type="xsd:string" />
              <xsd:element minOccurs="0" name="Text" type="xsd:string" />
            </xsd:sequence>
          </xsd:complexType>
        </xsd:element>
        <xsd:element minOccurs="0" name="SubGroup">
          <xsd:annotation>
            <xsd:documentation>Samples for group "BG"
CT = Container
PP = Pre-paid excess
         baggage

Samples group "GT"
BU = Bus
LI = Limo, etc

Samples group "IE"
IT = Internet access
TV = Television, etc</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:sequence>
              <xsd:element name="Code" type="xsd:string" />
              <xsd:element minOccurs="0" name="Text" type="xsd:string" />
            </xsd:sequence>
          </xsd:complexType>
        </xsd:element>
        <xsd:element minOccurs="0" name="Desc1">
          <xsd:annotation>
            <xsd:documentation>Description codes.
Examples:
05 = up to 5 kg
1Y = One Year
AI = Aisle
B1 = First Bag
etc.</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:sequence>
              <xsd:element name="Code" type="xsd:string" />
              <xsd:element minOccurs="0" name="Text" type="xsd:string" />
            </xsd:sequence>
          </xsd:complexType>
        </xsd:element>
        <xsd:element minOccurs="0" name="Desc2">
          <xsd:annotation>
            <xsd:documentation>Description codes.
Examples:
HT = Hot
KO = Kosher
etc.</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:sequence>
              <xsd:element name="Code" type="xsd:string" />
              <xsd:element minOccurs="0" name="Text" type="xsd:string" />
            </xsd:sequence>
          </xsd:complexType>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="Authorization">
    <xsd:annotation>
      <xsd:documentation>Credit card authorization group</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element ref="Amount" />
        <xsd:element ref="AirlineCode" />
      </xsd:sequence>
      <xsd:attribute name="Type" use="required">
        <xsd:annotation>
          <xsd:documentation>Credit card authorization type. Values are: A = authorize card only
S = aythorize card and store approval code in the PNR  D = verify the address associated with this credit card and store the verification status in PNR. If no address associated - erro message will be returned. Example: A</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:length value="1" />
            <xsd:enumeration value="A" />
            <xsd:enumeration value="S" />
            <xsd:enumeration value="D" />
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:attribute>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="AuthorizationNumber" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>Authorization number.  Usually it is a phone or a fax number.  Example: 305-269-6975</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="BaseAmount">
    <xsd:annotation>
      <xsd:documentation>Base fare amount.  Example: 120.00</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:simpleContent>
        <xsd:extension base="xsd:string">
          <xsd:attribute name="Type" use="required">
            <xsd:annotation>
              <xsd:documentation>Commission type.  Values are: P = Percent, A = Amount  Example: A</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
              <xsd:restriction base="xsd:string">
                <xsd:minLength value="1" />
                <xsd:maxLength value="1" />
                <xsd:enumeration value="P" />
                <xsd:enumeration value="A" />
              </xsd:restriction>
            </xsd:simpleType>
          </xsd:attribute>
        </xsd:extension>
      </xsd:simpleContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="Beneficiary" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>Benefiaciary information.  Example: JOE</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="BillingAndDeliveryData">
    <xsd:annotation>
      <xsd:documentation>Billing and delivery data group</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" maxOccurs="unbounded" ref="FormOfPayment">
          <xsd:annotation>
            <xsd:documentation>A FormOfPayment element specifies, which means of payment (i.e CreditCard or Other) is/are to be used to pay for a PNR or parts of it.

If TravelerIDRef elements are left out, the FormOfPayment refers to all travelers. If SegmentIDRef elements are left out, the FormOfPayment refers to all segments. 

A FormOfPayment with more than one means of payment (CreditCard and/or Other child elements) is referred to as a "split payment". For a split payment, one must specify (either for all or all but one of the means of payment), which amount to pay using each means of payment (see PartialAmount attributes). This can only be done in a meaningful way, if all segments the FormOfPayment refers to are paid for in one and the same currency, as the PartialAmount values refer to this currency and its number of decimals.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" maxOccurs="unbounded" ref="AddressGroup" />
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="BillingNumber">
    <xsd:simpleType>
      <xsd:restriction base="xsd:string">
        <xsd:minLength value="1" />
      </xsd:restriction>
    </xsd:simpleType>
  </xsd:element>
  <xsd:element name="BillingReference">
    <xsd:simpleType>
      <xsd:restriction base="xsd:string">
        <xsd:minLength value="1" />
      </xsd:restriction>
    </xsd:simpleType>
  </xsd:element>
  <xsd:element name="BookingCode" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>Hotel booking code.  Example: A1KRAC</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="BookingInstructions">
    <xsd:annotation>
      <xsd:documentation>Contains instructions how to book this service with respective source</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" maxOccurs="unbounded" ref="SSRCode" />
        <xsd:element minOccurs="0" maxOccurs="unbounded" name="OSIText" type="xsd:string" />
        <xsd:element minOccurs="0" name="Method" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Allowed Values are:
SSR
API
OSI</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="UpgradeMethod">
          <xsd:annotation>
            <xsd:documentation>Allowed Values:
A = AutoUpgrade
S = SSR request</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:simpleContent>
              <xsd:extension base="xsd:string">
                <xsd:attribute name="NewClass" type="xsd:string">
                  <xsd:annotation>
                    <xsd:documentation>Instructs which new class to book</xsd:documentation>
                  </xsd:annotation>
                </xsd:attribute>
              </xsd:extension>
            </xsd:simpleContent>
          </xsd:complexType>
        </xsd:element>
        <xsd:element minOccurs="0" maxOccurs="unbounded" ref="Text">
          <xsd:annotation>
            <xsd:documentation>Any freeflow to instruct DC</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" ref="Equipment">
          <xsd:annotation>
            <xsd:documentation>Use of this node here is experimental</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="UserInput">
          <xsd:annotation>
            <xsd:documentation>User input required for this service</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="unbounded" name="UserText">
                <xsd:annotation>
                  <xsd:documentation>Returned user entry</xsd:documentation>
                </xsd:annotation>
                <xsd:complexType>
                  <xsd:simpleContent>
                    <xsd:extension base="xsd:string">
                      <xsd:attribute name="InputID" type="xsd:string" use="required">
                        <xsd:annotation>
                          <xsd:documentation>Identifies this input value for backend component.
Sample: 
PUTime,
DOTime,
Address,
etc</xsd:documentation>
                        </xsd:annotation>
                      </xsd:attribute>
                      <xsd:attribute name="UserInstruction" type="xsd:string" use="optional">
                        <xsd:annotation>
                          <xsd:documentation>Provides instructions for user regarding the required input.  A client app should use this as a label for the user input box</xsd:documentation>
                        </xsd:annotation>
                      </xsd:attribute>
                      <xsd:attribute name="Required">
                        <xsd:annotation>
                          <xsd:documentation>Indicates if the UserText is required or not. Values: Y/N</xsd:documentation>
                        </xsd:annotation>
                        <xsd:simpleType>
                          <xsd:restriction base="xsd:string">
                            <xsd:enumeration value="Y" />
                            <xsd:enumeration value="N" />
                          </xsd:restriction>
                        </xsd:simpleType>
                      </xsd:attribute>
                    </xsd:extension>
                  </xsd:simpleContent>
                </xsd:complexType>
              </xsd:element>
              <xsd:element minOccurs="0" maxOccurs="unbounded" name="UserDropdown">
                <xsd:annotation>
                  <xsd:documentation>DEPRECATION WARNING:
This element will be deprecated from this schema June 2014.

Returned user selection.</xsd:documentation>
                </xsd:annotation>
                <xsd:complexType>
                  <xsd:sequence>
                    <xsd:element name="MenuItem" type="xsd:string">
                      <xsd:annotation>
                        <xsd:documentation>Item(s) selected by user</xsd:documentation>
                      </xsd:annotation>
                    </xsd:element>
                  </xsd:sequence>
                  <xsd:attribute name="InputID" type="xsd:string" use="required">
                    <xsd:annotation>
                      <xsd:documentation>Identifies this input value for backend component.
Sample: 
PUTime,
DOTime,
Address,
etc</xsd:documentation>
                    </xsd:annotation>
                  </xsd:attribute>
                </xsd:complexType>
              </xsd:element>
              <xsd:element minOccurs="0" name="UserChoices">
                <xsd:annotation>
                  <xsd:documentation>Returned user selection</xsd:documentation>
                </xsd:annotation>
                <xsd:complexType>
                  <xsd:sequence>
                    <xsd:element ref="SelectedFlight" />
                  </xsd:sequence>
                  <xsd:attribute name="UserInstruction" type="xsd:string" use="optional">
                    <xsd:annotation>
                      <xsd:documentation>Provides instructions for user regarding the required input.  A client app should use this as a label for the user input box</xsd:documentation>
                    </xsd:annotation>
                  </xsd:attribute>
                  <xsd:attribute name="Required">
                    <xsd:annotation>
                      <xsd:documentation>Indicates if the UserText is required or not. Values: Y/N</xsd:documentation>
                    </xsd:annotation>
                    <xsd:simpleType>
                      <xsd:restriction base="xsd:string">
                        <xsd:enumeration value="Y" />
                        <xsd:enumeration value="N" />
                      </xsd:restriction>
                    </xsd:simpleType>
                  </xsd:attribute>
                </xsd:complexType>
              </xsd:element>
            </xsd:sequence>
          </xsd:complexType>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="BusinessAccountRecord" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>Name of business profile record.  Example: IBMMKT</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="BusinessProfile" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>Business profile.  Example: Business</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="BusName" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>Bus name.  Example: Greyhound</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="BusSegment">
    <xsd:annotation>
      <xsd:documentation>Bus segment group</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" maxOccurs="8" ref="TravelerIDRef" />
        <xsd:element ref="VendorCode" />
        <xsd:element ref="DepartureDate" />
        <xsd:element ref="OriginCityCode" />
        <xsd:element ref="DestinationCityCode" />
        <xsd:element ref="ActionCode" />
        <xsd:element ref="NumberInParty" />
        <xsd:element minOccurs="0" ref="DeparturePoint" />
        <xsd:element minOccurs="0" ref="DepartureTime" />
        <xsd:element minOccurs="0" name="ArrivalPoint" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Arrival point.  Example: Terminal 3</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" ref="ArrivalTime" />
        <xsd:element minOccurs="0" ref="BusName" />
        <xsd:element minOccurs="0" ref="ServiceInformation" />
        <xsd:element minOccurs="0" ref="ConfirmationNumber" />
        <xsd:element minOccurs="0" maxOccurs="unbounded" ref="Text" />
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="Cancel">
    <xsd:annotation>
      <xsd:documentation>Cancel penalty group</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element ref="Amount" />
        <xsd:element minOccurs="0" maxOccurs="unbounded" ref="Text" />
        <xsd:element ref="Taxes" />
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="Car">
    <xsd:annotation>
      <xsd:documentation>Car segment group</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" maxOccurs="8" ref="TravelerIDRef" />
        <xsd:element ref="NumberOfCars" />
        <xsd:element ref="PickUp" />
        <xsd:element ref="DropOff" />
        <xsd:element ref="CarVendorCode" />
        <xsd:element ref="CarType" />
        <xsd:element minOccurs="0" ref="RateOptions" />
        <xsd:element minOccurs="0" maxOccurs="unbounded" ref="OptionalEquipment" />
        <xsd:element minOccurs="0" ref="SupplementalInformation" />
      </xsd:sequence>
      <xsd:attribute name="AssociationID" type="xsd:ID" use="required">
        <xsd:annotation>
          <xsd:documentation>Unique segment ID used to associate other elements to this segment at PNR creation time.  Example: C1</xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute default="N" name="ReturnRuleText">
        <xsd:annotation>
          <xsd:documentation>Option to request the return of rule text.  Values are:
Y = Yes
N = No
Example: N</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:enumeration value="Y" />
            <xsd:enumeration value="N" />
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:attribute>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="CardholderFirstName">
    <xsd:annotation>
      <xsd:documentation>Credit card holder's first name.  Example: JOHN</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleType>
      <xsd:restriction base="xsd:string">
        <xsd:minLength value="1" />
      </xsd:restriction>
    </xsd:simpleType>
  </xsd:element>
  <xsd:element name="CardholderLastName">
    <xsd:annotation>
      <xsd:documentation>Credit card holder's last name.  This is only required for Sabre.  Example: SMITH</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleType>
      <xsd:restriction base="xsd:string">
        <xsd:minLength value="1" />
      </xsd:restriction>
    </xsd:simpleType>
  </xsd:element>
  <xsd:element name="CarPassiveSegment">
    <xsd:annotation>
      <xsd:documentation>Car passive segment group</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" maxOccurs="8" ref="TravelerIDRef" />
        <xsd:element ref="CarVendorCode" />
        <xsd:element ref="CityCode" />
        <xsd:element ref="ActionCode" />
        <xsd:element ref="NumberOfCars" />
        <xsd:element ref="PickUpInfo" />
        <xsd:element ref="DropOffInfo" />
        <xsd:element ref="CarType" />
        <xsd:element minOccurs="0" name="RateOptions">
          <xsd:annotation>
            <xsd:documentation>Rate information. Includes rate plan, amount, currency, mileage plan etc.</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:sequence>
              <xsd:element ref="RateAmount" />
              <xsd:element ref="CurrencyCode" />
              <xsd:element name="DistanceUnit">
                <xsd:annotation>
                  <xsd:documentation>Distance unit applied for all distance information (See MileKmLimit element):
M = Miles
K = Kilometers.
Example: M</xsd:documentation>
                </xsd:annotation>
                <xsd:simpleType>
                  <xsd:restriction base="xsd:string">
                    <xsd:minLength value="1" />
                    <xsd:maxLength value="1" />
                    <xsd:enumeration value="M" />
                    <xsd:enumeration value="K" />
                  </xsd:restriction>
                </xsd:simpleType>
              </xsd:element>
              <xsd:element minOccurs="0" name="MileKmRate" type="xsd:positiveInteger">
                <xsd:annotation>
                  <xsd:documentation>Rate charged per mile/kilometer. Rate charged per additional mile/kilometer if element MileKmLimit has a positive integer value of max miles/km allowed with this rate included in the rate.  Example: 025
</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element ref="MileKmLimit">
                <xsd:annotation>
                  <xsd:documentation>Identifies mileage plan sold. 

Note: Amadeus does not have a designated format for mileage plan indicator. Thus, if entered and booking is for Amadeus GDS this value will be ignored. 
Values are: either UNL for unlimited mileage or a positive integer representing the max miles/km free for this rate.

NOTE: For Apollo/Galileo and Worldspan MileKmRate  is mandatory if MileKmLimit has value different than 'UNL' - worlspan requires charges per mile or kilometer to be entered see MileKmRate element.</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" maxOccurs="0" name="ExtraCharges">
                <xsd:annotation>
                  <xsd:documentation>Car data group.
FUTURE USE. NOT SUPPORTED YET.</xsd:documentation>
                </xsd:annotation>
                <xsd:complexType>
                  <xsd:sequence>
                    <xsd:element name="ExtraChargesAmount" type="xsd:integer">
                      <xsd:annotation>
                        <xsd:documentation>Extra charges amount.  Example: 5500</xsd:documentation>
                      </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" ref="MileKmLimit">
                      <xsd:annotation>
                        <xsd:documentation>Identifies mileage plan sold. 

Note: Amadeus does not have a designated format for mileage plan indicator. Thus, if entered and booking is for Amadeus GDS this value will be ignored. 
Values are: either UNL for unlimited mileage or a positive integer representing the max miles/km free for this rate.

</xsd:documentation>
                      </xsd:annotation>
                    </xsd:element>
                  </xsd:sequence>
                  <xsd:attribute name="Type" use="required">
                    <xsd:annotation>
                      <xsd:documentation>Extra charges description.  
Values are: 
D = Day
H = Hour

Example: D</xsd:documentation>
                    </xsd:annotation>
                    <xsd:simpleType>
                      <xsd:restriction base="xsd:string">
                        <xsd:enumeration value="D" />
                        <xsd:enumeration value="H" />
                      </xsd:restriction>
                    </xsd:simpleType>
                  </xsd:attribute>
                </xsd:complexType>
              </xsd:element>
            </xsd:sequence>
            <xsd:attribute name="Type" use="optional">
              <xsd:annotation>
                <xsd:documentation>Rate type.  Values are:
D = Daily
E = Weekend
W = Weekly
M = Monthly
H = Hourly
P = Package
Example: W</xsd:documentation>
              </xsd:annotation>
              <xsd:simpleType>
                <xsd:restriction base="xsd:string">
                  <xsd:enumeration value="D" />
                  <xsd:enumeration value="E" />
                  <xsd:enumeration value="W" />
                  <xsd:enumeration value="M" />
                  <xsd:enumeration value="H" />
                  <xsd:enumeration value="P" />
                </xsd:restriction>
              </xsd:simpleType>
            </xsd:attribute>
            <xsd:attribute name="Category" use="optional">
              <xsd:annotation>
                <xsd:documentation>Rate category.  Values are:
A = Association
B = Business standard
C = Corporate
G = Government
I = Industry (Travel)
K = Package
L = Inclusive 
P = Promotional
R = Credential
S = Standard
U = Consortium
V = Convention
X = Negotiated
Example: G
Note that Amadeus will require Category if rate Type (also referred to as rate plan) is entered.</xsd:documentation>
              </xsd:annotation>
              <xsd:simpleType>
                <xsd:restriction base="xsd:string">
                  <xsd:enumeration value="A" />
                  <xsd:enumeration value="B" />
                  <xsd:enumeration value="C" />
                  <xsd:enumeration value="G" />
                  <xsd:enumeration value="I" />
                  <xsd:enumeration value="K" />
                  <xsd:enumeration value="L" />
                  <xsd:enumeration value="P" />
                  <xsd:enumeration value="R" />
                  <xsd:enumeration value="S" />
                  <xsd:enumeration value="U" />
                  <xsd:enumeration value="V" />
                  <xsd:enumeration value="X" />
                </xsd:restriction>
              </xsd:simpleType>
            </xsd:attribute>
          </xsd:complexType>
        </xsd:element>
        <xsd:element minOccurs="0" ref="BookingSource" />
        <xsd:element minOccurs="0" ref="ServiceInformation" />
        <xsd:element minOccurs="0" ref="ConfirmationNumber" />
        <xsd:element minOccurs="0" maxOccurs="unbounded" ref="Text" />
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="CarRental">
    <xsd:annotation>
      <xsd:documentation>Car rental information group</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element ref="PickUpDate" />
        <xsd:element ref="DropOffDate" />
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="Carrier">
    <xsd:annotation>
      <xsd:documentation>Flight carrier group</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:annotation>
          <xsd:documentation>IMPORTANT:
Note thatFlightNumber element is mandatory for regular flight sell. Only optional for OPEN segments . See also Flight/@Ttype=O  attribute of the Flight element.</xsd:documentation>
        </xsd:annotation>
        <xsd:element ref="AirlineCode" />
        <xsd:element minOccurs="0" ref="FlightNumber" />
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="CarrierCode" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>Carrier code.  Example: AA</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="CarType" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>Car type.  Example: ECAR</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="CarVendorCode">
    <xsd:annotation>
      <xsd:documentation>Car vendor code.  Example: ZI</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:simpleContent>
        <xsd:extension base="xsd:string">
          <xsd:attribute name="LinkType" use="optional">
            <xsd:annotation>
              <xsd:documentation>Link Type.  Values are:
GCM = Galileo carmaster only participant
GLP = Galileo link partner
ASA = Amadeus standard access
ACA= Amadeus complete access
ACP= Amadeus complete access plus
SDA= Sabre direct connect access
SDC= Sabre direct connect sell
SOL= Sabre other link type
WAP= WebSphereDIR
WMP= WebSphereDIR
WNA= WebSphereDIR

AMADEUS default is ASA

Example: ASA</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
              <xsd:restriction base="xsd:string">
                <xsd:minLength value="3" />
                <xsd:maxLength value="3" />
                <xsd:enumeration value="GCM">
                  <xsd:annotation>
                    <xsd:documentation>Galileo carmaster only participant</xsd:documentation>
                  </xsd:annotation>
                </xsd:enumeration>
                <xsd:enumeration value="GLP">
                  <xsd:annotation>
                    <xsd:documentation>Galileo link partner</xsd:documentation>
                  </xsd:annotation>
                </xsd:enumeration>
                <xsd:enumeration value="ASA">
                  <xsd:annotation>
                    <xsd:documentation>Amadeus standard access</xsd:documentation>
                  </xsd:annotation>
                </xsd:enumeration>
                <xsd:enumeration value="ACA">
                  <xsd:annotation>
                    <xsd:documentation>Amadeus complete access</xsd:documentation>
                  </xsd:annotation>
                </xsd:enumeration>
                <xsd:enumeration value="ACP">
                  <xsd:annotation>
                    <xsd:documentation>Amadeus complete access plus</xsd:documentation>
                  </xsd:annotation>
                </xsd:enumeration>
                <xsd:enumeration value="SDA">
                  <xsd:annotation>
                    <xsd:documentation>Sabre direct connect access</xsd:documentation>
                  </xsd:annotation>
                </xsd:enumeration>
                <xsd:enumeration value="SDC">
                  <xsd:annotation>
                    <xsd:documentation>Sabre direct connect sell</xsd:documentation>
                  </xsd:annotation>
                </xsd:enumeration>
                <xsd:enumeration value="SOL">
                  <xsd:annotation>
                    <xsd:documentation>Sabre other link type</xsd:documentation>
                  </xsd:annotation>
                </xsd:enumeration>
                <xsd:enumeration value="WAP">
                  <xsd:annotation>
                    <xsd:documentation>WebSphereDIR</xsd:documentation>
                  </xsd:annotation>
                </xsd:enumeration>
                <xsd:enumeration value="WMP">
                  <xsd:annotation>
                    <xsd:documentation>WebSphereDIR</xsd:documentation>
                  </xsd:annotation>
                </xsd:enumeration>
                <xsd:enumeration value="WNA">
                  <xsd:annotation>
                    <xsd:documentation>WebSphereDIR</xsd:documentation>
                  </xsd:annotation>
                </xsd:enumeration>
              </xsd:restriction>
            </xsd:simpleType>
          </xsd:attribute>
        </xsd:extension>
      </xsd:simpleContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="Category">
    <xsd:annotation>
      <xsd:documentation>Location category.  Values are:
T = Airport
O = Off-airport
C = City location
P = Port
X = Rail
N = North suburban
E = East suburban
S = South suburban
W = West suburban
R = Resort location
Example: C</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleType>
      <xsd:restriction base="xsd:string">
        <xsd:enumeration value="T" />
        <xsd:enumeration value="O" />
        <xsd:enumeration value="C" />
        <xsd:enumeration value="P" />
        <xsd:enumeration value="X" />
        <xsd:enumeration value="N" />
        <xsd:enumeration value="E" />
        <xsd:enumeration value="S" />
        <xsd:enumeration value="W" />
        <xsd:enumeration value="R" />
      </xsd:restriction>
    </xsd:simpleType>
  </xsd:element>
  <xsd:element name="CCCode" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>Credit card code.  Example: VI</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="CCExpiration">
    <xsd:annotation>
      <xsd:documentation>Credit card expiration group</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element ref="Month" />
        <xsd:element ref="Year" />
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="CCNumber" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>Credit card number.  Example: 4011236654652341</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="ChainCode" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>Hotel property chain code.  Example: 101</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="Change">
    <xsd:annotation>
      <xsd:documentation>Change penalty group</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element ref="Amount" />
        <xsd:element minOccurs="0" maxOccurs="unbounded" ref="Text" />
        <xsd:element ref="Taxes" />
      </xsd:sequence>
      <xsd:attribute name="Total" type="xsd:integer" use="required">
        <xsd:annotation>
          <xsd:documentation>Total Change fee Taxes + Total Change Fee amount</xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="Amount" type="xsd:integer" use="required">
        <xsd:annotation>
          <xsd:documentation>Then change fee amount to be collected as penalty</xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="ChangeGroup">
    <xsd:annotation>
      <xsd:documentation>Change group information</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" ref="DepartureDate" />
        <xsd:element minOccurs="0" ref="ReturnDate" />
        <xsd:element minOccurs="0" ref="DestinationCity" />
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="Characteristic">
    <xsd:annotation>
      <xsd:documentation>Seat characteristic for generic seat request.  Values are:
NA = Non smoking aisle
NB = Non smoking bulkhead
NS = Non smoking seat
NW = Non smoking window
SA = Smoking aisle
SB = Smoking bulkhead
SS = Smoking seat
SW = Smoking window
Example: NW</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:simpleContent>
        <xsd:extension base="xsd:string">
          <xsd:attribute name="Location" use="optional">
            <xsd:simpleType>
              <xsd:restriction base="xsd:string">
                <xsd:minLength value="1" />
                <xsd:maxLength value="1" />
                <xsd:enumeration value="F" />
                <xsd:enumeration value="L" />
                <xsd:enumeration value="R" />
                <xsd:enumeration value="T" />
              </xsd:restriction>
            </xsd:simpleType>
          </xsd:attribute>
        </xsd:extension>
      </xsd:simpleContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="ChargeCode">
    <xsd:annotation>
      <xsd:documentation>Charge description code.  Example: EMA</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleType>
      <xsd:restriction base="xsd:string">
        <xsd:minLength value="3" />
        <xsd:maxLength value="3" />
      </xsd:restriction>
    </xsd:simpleType>
  </xsd:element>
  <xsd:element name="ChaufferBusDriveSegment">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" ref="TravelerIDRef" />
        <xsd:element ref="SegmentIDRef" />
        <xsd:element ref="VendorCode" />
        <xsd:element ref="ActionCode" />
        <xsd:element name="NumberOfServices" type="xsd:integer">
          <xsd:annotation>
            <xsd:documentation>Number of Cars required or Bus</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element name="ServiceInfo">
          <xsd:complexType>
            <xsd:sequence>
              <xsd:element ref="Date" />
              <xsd:element minOccurs="0" ref="Time" />
              <xsd:element ref="CityCode" />
            </xsd:sequence>
          </xsd:complexType>
        </xsd:element>
        <xsd:element name="ServiceType">
          <xsd:annotation>
            <xsd:documentation>Type of service. Possible values are:
CDD - Chauffer Drive on Departure
CDA - Chauffer Drive on Arrival
BSD - Bus Service on Departure
BSA - Bus Service on Arrival
</xsd:documentation>
          </xsd:annotation>
          <xsd:simpleType>
            <xsd:restriction base="xsd:string">
              <xsd:length value="3" />
              <xsd:enumeration value="CDD" />
              <xsd:enumeration value="CDA" />
              <xsd:enumeration value="BSD" />
              <xsd:enumeration value="BSA" />
            </xsd:restriction>
          </xsd:simpleType>
        </xsd:element>
        <xsd:element name="PointOfSale">
          <xsd:annotation>
            <xsd:documentation>TODO</xsd:documentation>
          </xsd:annotation>
          <xsd:simpleType>
            <xsd:restriction base="xsd:string">
              <xsd:minLength value="1" />
            </xsd:restriction>
          </xsd:simpleType>
        </xsd:element>
        <xsd:element minOccurs="0" ref="Text" />
        <xsd:element minOccurs="0" ref="TelephoneNumber" />
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="CheckInDate" type="xsd:date">
    <xsd:annotation>
      <xsd:documentation>Check in date in ISO 8601 format (yyyy-mm-dd).  Example: 2001-12-25</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="CheckOutDate" type="xsd:date">
    <xsd:annotation>
      <xsd:documentation>Check out date in ISO 8601 format (yyyy-mm-dd).  Example: 2001-12-25</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="City">
    <xsd:annotation>
      <xsd:documentation>City name.  Example: NY</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:simpleContent>
        <xsd:extension base="xsd:string">
          <xsd:attribute name="SplitItemLine" type="xsd:integer" use="optional">
            <xsd:annotation>
              <xsd:documentation>Allows to specify how to group address items when SplitItems attribut is at Yes. All items with the same SplitItemLine value will be created in the same address element in the GDS. Example: 1</xsd:documentation>
            </xsd:annotation>
          </xsd:attribute>
        </xsd:extension>
      </xsd:simpleContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="CityName" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>City name, can be used with OTH type only.  Example: LILLE</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="ClassifiedFare">
    <xsd:annotation>
      <xsd:documentation>Classified fares group allowing to price using the fare basis code.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" maxOccurs="unbounded" ref="TravelerIDRef" />
        <xsd:element maxOccurs="unbounded" ref="ClassifiedGroup" />
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="ClassifiedGroup">
    <xsd:annotation>
      <xsd:documentation>Classified fare group.

Pricing by FBC and TicketDesignator (by PTC)</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" maxOccurs="unbounded" ref="SegmentIDRef" />
        <xsd:element ref="FareBasisCode" />
        <xsd:element minOccurs="0" ref="TicketDesignator" />
        <xsd:element minOccurs="0" ref="PseudoCityCode" />
      </xsd:sequence>
      <xsd:attribute name="PaxType" type="xsd:string" use="required">
        <xsd:annotation>
          <xsd:documentation>Passenger type requested for pricing. 

Some IATA values are :
ADT= Adult
CHD = Child
INF = Infant
GOV = Government
MIL = Military
SRC = Senior citizen
STD = Student
YTH = Youth
Example: CHD</xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="Commission" type="CommissionType">
    <xsd:annotation>
      <xsd:documentation>Commission percentage or amount.  Example: 20.00</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="CompanyCode" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>Car Company or Hotel Chain 2-letter code.  Example: ZE</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="CompletePNRElements">
    <xsd:annotation>
      <xsd:documentation>This group contains PNR elements required to complete the PNR transaction and obtain the PNR record locator. </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" ref="Itinerary" />
        <xsd:element minOccurs="0" maxOccurs="unbounded" ref="Traveler" />
        <xsd:element minOccurs="0" maxOccurs="unbounded" ref="Telephone" />
        <xsd:element minOccurs="0" ref="Ticketing" />
        <xsd:element minOccurs="0" ref="ReceivedFrom" />
        <xsd:element minOccurs="0" name="AggregatorRecordLocator" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Aggregator PNR record locator.  Used if PNR is created by an aggregator(e.g, Amadeus, Travelport). Example: F1A3SK</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="ConfirmationNumber" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>Confirmation number.  Example: 62FE77</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="Contact">
    <xsd:annotation>
      <xsd:documentation>Contact information group</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element ref="CityCode" />
        <xsd:element ref="TelephoneNumber" />
      </xsd:sequence>
      <xsd:attribute name="Type" use="required">
        <xsd:annotation>
          <xsd:documentation>Contact type.  Possible values are:
B = BUSINESS
F = FAX
R = Residence:
Example: B</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:minLength value="1" />
            <xsd:maxLength value="1" />
            <xsd:enumeration value="R" />
            <xsd:enumeration value="B" />
            <xsd:enumeration value="F" />
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:attribute>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="Contract" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>Specifies the contract code, to use to price private fares.  Example: 00001</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="Corporate">
    <xsd:annotation>
      <xsd:documentation>Corporate information group</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" maxOccurs="unbounded" ref="TravelerIDRef" />
        <xsd:element minOccurs="0" ref="AirlineCode" />
        <xsd:element minOccurs="0" ref="Account" />
        <xsd:element minOccurs="0" ref="Contract" />
      </xsd:sequence>
      <xsd:attribute name="CorporateIndex" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>Corporation associated with this program</xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="CorporateDiscountNumber" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>Corporate discount number.  Example: 5643356</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="CorporateRateOverride" type="xsd:integer">
    <xsd:annotation>
      <xsd:documentation>Corporate rate override.  Example: 25900</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="Country">
    <xsd:annotation>
      <xsd:documentation>Country.  Example: USA</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:simpleContent>
        <xsd:extension base="xsd:string">
          <xsd:attribute name="SplitItemLine" type="xsd:integer" use="optional">
            <xsd:annotation>
              <xsd:documentation>Allows to specify how to group address items when SplitItems attribut is at Yes. All items with the same SplitItemLine value will be created in the same address element in the GDS. Example: 1</xsd:documentation>
            </xsd:annotation>
          </xsd:attribute>
        </xsd:extension>
      </xsd:simpleContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="Coupon" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>Coupon information.  Example: CPN3564</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="Coverage" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>Insurance coverage type.  Example: TCI 950</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="CreditCard">
    <xsd:annotation>
      <xsd:documentation>Credit card group</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:choice>
          <xsd:sequence>
            <xsd:element name="CCCode">
              <xsd:annotation>
                <xsd:documentation>Credit card (vendor) code. Example: VI</xsd:documentation>
              </xsd:annotation>
              <xsd:complexType>
                <xsd:simpleContent>
                  <xsd:extension base="xsd:string">
                    <xsd:attribute name="EasyPay" type="xsd:string">
                      <xsd:annotation>
                        <xsd:documentation>If attribute is present and "Y" this credit card is an IATA EasyPay card and subject to special rules and validation.</xsd:documentation>
                      </xsd:annotation>
                    </xsd:attribute>
                  </xsd:extension>
                </xsd:simpleContent>
              </xsd:complexType>
            </xsd:element>
            <xsd:element name="CCNumber" type="xsd:string">
              <xsd:annotation>
                <xsd:documentation>Credit card number.  Example: 4444333322221111</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
          </xsd:sequence>
          <xsd:sequence>
            <xsd:element name="TokenizedCardNumber" type="xsd:string">
              <xsd:annotation>
                <xsd:documentation source="description" xml:lang="en">Tokenized card number.

Note: This capability may not be supported by all airlines or may be supported by bilateral agreement only. If supported, the technical implementation of this capability is not dictated by this specification.</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
            <xsd:element name="ReferenceNumber">
              <xsd:annotation>
                <xsd:documentation>Reference number associated with TokenizedCardNumber
Example: 12345</xsd:documentation>
              </xsd:annotation>
              <xsd:simpleType>
                <xsd:restriction base="xsd:string">
                  <xsd:pattern value="([a-zA-Z0-9])*" />
                </xsd:restriction>
              </xsd:simpleType>
            </xsd:element>
            <xsd:element minOccurs="0" name="AliasCC" type="xsd:string">
              <xsd:annotation>
                <xsd:documentation>Cotnains a masked/aliased credit card number associated with the tokenized card to allow determination of credit card type</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
            <xsd:element minOccurs="0" name="AliasCVV" type="xsd:integer">
              <xsd:annotation>
                <xsd:documentation>Aliased CVV/security code associated with the tokenized card</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
          </xsd:sequence>
        </xsd:choice>
        <xsd:element ref="CCExpiration" />
        <xsd:element minOccurs="0" name="SecurityID" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Credit card security number for online transactions (referred to also as CVV2, CVC2, CSC or CID). This is a 3-digit (Visa, Master, Discover) or 4-digit (Amex) number.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" ref="Authorization" />
        <xsd:element minOccurs="0" name="AuthorizationData">
          <xsd:annotation>
            <xsd:documentation>Data  Elements which are returned from the CC Provider which are reported to ARC and BSP.   
Internal use only. </xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:sequence>
              <xsd:element minOccurs="0" name="TransactionIdentifier" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>A valued returned from Credit card provider and used for ARC and BSP reporting. For Visa and AMEX. </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" name="AuthResCode" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>Authorization Response Code. A valued returned from Credit card provider and used for ARC and BSP reporting. Visa only. </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" name="ValidationCode" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>Validation Code. A valued returned from Credit card provider and used for ARC and BSP reporting. Visa only. </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" name="AuthCharInd" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>Authorization Character Indicator. A valued returned from Credit card provider and used for ARC and BSP reporting. Visa only.  </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" name="EcommerceInd" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>E-Commerce Indicator. A valued returned from Credit card provider and used for ARC and BSP reporting. Visa and MasterCard. </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" name="BankNetRefDate" type="xsd:date">
                <xsd:annotation>
                  <xsd:documentation>bankNet Reference Date. A valued returned from Credit card provider and used for ARC and BSP reporting. MasterCard only. </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" name="BanknetReferenceNumber" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>Banknet reference number. A valued returned from Credit card provider and used for ARC and BSP reporting. Mastercard only. </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" name="PaymentID" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>The Code identifies the type of VISA credit card( e.g signature card, reward card etc..)   </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" name="AddVerfCode" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>Address Verification Code; When CC company Address Verification Service( AVS) is utilized, this field will contain the address verification response code. </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" name="flx3DSEnrolled" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>Enrollment Status</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" name="flx3DSStatus" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>Authentication Status</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" name="UCAFIndicator">
                <xsd:annotation>
                  <xsd:documentation>UCAF Collection Indicator Provides information about the participants in a 3D secure transaction </xsd:documentation>
                </xsd:annotation>
                <xsd:simpleType>
                  <xsd:restriction base="xsd:string">
                    <xsd:minLength value="1" />
                    <xsd:maxLength value="1" />
                  </xsd:restriction>
                </xsd:simpleType>
              </xsd:element>
            </xsd:sequence>
          </xsd:complexType>
        </xsd:element>
        <xsd:element minOccurs="0" name="ReportingData">
          <xsd:annotation>
            <xsd:documentation>Data  Elements required by certain card issuers for report purposes</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:sequence>
              <xsd:element minOccurs="0" name="AccountNumber">
                <xsd:annotation>
                  <xsd:documentation>Corporation's account number</xsd:documentation>
                </xsd:annotation>
                <xsd:complexType>
                  <xsd:simpleContent>
                    <xsd:extension base="xsd:string">
                      <xsd:attribute name="Min" type="xsd:integer">
                        <xsd:annotation>
                          <xsd:documentation>minimum length</xsd:documentation>
                        </xsd:annotation>
                      </xsd:attribute>
                      <xsd:attribute name="Max" type="xsd:integer">
                        <xsd:annotation>
                          <xsd:documentation>maximum length</xsd:documentation>
                        </xsd:annotation>
                      </xsd:attribute>
                      <xsd:attribute name="Format" type="xsd:string">
                        <xsd:annotation>
                          <xsd:documentation>A - alphanumeric (default)
N - numeric
D - ISO date format</xsd:documentation>
                        </xsd:annotation>
                      </xsd:attribute>
                      <xsd:attribute name="Mandatory" type="xsd:string">
                        <xsd:annotation>
                          <xsd:documentation>O - optional (default)
M - mandatory</xsd:documentation>
                        </xsd:annotation>
                      </xsd:attribute>
                      <xsd:attribute name="DataElementID" type="xsd:string" use="required">
                        <xsd:annotation>
                          <xsd:documentation>Vendor code assigned to this reporting element
Example:  BK</xsd:documentation>
                        </xsd:annotation>
                      </xsd:attribute>
                      <xsd:attribute name="DataElementName" type="xsd:string" use="required">
                        <xsd:annotation>
                          <xsd:documentation>Vendor element name assigned to this reporting element
Example:  Corperate ID</xsd:documentation>
                        </xsd:annotation>
                      </xsd:attribute>
                    </xsd:extension>
                  </xsd:simpleContent>
                </xsd:complexType>
              </xsd:element>
              <xsd:element minOccurs="0" name="CostCenter">
                <xsd:annotation>
                  <xsd:documentation>Cost center number/code</xsd:documentation>
                </xsd:annotation>
                <xsd:complexType>
                  <xsd:simpleContent>
                    <xsd:extension base="xsd:string">
                      <xsd:attribute name="Min" type="xsd:integer">
                        <xsd:annotation>
                          <xsd:documentation>minimum length</xsd:documentation>
                        </xsd:annotation>
                      </xsd:attribute>
                      <xsd:attribute name="Max" type="xsd:integer">
                        <xsd:annotation>
                          <xsd:documentation>maximum length</xsd:documentation>
                        </xsd:annotation>
                      </xsd:attribute>
                      <xsd:attribute name="Format" type="xsd:string">
                        <xsd:annotation>
                          <xsd:documentation>A - alphanumeric (default)
N - numeric
D - ISO date format</xsd:documentation>
                        </xsd:annotation>
                      </xsd:attribute>
                      <xsd:attribute name="Mandatory" type="xsd:string">
                        <xsd:annotation>
                          <xsd:documentation>O - optional (default)
M - mandatory</xsd:documentation>
                        </xsd:annotation>
                      </xsd:attribute>
                      <xsd:attribute name="DataElementID" type="xsd:string" use="required">
                        <xsd:annotation>
                          <xsd:documentation>Vendor code assigned to this reporting element
Example:  BK</xsd:documentation>
                        </xsd:annotation>
                      </xsd:attribute>
                      <xsd:attribute name="DataElementName" type="xsd:string" use="required">
                        <xsd:annotation>
                          <xsd:documentation>Vendor element name assigned to this reporting element
Example:  Corperate ID</xsd:documentation>
                        </xsd:annotation>
                      </xsd:attribute>
                    </xsd:extension>
                  </xsd:simpleContent>
                </xsd:complexType>
              </xsd:element>
              <xsd:element minOccurs="0" name="Department">
                <xsd:annotation>
                  <xsd:documentation>Department description  for this Traveler in this association.
Example: Marketing</xsd:documentation>
                </xsd:annotation>
                <xsd:complexType>
                  <xsd:simpleContent>
                    <xsd:extension base="xsd:string">
                      <xsd:attribute name="Min" type="xsd:integer">
                        <xsd:annotation>
                          <xsd:documentation>minimum length</xsd:documentation>
                        </xsd:annotation>
                      </xsd:attribute>
                      <xsd:attribute name="Max" type="xsd:integer">
                        <xsd:annotation>
                          <xsd:documentation>maximum length</xsd:documentation>
                        </xsd:annotation>
                      </xsd:attribute>
                      <xsd:attribute name="Format" type="xsd:string">
                        <xsd:annotation>
                          <xsd:documentation>A - alphanumeric (default)
N - numeric
D - ISO date format</xsd:documentation>
                        </xsd:annotation>
                      </xsd:attribute>
                      <xsd:attribute name="Mandatory" type="xsd:string">
                        <xsd:annotation>
                          <xsd:documentation>O - optional (default)
M - mandatory</xsd:documentation>
                        </xsd:annotation>
                      </xsd:attribute>
                      <xsd:attribute name="DataElementID" type="xsd:string" use="required">
                        <xsd:annotation>
                          <xsd:documentation>Vendor code assigned to this reporting element
Example:  BK</xsd:documentation>
                        </xsd:annotation>
                      </xsd:attribute>
                      <xsd:attribute name="DataElementName" type="xsd:string" use="required">
                        <xsd:annotation>
                          <xsd:documentation>Vendor element name assigned to this reporting element
Example:  Corperate ID</xsd:documentation>
                        </xsd:annotation>
                      </xsd:attribute>
                    </xsd:extension>
                  </xsd:simpleContent>
                </xsd:complexType>
              </xsd:element>
              <xsd:element minOccurs="0" name="EmployeeID">
                <xsd:annotation>
                  <xsd:documentation>EmployeeID of traveler for this association.
Example 476254</xsd:documentation>
                </xsd:annotation>
                <xsd:complexType>
                  <xsd:simpleContent>
                    <xsd:extension base="xsd:string">
                      <xsd:attribute name="Min" type="xsd:integer">
                        <xsd:annotation>
                          <xsd:documentation>minimum length</xsd:documentation>
                        </xsd:annotation>
                      </xsd:attribute>
                      <xsd:attribute name="Max" type="xsd:integer">
                        <xsd:annotation>
                          <xsd:documentation>maximum length</xsd:documentation>
                        </xsd:annotation>
                      </xsd:attribute>
                      <xsd:attribute name="Format" type="xsd:string">
                        <xsd:annotation>
                          <xsd:documentation>A - alphanumeric (default)
N - numeric
D - ISO date format</xsd:documentation>
                        </xsd:annotation>
                      </xsd:attribute>
                      <xsd:attribute name="Mandatory" type="xsd:string">
                        <xsd:annotation>
                          <xsd:documentation>O - optional (default)
M - mandatory</xsd:documentation>
                        </xsd:annotation>
                      </xsd:attribute>
                      <xsd:attribute name="DataElementID" type="xsd:string" use="required">
                        <xsd:annotation>
                          <xsd:documentation>Vendor code assigned to this reporting element
Example:  BK</xsd:documentation>
                        </xsd:annotation>
                      </xsd:attribute>
                      <xsd:attribute name="DataElementName" type="xsd:string" use="required">
                        <xsd:annotation>
                          <xsd:documentation>Vendor element name assigned to this reporting element
Example:  Corperate ID</xsd:documentation>
                        </xsd:annotation>
                      </xsd:attribute>
                    </xsd:extension>
                  </xsd:simpleContent>
                </xsd:complexType>
              </xsd:element>
              <xsd:element minOccurs="0" maxOccurs="unbounded" name="GenericElement">
                <xsd:annotation>
                  <xsd:documentation>These are elements provided by CC vendor and could include elements such as
- ProjectNumber
- AccountingUnit
- ActionNumber
- DepartingDate
- FinalDestination

Above sample reflects data elements from UATP/Airplus requirements</xsd:documentation>
                </xsd:annotation>
                <xsd:complexType>
                  <xsd:simpleContent>
                    <xsd:extension base="xsd:string">
                      <xsd:attribute name="Min" type="xsd:integer">
                        <xsd:annotation>
                          <xsd:documentation>minimum length</xsd:documentation>
                        </xsd:annotation>
                      </xsd:attribute>
                      <xsd:attribute name="Max" type="xsd:integer">
                        <xsd:annotation>
                          <xsd:documentation>maximum length</xsd:documentation>
                        </xsd:annotation>
                      </xsd:attribute>
                      <xsd:attribute name="Format" type="xsd:string">
                        <xsd:annotation>
                          <xsd:documentation>A - alphanumeric (default)
N - numeric
D - ISO date format</xsd:documentation>
                        </xsd:annotation>
                      </xsd:attribute>
                      <xsd:attribute name="Mandatory" type="xsd:string">
                        <xsd:annotation>
                          <xsd:documentation>O - optional (default)
M - mandatory</xsd:documentation>
                        </xsd:annotation>
                      </xsd:attribute>
                      <xsd:attribute name="DataElementID" type="xsd:string" use="required">
                        <xsd:annotation>
                          <xsd:documentation>Vendor code assigned to this reporting element
Example:  PN</xsd:documentation>
                        </xsd:annotation>
                      </xsd:attribute>
                      <xsd:attribute name="DataElementName" type="xsd:string" use="required">
                        <xsd:annotation>
                          <xsd:documentation>Vendor element name assigned to this reporting element
Example:  Project Number</xsd:documentation>
                        </xsd:annotation>
                      </xsd:attribute>
                      <xsd:attribute name="SystemProcess" type="xsd:string">
                        <xsd:annotation>
                          <xsd:documentation>Allowed value: Y
If set this identifies that this data content for this element is system generated (not provide by user input or profiles)</xsd:documentation>
                        </xsd:annotation>
                      </xsd:attribute>
                    </xsd:extension>
                  </xsd:simpleContent>
                </xsd:complexType>
              </xsd:element>
              <xsd:element minOccurs="0" name="CustomerReferencesGroup">
                <xsd:annotation>
                  <xsd:documentation>Customer References Group Data
Example: Cost Centre, Employee ID, etc.</xsd:documentation>
                </xsd:annotation>
                <xsd:complexType>
                  <xsd:sequence>
                    <xsd:element maxOccurs="7" name="CustomerReference">
                      <xsd:annotation>
                        <xsd:documentation>Customer Reference Data Example: Cost Centre, Employee ID etc. Max Length 255</xsd:documentation>
                      </xsd:annotation>
                      <xsd:complexType>
                        <xsd:simpleContent>
                          <xsd:extension base="xsd:string">
                            <xsd:attribute name="Number" type="xsd:integer" use="required">
                              <xsd:annotation>
                                <xsd:documentation>Values 01 - 07</xsd:documentation>
                              </xsd:annotation>
                            </xsd:attribute>
                            <xsd:attribute name="TypeCode" type="xsd:integer" use="required">
                              <xsd:annotation>
                                <xsd:documentation>Values 0001 - 0007</xsd:documentation>
                              </xsd:annotation>
                            </xsd:attribute>
                          </xsd:extension>
                        </xsd:simpleContent>
                      </xsd:complexType>
                    </xsd:element>
                  </xsd:sequence>
                  <xsd:attribute name="IBTA">
                    <xsd:annotation>
                      <xsd:documentation>Indicates if IBTA is applicable or not Values are Y or N</xsd:documentation>
                    </xsd:annotation>
                    <xsd:simpleType>
                      <xsd:restriction base="xsd:string">
                        <xsd:minLength value="1" />
                        <xsd:maxLength value="1" />
                      </xsd:restriction>
                    </xsd:simpleType>
                  </xsd:attribute>
                  <xsd:attribute name="AgencyNumber" type="xsd:string" use="required">
                    <xsd:annotation>
                      <xsd:documentation>Travel agency code identifies the Travel Agency submitting the Transaction</xsd:documentation>
                    </xsd:annotation>
                  </xsd:attribute>
                  <xsd:attribute name="OfficeNumber" type="xsd:string" use="required">
                    <xsd:annotation>
                      <xsd:documentation>Travel Office Code identifies the individual Travel Office submitting the Transaction within the Travel Agency</xsd:documentation>
                    </xsd:annotation>
                  </xsd:attribute>
                </xsd:complexType>
              </xsd:element>
            </xsd:sequence>
          </xsd:complexType>
        </xsd:element>
        <xsd:choice minOccurs="0">
          <xsd:sequence>
            <xsd:element minOccurs="0" ref="CardholderFirstName" />
            <xsd:element ref="CardholderLastName" />
          </xsd:sequence>
          <xsd:element name="CardholderFullName">
            <xsd:annotation>
              <xsd:documentation>Credit cardholder full name as it appears on the card</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
              <xsd:restriction base="xsd:string">
                <xsd:minLength value="1" />
              </xsd:restriction>
            </xsd:simpleType>
          </xsd:element>
        </xsd:choice>
        <xsd:element minOccurs="0" ref="ApprovalCode">
          <xsd:annotation>
            <xsd:documentation>MANUAL Credit card approval code.  Minimum 5 characters alphanumeric. Example: 996456</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="ApprovalTransactionNumber" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Transaction identifier returned by the Merchant service provider for the authorization request. Used in case a void of the authorization is necessary. (For MiGS this is the vpc_TransNo, for CyberSource this is the ccAuthReversalService_authRequestID)</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="PaymentPlanInfo">
          <xsd:annotation>
            <xsd:documentation>Detailed information about an applied payment plan (example: pagos parcelados)</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:sequence>
              <xsd:element name="PlanCode" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>as defined by the participating airline
(3-6 AN)
Example: AA008</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element name="NbrOfInstallments">
                <xsd:annotation>
                  <xsd:documentation>The number of installments applicable. Must be 2 digits, leading "0" applies. Example: 04</xsd:documentation>
                </xsd:annotation>
                <xsd:simpleType>
                  <xsd:restriction base="xsd:integer">
                    <xsd:totalDigits value="2" />
                  </xsd:restriction>
                </xsd:simpleType>
              </xsd:element>
              <xsd:element name="InstallmentAmount" type="xsd:integer">
                <xsd:annotation>
                  <xsd:documentation>the total installment (based on all tickets covered by this payment plan entry)

Example 
125025 (no decimal)</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element maxOccurs="unbounded" name="NetBalance">
                <xsd:annotation>
                  <xsd:documentation>Net Balance (after first installment) of the base fare of the individual ticket 

Example: 
2550.50 (with decimal)</xsd:documentation>
                </xsd:annotation>
                <xsd:complexType>
                  <xsd:sequence>
                    <xsd:element ref="Amount" />
                  </xsd:sequence>
                  <xsd:attribute name="PassengerTypeCode" type="xsd:string" use="required">
                    <xsd:annotation>
                      <xsd:documentation>Passenger Type Code associated to this entry

Example:  ADT</xsd:documentation>
                    </xsd:annotation>
                  </xsd:attribute>
                </xsd:complexType>
              </xsd:element>
              <xsd:element minOccurs="0" name="PaymentExtension" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>Valid value: E</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
            </xsd:sequence>
          </xsd:complexType>
        </xsd:element>
        <xsd:element minOccurs="0" ref="ExtendedPayment" />
        <xsd:element minOccurs="0" ref="Remark" />
        <xsd:element minOccurs="0" name="CCAddressGroup">
          <xsd:complexType>
            <xsd:sequence>
              <xsd:element maxOccurs="2" name="Address" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>Street or PO Box address.  Example: 1234 Main Street</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element name="City" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>City name.  Example: NY</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element name="PostalCode" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>Postal code or zip code.  Example: 12345</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" name="StateCode" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>State code.  Example: NY</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element name="CountryCode" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>Country code.  Example: US</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" name="StreetNumber" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation source="DESCRIPTION" xml:lang="en">Street number (if not included in Address lines.)
Example: 100</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
            </xsd:sequence>
          </xsd:complexType>
        </xsd:element>
      </xsd:sequence>
      <xsd:attribute name="PartialAmount" type="xsd:positiveInteger">
        <xsd:annotation>
          <xsd:documentation>The PartialAmount must only be specified in case of a split payment (see FormOfPayment). In case of a split payment, it is optional for one and mandatory for all other means of payment elements.

If is left out for one of the means of payment, the PartialAmounts specified for the other means of payment will be charged to each of them respectively and the remaining amount will be charged to the means of payment without PartialAmount. If a PartialAmount is specified for all means of payment, an error may occur, e.g. at time of tickting, if the total amount to be paid differs from the sum of the PartialAmounts.

The PartialAmount is specified as an integer. It is interpreted to be of the same currency as the amount to be paid and based on the number of decimals for this currency, the rightmost digits are taken to be decimal places.

Not to be confused w/ amount entered for authorization in Authorization/Amount element.</xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="CreditCardInformation">
    <xsd:annotation>
      <xsd:documentation>Credit Card information group</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent mixed="false">
        <xsd:extension base="CreditCardInformationType" />
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="Crib" type="xsd:integer">
    <xsd:annotation>
      <xsd:documentation>Number of cribs.  Example: 1</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="CustomerIdentification">
    <xsd:annotation>
      <xsd:documentation>Customer identification group</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element ref="Text" />
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="CustomerProfile">
    <xsd:annotation>
      <xsd:documentation>Customer profile group</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" ref="PassengerAccountRecord" />
        <xsd:element minOccurs="0" ref="BusinessAccountRecord" />
        <xsd:element minOccurs="0" ref="MasterAccountRecord" />
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="DepartureCity">
    <xsd:annotation>
      <xsd:documentation>Departure city code or city name.  If Type is R (refund) or C (change) the departure city can be empty.   Example: YYZ</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleType>
      <xsd:restriction base="xsd:string" />
    </xsd:simpleType>
  </xsd:element>
  <xsd:element name="DepartureCode" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>Departure airport or city code.  Example: MIA</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="DepartureDate" type="xsd:date">
    <xsd:annotation>
      <xsd:documentation>Departure date in ISO 8601 format.  Example: 2002-12-25</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="DeparturePoint" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>Departure point.  Example: Terminal 1</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="DepartureTime">
    <xsd:annotation>
      <xsd:documentation>Departure time in ISO 8601 format (hh:mm).  Example: 10:30</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleType>
      <xsd:restriction base="xsd:string">
        <xsd:pattern value="([0-1][0-9]|2[0-4]):[0-5][0-9]">
          <xsd:annotation>
            <xsd:documentation />
          </xsd:annotation>
        </xsd:pattern>
      </xsd:restriction>
    </xsd:simpleType>
  </xsd:element>
  <xsd:element name="Description" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>Tax or surcharge description.  Example: US national transportation</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="Designator" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>Tax or surcharge designator.  Example: US</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="DestinationCity" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>Destination city code or city name.  If Type is R (refund) or C (change) the destination city can be empty.  Example: Toronto</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="DestinationCityCode" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>Destination city code.  Example: MIA</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="DirectPricing">
    <xsd:annotation>
      <xsd:documentation>Direct pricing using a fare reference for a particular passenger/segment combination. Only supported in LCC adapter (Non-GDS pricing).</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element maxOccurs="2" name="Fare">
          <xsd:annotation>
            <xsd:documentation>Up to two one way fares or  one round trip fare can be priced together.</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:sequence>
              <xsd:element maxOccurs="2" ref="SegmentIDRef" />
              <xsd:element ref="FareRefKey" />
            </xsd:sequence>
          </xsd:complexType>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="Discount">
    <xsd:annotation>
      <xsd:documentation>Pricing discount value.  Example: 2000</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:simpleContent>
        <xsd:extension base="xsd:string">
          <xsd:attribute name="Type" use="required">
            <xsd:annotation>
              <xsd:documentation>Type of discount.  Values are:
P = Percent
A = Amount Example: A</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
              <xsd:restriction base="xsd:string">
                <xsd:minLength value="1" />
                <xsd:maxLength value="1" />
                <xsd:enumeration value="P" />
                <xsd:enumeration value="A" />
              </xsd:restriction>
            </xsd:simpleType>
          </xsd:attribute>
        </xsd:extension>
      </xsd:simpleContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="DiscountGroup">
    <xsd:annotation>
      <xsd:documentation>Discount pricing group</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" maxOccurs="unbounded" ref="SegmentIDRef" />
        <xsd:element minOccurs="0" maxOccurs="unbounded" ref="TravelerIDRef" />
        <xsd:element minOccurs="0" ref="FareBasisCode" />
        <xsd:element minOccurs="0" ref="TicketDesignator" />
        <xsd:element minOccurs="0" ref="Discount" />
        <xsd:element minOccurs="0" ref="CurrencyCode" />
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="DiscountInfo">
    <xsd:annotation>
      <xsd:documentation>Passenger discount information group</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" ref="Type" />
        <xsd:element minOccurs="0" ref="Amount" />
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="DiscountPricing">
    <xsd:annotation>
      <xsd:documentation>Pricing fare basis and discount information</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element maxOccurs="unbounded" ref="DiscountGroup" />
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="Display">
    <xsd:annotation>
      <xsd:documentation>Display group</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" ref="History" />
        <xsd:element minOccurs="0" ref="HistoricalFares" />
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="DocumentInvoiceRemark">
    <xsd:annotation>
      <xsd:documentation>Document invoice remark group</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" maxOccurs="unbounded" ref="TravelerIDRef" />
        <xsd:element minOccurs="0" ref="SegmentIDRef" />
        <xsd:element minOccurs="0" ref="Keyword" />
        <xsd:element ref="Text" />
      </xsd:sequence>
      <xsd:attribute name="Type" use="optional">
        <xsd:annotation>
          <xsd:documentation>Type of itinerary remark.  Values are:
A = Air
C = Car
H = Hotel
Example: A</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:enumeration value="A" />
            <xsd:enumeration value="C" />
            <xsd:enumeration value="H" />
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:attribute>
      <xsd:attribute name="PrintCode" type="xsd:string" use="required">
        <xsd:annotation>
          <xsd:documentation>defines where this remark is to be printed.
Possible values are:

IT = Itinerary Only
IN = Inv/PaxReceipt
II = Inv/Itin/PaxReceipt 
ET = Etkt PaxReceipt only
</xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="DollarValue" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>Dollar amount value for credit card payment.  Example: 56.40</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="DropOff">
    <xsd:annotation>
      <xsd:documentation>Drop off information group</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:choice>
          <xsd:element ref="AirportCode" />
          <xsd:element ref="Location" />
        </xsd:choice>
        <xsd:element ref="Date" />
        <xsd:element minOccurs="0" ref="Time" />
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="DropOffDate" type="xsd:date">
    <xsd:annotation>
      <xsd:documentation>Car rental drop off date.  Example: 2002-12-31</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="DropOffInfo">
    <xsd:annotation>
      <xsd:documentation>Drop off information group</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element ref="Date" />
        <xsd:element minOccurs="0" ref="Time">
          <xsd:annotation>
            <xsd:documentation>Time in ISO 8601 format (hh:mm).  
MANDATORY for Amadeus!

Example: 14:30</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" ref="CityCode" />
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="DuePaidAmount" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>Due or paid amount.  Example: 15200</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="DuePaidText">
    <xsd:annotation>
      <xsd:documentation>Due paid text group</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element ref="DuePaidTextType" />
        <xsd:element minOccurs="0" ref="Date" />
        <xsd:element ref="DuePaidAmount" />
        <xsd:element minOccurs="0" ref="CurrencyCode" />
        <xsd:element minOccurs="0" ref="Text" />
      </xsd:sequence>
      <xsd:attribute default="D" name="Indicator">
        <xsd:annotation>
          <xsd:documentation>Due, paid or text indicator.  Values are:
D = Due
P = Paid
T = Text
Example: D</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:enumeration value="D" />
            <xsd:enumeration value="P" />
            <xsd:enumeration value="T" />
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:attribute>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="DuePaidTextType">
    <xsd:annotation>
      <xsd:documentation>Due paid text type.  Values are:
AS = Surface
AX = Air taxi
AT = Tour operator
AH = Airimp hotel
AC = Airimp car
Example: AS</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleType>
      <xsd:restriction base="xsd:string">
        <xsd:enumeration value="AS" />
        <xsd:enumeration value="AX" />
        <xsd:enumeration value="AT" />
        <xsd:enumeration value="AH" />
        <xsd:enumeration value="AC" />
      </xsd:restriction>
    </xsd:simpleType>
  </xsd:element>
  <xsd:element name="Email" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>Traveler email address.  Example: abc@test.com</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="EmailAddress">
    <xsd:annotation>
      <xsd:documentation>Email address group</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" maxOccurs="unbounded" ref="TravelerIDRef" />
        <xsd:element ref="Email" />
        <xsd:element minOccurs="0" name="Language" type="CountryCodeAlpha2">
          <xsd:annotation>
            <xsd:documentation>Language(s) preferred by traveler using .net language codes (localization codes). 

Sample:  fr-ca</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
      <xsd:attribute name="Type" use="optional">
        <xsd:annotation>
          <xsd:documentation>Email type.  Values are:       A=Agency
B = BUSINESS
H = HOME
E = EMERGENCY
O = OTHER                     T =  Travel Arranger 

Example: H</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:enumeration value="B" />
            <xsd:enumeration value="H" />
            <xsd:enumeration value="E" />
            <xsd:enumeration value="O" />
            <xsd:enumeration value="A" />
            <xsd:enumeration value="T" />
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:attribute>
      <xsd:attribute name="OperationalContact" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>Allowed value "Y". If present this email address is designated as the operational contact</xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="EndLine" type="xsd:integer">
    <xsd:annotation>
      <xsd:documentation>Profile end line of elements to be moved into PNR.  Example: 4</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="EndTransaction">
    <xsd:annotation>
      <xsd:documentation>End of transaction group</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" ref="PNRName" />
        <xsd:element minOccurs="0" ref="PseudoCityCode" />
        <xsd:element minOccurs="0" maxOccurs="unbounded" ref="Queue" />
        <xsd:element minOccurs="0" name="ItinReceipt">
          <xsd:annotation>
            <xsd:documentation>Please verify support for auto generation of receipt documents by the source before using this construct. The presence of the node triggers the auto generation of a full or partial itinerary receipt or not per the Mode attribute. If the node is not present - the system default will apply.</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:attribute name="Mode" type="xsd:string" use="required">
              <xsd:annotation>
                <xsd:documentation>Denotes itinerary to send
C - Complete itinerary, 
P - Partial (updates only), 
N - Do not send</xsd:documentation>
              </xsd:annotation>
            </xsd:attribute>
          </xsd:complexType>
        </xsd:element>
      </xsd:sequence>
      <xsd:attribute name="TransactionType" use="required">
        <xsd:annotation>
          <xsd:documentation>End of transaction type.  Values are:
ET = End transaction
ER = End transaction and retrieve PNR
IG = Ignore transaction
IR = Ignore transaction and retrieve PNR
RD = Redisplay
QT = End transaction and queue
QR = End transaction, queue and retrieve PNR
EK = Confirm schedule changes and end transact (only supported for Amadues and Apollo so far)

Example: ET</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:enumeration value="ET" />
            <xsd:enumeration value="ER" />
            <xsd:enumeration value="IG" />
            <xsd:enumeration value="IR" />
            <xsd:enumeration value="RD" />
            <xsd:enumeration value="QT" />
            <xsd:enumeration value="QR" />
            <xsd:enumeration value="EK" />
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:attribute>
      <xsd:attribute default="N" name="IgnoreWarnings" use="optional">
        <xsd:annotation>
          <xsd:documentation>Option to ignore warning for change of segments with restricted class of service.  Values are:  Y = Yes, N = No.  Example: N</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:enumeration value="Y" />
            <xsd:enumeration value="N" />
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:attribute>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="Equipment">
    <xsd:annotation>
      <xsd:documentation>Flight equipment group</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element ref="Code" />
        <xsd:element ref="Name" />
      </xsd:sequence>
      <xsd:attribute name="AircraftType" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>Airline specific 'physical aircraft type'

Example:  757</xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="ExtendedPayment">
    <xsd:annotation>
      <xsd:documentation>Credit card extended payment.  Values are:
Y = Add extended payment
N = Do not add extended payment
Example: N</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:simpleContent>
        <xsd:extension base="xsd:string">
          <xsd:attribute name="NumberOfMonths" type="xsd:positiveInteger">
            <xsd:annotation>
              <xsd:documentation>If and only if the value of the ExtendedPayment is set to Y.
Identifies the period of extended payment in months. Usually credit card systems allows a payment to be extended over a certain number of months. The actual timeframe will vary depending on the credit card system.</xsd:documentation>
            </xsd:annotation>
          </xsd:attribute>
          <xsd:attribute name="PlanCode" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>A promotional code offered by Airline/CreditCard company to allow extended payments with or without deposit requirements</xsd:documentation>
            </xsd:annotation>
          </xsd:attribute>
          <xsd:attribute name="DepositAmount" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>If dictated by the entered PlanCode this is the amount of the initial payment (deposit).  The amount is goverend by the POS currency as defined in the Fare group.</xsd:documentation>
            </xsd:annotation>
          </xsd:attribute>
        </xsd:extension>
      </xsd:simpleContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="ExtraAdult" type="xsd:integer">
    <xsd:annotation>
      <xsd:documentation>Number of extra adult.  Example: 1</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="ExtraChild" type="xsd:integer">
    <xsd:annotation>
      <xsd:documentation>Number of extra child.  Example: 1</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="Failure">
    <xsd:annotation>
      <xsd:documentation>Failure to confirm penalty group</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" ref="Amount" />
        <xsd:element minOccurs="0" maxOccurs="unbounded" ref="Text" />
        <xsd:element ref="Taxes" />
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="FareApplication">
    <xsd:annotation>
      <xsd:documentation>Fare application information.  Possible values are:
ONE = total amount for one passenger
PER = total amount per person in the group
ALL = total amount for all passengers
Example: ALL</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleType>
      <xsd:restriction base="xsd:string">
        <xsd:minLength value="3" />
        <xsd:maxLength value="3" />
        <xsd:enumeration value="ONE" />
        <xsd:enumeration value="PER" />
        <xsd:enumeration value="ALL" />
      </xsd:restriction>
    </xsd:simpleType>
  </xsd:element>
  <xsd:element name="FareBasisCode" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>Fare basis code to price.  Example: BAP7</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="FeeApplies">
    <xsd:annotation>
      <xsd:documentation>Fee applies group</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:attribute default="N" name="FailureToConfirm">
        <xsd:annotation>
          <xsd:documentation>Y = Pax must confirm space
N = No confirmation required
Example: N</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:enumeration value="Y" />
            <xsd:enumeration value="N" />
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:attribute>
      <xsd:attribute default="N" name="Cancellation">
        <xsd:annotation>
          <xsd:documentation>Y = Cancellation fee applies
N = No cancellation fee
Example: N</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:enumeration value="Y" />
            <xsd:enumeration value="N" />
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:attribute>
      <xsd:attribute default="N" name="Carrier">
        <xsd:annotation>
          <xsd:documentation>Y = Carrier fee applies
N = No carrier fee
Example: N</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:enumeration value="Y" />
            <xsd:enumeration value="N" />
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:attribute>
      <xsd:attribute default="N" name="ReplaceTicket">
        <xsd:annotation>
          <xsd:documentation>Y = Replacement fee applies
N = No replacement fee
Example: N</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:enumeration value="Y" />
            <xsd:enumeration value="N" />
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:attribute>
      <xsd:attribute default="N" name="ChangeItinerary">
        <xsd:annotation>
          <xsd:documentation>Y = Change itinerary fee applies
N = No change fee
Example: N</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:enumeration value="Y" />
            <xsd:enumeration value="N" />
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:attribute>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="FFCode" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>Frequent flyer code.  Example: DL</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="FFCompanyCode" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>Frequent flyer company code.  Example: AF</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="FFFlyingCompany" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>Frequent flyer flying company on which the miles will be accrued.  Example: DL</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="FFNumber" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>Frequent flyer number.  Example: 0956301007</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="FGCode" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>Frequent guest code.  Example: MC</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="FGNumber" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>Frequent guest number.  Example: 123456</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="Flight">
    <xsd:annotation>
      <xsd:documentation>Flight group</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element ref="Departure" />
        <xsd:element ref="Arrival" />
        <xsd:element ref="Carrier" />
        <xsd:element ref="ClassOfService" />
        <xsd:element ref="NumberInParty" />
        <xsd:element minOccurs="0" ref="ActionCode">
          <xsd:annotation>
            <xsd:documentation>Action code for the sell of a segment.  This a standard defined action code used by different airlines and reservation systems.  If omitted the default value is NN. 

NOTE: For passive segments (Flight/@Type="P"), it is mandatory to set an appropriate passive ActionCode!

Example: GK</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" ref="InstantPurchase">
          <xsd:annotation>
            <xsd:documentation>Instant Purchase indicator.  See FLX Codeset document for applicable values.

Example: CC</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" ref="SegmentRefKey">
          <xsd:annotation>
            <xsd:documentation>*** deprecated, only used for AC ***

SegmentRefKey contains  references for subsequent transactions </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" ref="PriceClass" />
        <xsd:element minOccurs="0" ref="FareRefKey">
          <xsd:annotation>
            <xsd:documentation>If this value is present in the FlightPriceRS it must be mapped to this request</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:choice minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>FOR PASSIVE SEGMENTS ONLY:</xsd:documentation>
          </xsd:annotation>
          <xsd:element name="VendorLocator">
            <xsd:annotation>
              <xsd:documentation>This element can be used to attach the record locator for passive segments booked outside of a GDS. Or in general, use this element to enter a vendor specifc airline record locator in case the segment was booked directly with the airline.</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
              <xsd:restriction base="xsd:string" />
            </xsd:simpleType>
          </xsd:element>
          <xsd:element ref="Agent" />
        </xsd:choice>
        <xsd:element minOccurs="0" ref="OperatingCarrier">
          <xsd:annotation>
            <xsd:documentation>This node is deprecated as of FLX Schema version 4.3 and will be physically removed in version 4.6</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
      <xsd:attributeGroup ref="sourceOptional" />
      <xsd:attribute name="AssociationID" type="xsd:ID" use="required">
        <xsd:annotation>
          <xsd:documentation>Unique segment ID used to associate other elements to this segment at PNR creation time.  Example: F1</xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="OriginDestinationID" type="xsd:string" use="required">
        <xsd:annotation>
          <xsd:documentation>Specifies a group of flights per origin destination. 
Example: OD1</xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="Type" use="optional">
        <xsd:annotation>
          <xsd:documentation>Optional flight type.  This is used to specify passive or open segments.  Values are:
P = Passive
O = Open

If tyoe is set to O(Open segment) then departure date/time, arrival date/time and flight number don't have to be set.

Example: P</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:enumeration value="P" />
            <xsd:enumeration value="O" />
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:attribute>
      <xsd:attribute name="CnxxIndicator" use="optional">
        <xsd:annotation>
          <xsd:documentation>Connection indicator.  Example: Y = Yes, N = No</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:enumeration value="Y" />
            <xsd:enumeration value="N" />
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:attribute>
      <xsd:attribute name="MarriedSegment" use="optional">
        <xsd:annotation>
          <xsd:documentation>Married connection indicator.  Values are listed in FLX Codeset document.  Example: 
B = Beginning of a group of married segments
E = End of a group of married segments</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string" />
        </xsd:simpleType>
      </xsd:attribute>
      <xsd:attribute name="SecureFlight" use="optional">
        <xsd:annotation>
          <xsd:documentation>Indicates if Secure Flight data is required for this flight.  
Values:
Y = Secure flight data must be provided
N = (Default) flight does not require Secure Flight data</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:enumeration value="Y" />
            <xsd:enumeration value="N" />
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:attribute>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="FlightArrival">
    <xsd:annotation>
      <xsd:documentation>Flight arrival information group</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element ref="AirlineCode" />
        <xsd:element ref="FlightNumber" />
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="FlightOptions">
    <xsd:annotation>
      <xsd:documentation>Alternate flights offered w/this service, such as stand by flight choices (or reaccommodation flights)</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element maxOccurs="unbounded" ref="Flight">
          <xsd:annotation>
            <xsd:documentation>Flight group</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
      <xsd:attribute name="DepartureCode" use="required">
        <xsd:annotation>
          <xsd:documentation>Departure airport or city code for overall OD.  Example: JFK</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:minLength value="3" />
            <xsd:maxLength value="3" />
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:attribute>
      <xsd:attribute name="ArrivalCode" use="required">
        <xsd:annotation>
          <xsd:documentation>Arrival airport or city code for overall OD.  Example: MIA</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:minLength value="3" />
            <xsd:maxLength value="3" />
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:attribute>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="FlightReferences">
    <xsd:annotation>
      <xsd:documentation>Flight/Segment element associated to this item</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element ref="AirlineCode" />
        <xsd:element ref="FlightNumber" />
        <xsd:element ref="ClassOfService" />
        <xsd:element ref="Date" />
        <xsd:element ref="Time" />
        <xsd:element ref="DepartureCode" />
        <xsd:element ref="ArrivalCode" />
      </xsd:sequence>
      <xsd:attribute name="BookingDate" type="xsd:date" use="required">
        <xsd:annotation>
          <xsd:documentation>ISO format: yyyy-mm-dd</xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="BookingTime" type="xsd:string" use="required">
        <xsd:annotation>
          <xsd:documentation>ISO format: hh:mm:ss.sssZ</xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="FormOfPayment">
    <xsd:annotation>
      <xsd:documentation>Form of payment group</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" maxOccurs="unbounded" ref="TravelerIDRef" />
        <xsd:element minOccurs="0" maxOccurs="unbounded" ref="SegmentIDRef">
          <xsd:annotation>
            <xsd:documentation>ID reference used to asscociate this item to a segment.  

Note: When attribute ServicesOnly is set to "Y" there can not be any SegmentElementNumber association (traveler association is allowed) 

Example: F1</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" maxOccurs="unbounded" ref="ServiceIDRef" />
        <xsd:choice maxOccurs="3">
          <xsd:element ref="CreditCard" />
          <xsd:element ref="Other">
            <xsd:annotation>
              <xsd:documentation>Other payment information.  Example: CHECK, CASH</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:choice>
      </xsd:sequence>
      <xsd:attribute name="ServicesOnly" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>Identifies that this FOP is only used for Services as defined under the "Service" node. When set to yes, NO "SegmenetElementNumber" reference is allowed (Traveler association still allowed).  Values: Y and N (default)</xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="FrequentFlyer">
    <xsd:annotation>
      <xsd:documentation>Frequent flyer group</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" ref="FFCode" />
        <xsd:element ref="FFNumber" />
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="FrequentGuest">
    <xsd:annotation>
      <xsd:documentation>Frequent guest group</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" ref="FGCode" />
        <xsd:element ref="FGNumber" />
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="FrequentTravelerGroup">
    <xsd:annotation>
      <xsd:documentation>FrequentTravelerGroup</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element ref="TravelerIDRef" />
        <xsd:sequence>
          <xsd:element ref="FFCompanyCode" />
          <xsd:element ref="FFNumber" />
          <xsd:element minOccurs="0" ref="FFFlyingCompany" />
          <xsd:element minOccurs="0" name="SubscriberName">
            <xsd:annotation>
              <xsd:documentation>Name group</xsd:documentation>
            </xsd:annotation>
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element ref="Surname">
                  <xsd:annotation>
                    <xsd:documentation>Subscriber family name.  Example: SMITH</xsd:documentation>
                  </xsd:annotation>
                </xsd:element>
                <xsd:element ref="GivenName">
                  <xsd:annotation>
                    <xsd:documentation>Subscriber given (first) name. Example: JANE</xsd:documentation>
                  </xsd:annotation>
                </xsd:element>
                <xsd:element minOccurs="0" ref="Initial">
                  <xsd:annotation>
                    <xsd:documentation>Suscriber initial or middle name Example: G or George</xsd:documentation>
                  </xsd:annotation>
                </xsd:element>
                <xsd:element minOccurs="0" ref="Title">
                  <xsd:annotation>
                    <xsd:documentation>Subscriber title.  Example: MISS, MRS, REV</xsd:documentation>
                  </xsd:annotation>
                </xsd:element>
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
        <xsd:element minOccurs="0" maxOccurs="unbounded" name="FreqGuestNumber">
          <xsd:annotation>
            <xsd:documentation>Frequent Guest Card and Status information</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:sequence>
              <xsd:element ref="CompanyCode" />
              <xsd:element ref="IDNumber">
                <xsd:annotation>
                  <xsd:documentation>Frequent Renter or Guest ID number.  Example: 0956301007</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" ref="ProgramName">
                <xsd:annotation>
                  <xsd:documentation>Program name.  

Example: 
Miles and More (air)
Hilton HHonors (hotel)
Emerald Club (car)</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" name="Association">
                <xsd:annotation>
                  <xsd:documentation>Associated airline frequent flyer program.  This is the frequent flyer program a traveler assigns in order to earn additional miles/points from hotel and/or car companies</xsd:documentation>
                </xsd:annotation>
                <xsd:complexType>
                  <xsd:sequence>
                    <xsd:element ref="AirlineCode">
                      <xsd:annotation>
                        <xsd:documentation>Issuing Airline Code.  Example: LH</xsd:documentation>
                      </xsd:annotation>
                    </xsd:element>
                    <xsd:element ref="IDNumber">
                      <xsd:annotation>
                        <xsd:documentation>Frequent flyer ID number.  Example: 0956301007</xsd:documentation>
                      </xsd:annotation>
                    </xsd:element>
                  </xsd:sequence>
                </xsd:complexType>
              </xsd:element>
            </xsd:sequence>
            <xsd:attribute name="Type">
              <xsd:annotation>
                <xsd:documentation>Identified association to one of the following groups:

C = CAR
H = HOTEL </xsd:documentation>
              </xsd:annotation>
            </xsd:attribute>
          </xsd:complexType>
        </xsd:element>
        <xsd:element minOccurs="0" maxOccurs="unbounded" name="OtherMemberships">
          <xsd:annotation>
            <xsd:documentation>Discount Cards such as AAA, AARP, etc.</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:sequence>
              <xsd:element minOccurs="0" ref="AssociationCode" />
              <xsd:element ref="IDNumber">
                <xsd:annotation>
                  <xsd:documentation>Membership ID number.  Example: 0956301007</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" ref="ProgramName">
                <xsd:annotation>
                  <xsd:documentation>Program name.  

Example: 
AARP Membership
AAA Membership</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
            </xsd:sequence>
          </xsd:complexType>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="GeneralRemark">
    <xsd:annotation>
      <xsd:documentation>General remark group.  If TravelerAssociationNumber is not included, then GeneralRemark applies to all travelers.                  NOTE: Amadeus allows general remarks to be associated (SegmentIDRef) with Air segments only.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" maxOccurs="unbounded" ref="TravelerIDRef" />
        <xsd:element minOccurs="0" maxOccurs="unbounded" ref="SegmentIDRef" />
        <xsd:element ref="Text" />
      </xsd:sequence>
      <xsd:attribute default="" name="Category" type="xsd:string" use="optional">
        <xsd:annotation>
          <xsd:documentation source="Identifies remark category (e.g. alpha coded remarks in Sabre); possible values are 'C', 'T'">Identifies remark category (e.g. alpha coded remarks in Sabre); possible values are 'C', 'T'.</xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute default="" name="Type" type="xsd:string" use="optional">
        <xsd:annotation>
          <xsd:documentation>Identifies special type of GeneralRemark, e.g. BackOfficeRemark in Amadeus (Type = 'B').</xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="GroupInfo">
    <xsd:annotation>
      <xsd:documentation>Detailed Group PNR information.  This information will be used tocreate a Group PNR and to generate mandatory Group SSR (GRPS) elements.

Some data such as time limits for deposit and for submitting individual names can be used for PNR entries where allowed/required and serve as additional group information</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="GroupName">
          <xsd:annotation>
            <xsd:documentation>Group name.
(Mandatory for group SSR)
Example: ColoradoRiverRafting</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="GroupApproval">
          <xsd:annotation>
            <xsd:documentation>Approval number given by airline. 
(Optional for group SSR)

Example: IT90</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element maxOccurs="unbounded" name="GroupFareDetails">
          <xsd:annotation>
            <xsd:documentation>For each PTC (Passenger Type Code) separate details are needed</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:sequence>
              <xsd:element ref="FareBasisCode">
                <xsd:annotation>
                  <xsd:documentation>This is the contracted Fare Basis Code. 
Note: A Fare Basis Code may all that is assigned to a group.

Example: GWKD7</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:sequence minOccurs="0">
                <xsd:element ref="Amount">
                  <xsd:annotation>
                    <xsd:documentation>Fare Base Amount.  
Note: An amount is not necessarily needed for a group, a Fare Basis Code may be used as a group contract base.
Example: 7500</xsd:documentation>
                  </xsd:annotation>
                </xsd:element>
                <xsd:element ref="CurrencyCode" />
              </xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="unbounded" name="PTC">
                <xsd:annotation>
                  <xsd:documentation>PTCs covered by this FareBasis code

Any IATA PTC is possible but these Group specific values are most common here: 
GIT = Group Inclusive Tour
GYT = Youth Group
GIY = Group InclTour Youth
GRP = Group
GSP = Group School Party

Example: GIT</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
            </xsd:sequence>
          </xsd:complexType>
        </xsd:element>
        <xsd:element name="GroupSize">
          <xsd:annotation>
            <xsd:documentation>Group size details</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:choice>
              <xsd:element name="OriginalSeats">
                <xsd:annotation>
                  <xsd:documentation>The number of seats originally contracted for this group.
Example: 80</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element name="SeatAddition">
                <xsd:annotation>
                  <xsd:documentation>Number of seats to be added to current allocation.
Example: 10</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element name="SeatReduction">
                <xsd:annotation>
                  <xsd:documentation>Number of seats to be removed from current seat allocation.
Example: 10</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
            </xsd:choice>
          </xsd:complexType>
        </xsd:element>
        <xsd:element minOccurs="0" name="NameTimeLimit">
          <xsd:annotation>
            <xsd:documentation>Date by which the individual names must be given.  Also called the NTBA (Names to be advised) or Names Time Limit.
</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:sequence>
              <xsd:element ref="Date">
                <xsd:annotation>
                  <xsd:documentation>Date to be given in ISO 8601 format (yyyy-mm-dd)

Example: 2009-05-10</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
            </xsd:sequence>
          </xsd:complexType>
        </xsd:element>
        <xsd:element minOccurs="0" name="DepositTimeLimit">
          <xsd:annotation>
            <xsd:documentation>Date by which the contracted deposit is to be paid.  There may be multiple deposit time limits (at various stages of the group sale)</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:sequence>
              <xsd:element ref="Date">
                <xsd:annotation>
                  <xsd:documentation>Date to be given in ISO 8601 format (yyyy-mm-dd)

Example: 2009-05-10</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:choice>
                <xsd:element name="Percentage">
                  <xsd:annotation>
                    <xsd:documentation>Typically a percentage (without fraction), e.g. 25% of the total group fare.

Example:  25</xsd:documentation>
                  </xsd:annotation>
                </xsd:element>
                <xsd:sequence>
                  <xsd:element ref="Amount" />
                  <xsd:element ref="CurrencyCode" />
                </xsd:sequence>
              </xsd:choice>
            </xsd:sequence>
          </xsd:complexType>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="Guarantee">
    <xsd:annotation>
      <xsd:documentation>Guarantee information.  Values are: Y = Yes, N = No.  Example: Y</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleType>
      <xsd:restriction base="xsd:string">
        <xsd:enumeration value="Y" />
        <xsd:enumeration value="N" />
      </xsd:restriction>
    </xsd:simpleType>
  </xsd:element>
  <xsd:element name="HiddenRemark">
    <xsd:annotation>
      <xsd:documentation>Hidden remark.  Example: Unknown</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" ref="TravelerIDRef" />
        <xsd:element ref="Text" />
        <xsd:element minOccurs="0" maxOccurs="5" ref="PseudoCityCode" />
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="HistoricalFares">
    <xsd:annotation>
      <xsd:documentation>Display historical fares.  Values are: Y = Yes, N = No.  Example: Y</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleType>
      <xsd:restriction base="xsd:string">
        <xsd:minLength value="1" />
        <xsd:maxLength value="1" />
        <xsd:enumeration value="Y" />
        <xsd:enumeration value="N" />
      </xsd:restriction>
    </xsd:simpleType>
  </xsd:element>
  <xsd:element name="HistoricalRemark">
    <xsd:annotation>
      <xsd:documentation>Historical remark group</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element ref="Text" />
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="History">
    <xsd:annotation>
      <xsd:documentation>Display history of fares.  Values are: Y = Yes, N = No.  Example: Y</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleType>
      <xsd:restriction base="xsd:string">
        <xsd:minLength value="1" />
        <xsd:maxLength value="1" />
        <xsd:enumeration value="Y" />
        <xsd:enumeration value="N" />
      </xsd:restriction>
    </xsd:simpleType>
  </xsd:element>
  <xsd:element name="Hotel">
    <xsd:annotation>
      <xsd:documentation>Hotel information group. NOTE: most of the hotel will require a credit card for guarantee or deposit. Pls. see SuplementalInformation/PaymentGurantee element.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" maxOccurs="8" ref="TravelerIDRef" />
        <xsd:element ref="CheckInDate" />
        <xsd:element ref="CheckOutDate" />
        <xsd:element ref="NumberOfNights" />
        <xsd:element ref="NumberOfPersons" />
        <xsd:element ref="ChainCode" />
        <xsd:element ref="PropertyCode" />
        <xsd:element ref="CityCode" />
        <xsd:element ref="Room" />
        <xsd:element minOccurs="0" ref="SupplementalInformation" />
      </xsd:sequence>
      <xsd:attribute name="AssociationID" type="xsd:ID" use="required">
        <xsd:annotation>
          <xsd:documentation>Unique segment ID used to associate other elements to this segment at PNR creation time.  Example: H1</xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="SellType" use="required">
        <xsd:annotation>
          <xsd:documentation>Type of GDS link that the hotel participates in.  Values are:

ASA = Amadeus standard access 
ACA = Amadeus complete access 
ACP = Amadeus complete access plus 
ADY = Amadeus dynamic access 
AIA = Amadeus independent access

GIA = Galileo inside availability link 
GIP = Galileo inside shopper participant
GRM = Galileo roommaster only participant 
GLP = Galileo link partner

SDC = Sabre direct connect sell 
SOL = Sabre other link type 

WSV = Worldspan hotel source vendor
WAP = Worldspan hotel select vendor access plus
WNP = Worldspan hotel select vendor non-access plus

HRS = HRS direct access hotels

Example: GRM</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:enumeration value="ASA" />
            <xsd:enumeration value="ACA" />
            <xsd:enumeration value="ACP" />
            <xsd:enumeration value="ADY" />
            <xsd:enumeration value="AIA" />
            <xsd:enumeration value="GIA" />
            <xsd:enumeration value="GIP" />
            <xsd:enumeration value="GRM" />
            <xsd:enumeration value="GLP" />
            <xsd:enumeration value="SDC" />
            <xsd:enumeration value="SOL" />
            <xsd:enumeration value="WSV" />
            <xsd:enumeration value="WAP" />
            <xsd:enumeration value="WNP" />
            <xsd:enumeration value="HRS" />
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:attribute>
      <xsd:attribute default="N" name="ReturnRuleText">
        <xsd:annotation>
          <xsd:documentation>Option to request the return of rule text.  Values are:
Y = Yes
N = No
Example: N</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:enumeration value="Y" />
            <xsd:enumeration value="N" />
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:attribute>
      <xsd:attribute default="N" name="ShortSell" use="optional">
        <xsd:annotation>
          <xsd:documentation>Option to request hotel short sell.  Values are: Y = Yes, N = No.  Example:  N</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:enumeration value="Y" />
            <xsd:enumeration value="N" />
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:attribute>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="HotelInformation">
    <xsd:annotation>
      <xsd:documentation>Hotel information group</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" ref="HotelName" />
        <xsd:element minOccurs="0" maxOccurs="unbounded" ref="Address" />
        <xsd:element minOccurs="0" ref="TelephoneNumber" />
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="HotelName" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>Hotel name.  Example: Holiday Inn</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="HotelPassiveSegment">
    <xsd:annotation>
      <xsd:documentation>Hotel passive segment group</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" maxOccurs="8" ref="TravelerIDRef" />
        <xsd:element ref="CarrierCode" />
        <xsd:element ref="CheckInDate" />
        <xsd:element ref="CheckOutDate" />
        <xsd:element ref="CityCode" />
        <xsd:element ref="ActionCode" />
        <xsd:element ref="NumberOfRooms" />
        <xsd:element minOccurs="0" ref="RoomType" />
        <xsd:element minOccurs="0" ref="RoomRate" />
        <xsd:element minOccurs="0" ref="Guarantee" />
        <xsd:element minOccurs="0" ref="HotelInformation" />
        <xsd:element minOccurs="0" ref="ConfirmationNumber" />
        <xsd:element minOccurs="0" maxOccurs="unbounded" ref="Text" />
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="IDNumber" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>Identification number.  Example: 12345</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="InExchangeForTicket">
    <xsd:annotation>
      <xsd:documentation>Mandatory for AutoExchange applications such as ReShop from ITA.  If used, then the attribute @Reshop in the PricingInfo node MUST also be set to "Y".</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element maxOccurs="unbounded" name="TicketNumber">
          <xsd:annotation>
            <xsd:documentation>The 13-digit TicketNumber to be used for Auto Exchange proccesses, such as ReShop from ITA.

In case of a conjunctive set, this is the 1st number of the set.

Example: 0110987654321</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:simpleContent>
              <xsd:extension base="xsd:integer">
                <xsd:attributeGroup ref="sourceMandatory" />
                <xsd:attribute name="TravelerID" use="required">
                  <xsd:annotation>
                    <xsd:documentation>The traveler element number associated to this ticket.

Example: 1</xsd:documentation>
                  </xsd:annotation>
                </xsd:attribute>
                <xsd:attributeGroup ref="RefType" />
                <xsd:attribute name="PaxType" type="xsd:string" use="required">
                  <xsd:annotation>
                    <xsd:documentation>Passenger type priced from original ticket image. 

Some IATA values are :
ADT= Adult
CHD = Child
INF = Infant
GOV = Government
MIL = Military
SRC = Senior citizen
STD = Student
YTH = Youth
Example: CHD</xsd:documentation>
                  </xsd:annotation>
                </xsd:attribute>
              </xsd:extension>
            </xsd:simpleContent>
          </xsd:complexType>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="Infant">
    <xsd:annotation>
      <xsd:documentation>Information for the infant traveling with the passenger and not requiring a seat.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element ref="Surname" />
        <xsd:element ref="GivenName" />
        <xsd:element ref="DateOfBirth">
          <xsd:annotation>
            <xsd:documentation>Traveler birth date in ISO 8601 format (yyyy-mm-dd). Example: 2007-12-25</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" ref="Gender" />
      </xsd:sequence>
      <xsd:attribute name="AssociationID" type="xsd:ID" use="required">
        <xsd:annotation>
          <xsd:documentation>Unique traveler ID used to associate other elements to this traveler at PNR creation time.  Example: T1</xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="Type" type="xsd:string" use="optional">
        <xsd:annotation>
          <xsd:documentation>Infant PAX type. Although regular INF type will be automatically set, this optional attribute allows to enter a different PTC for infants. Particularly useful for bulk contracts - JNF pax type. 
Example: JNF</xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="InstantPurchase">
    <xsd:annotation>
      <xsd:documentation>Instant Purchase indicator.  For values please refer to FLX Codeset documentation.

Example: CC</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleType>
      <xsd:restriction base="xsd:string">
        <xsd:minLength value="1" />
        <xsd:maxLength value="2" />
      </xsd:restriction>
    </xsd:simpleType>
  </xsd:element>
  <xsd:element name="Insurance">
    <xsd:annotation>
      <xsd:documentation>Insurance segment information</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element ref="VendorCode" />
        <xsd:element ref="PurchaseDate" />
        <xsd:element minOccurs="0" ref="ActionCode" />
        <xsd:element minOccurs="0" ref="NumberInParty" />
        <xsd:element ref="DepartureCity" />
        <xsd:element ref="DepartureDate" />
        <xsd:element ref="DestinationCity" />
        <xsd:element ref="ReturnDate" />
        <xsd:element ref="PlanType" />
        <xsd:element maxOccurs="unbounded" ref="PassengerIDRef" />
        <xsd:element minOccurs="0" maxOccurs="2" ref="Coverage" />
        <xsd:element minOccurs="0" ref="PartialRefund" />
        <xsd:element minOccurs="0" ref="ChangeGroup" />
        <xsd:element minOccurs="0" maxOccurs="unbounded" ref="PaymentType" />
        <xsd:element ref="OtherInformation" />
      </xsd:sequence>
      <xsd:attribute name="AssociationID" type="xsd:ID" use="required">
        <xsd:annotation>
          <xsd:documentation>Unique segment ID used to associate other elements to this segment at PNR creation time.  Example: F1</xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute default="B" name="Type" use="optional">
        <xsd:annotation>
          <xsd:documentation>Inurance request type. Possible values are:
B = Booking requested
C = Change requested
R = Refund requested.
The default value is B. Example: B</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:minLength value="1" />
            <xsd:maxLength value="1" />
            <xsd:enumeration value="B" />
            <xsd:enumeration value="C" />
            <xsd:enumeration value="R" />
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:attribute>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="InsuranceSegment">
    <xsd:annotation>
      <xsd:documentation>Insurance segment group</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" maxOccurs="8" ref="TravelerIDRef" />
        <xsd:element ref="VendorCode" />
        <xsd:element ref="ServiceDate" />
        <xsd:element ref="Purchase" />
        <xsd:element ref="ActionCode" />
        <xsd:element ref="NumberInParty" />
        <xsd:element minOccurs="0" maxOccurs="unbounded" ref="Text" />
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="Issued" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>Ticket issued.  Leave this element empty to create "issued ticket" ticketing element.  Example: - </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="Itinerary">
    <xsd:annotation>
      <xsd:documentation>Itinerary information group</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" maxOccurs="unbounded" ref="Flight" />
        <xsd:element minOccurs="0" maxOccurs="unbounded" ref="Car" />
        <xsd:element minOccurs="0" maxOccurs="unbounded" ref="Hotel" />
        <xsd:element minOccurs="0" ref="Miscellaneous" />
        <xsd:element minOccurs="0" maxOccurs="unbounded" ref="Insurance" />
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="ItineraryRemark">
    <xsd:annotation>
      <xsd:documentation>Itinerary remark group</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" maxOccurs="unbounded" ref="TravelerIDRef" />
        <xsd:element minOccurs="0" ref="SegmentIDRef" />
        <xsd:element ref="Text" />
      </xsd:sequence>
      <xsd:attribute name="Type" type="xsd:string" use="required">
        <xsd:annotation>
          <xsd:documentation>Type of itinerary remark.  Values are:
A = Air
C = Car
H = Hotel
F-FreeFlowText remarkExample: A</xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="Keyword">
    <xsd:annotation>
      <xsd:documentation>Keyword.  Values are:

DS = Dollar save
PF = PTA fee amount
NP = Waived PTA fee amount
TK = Manual ticket numbers (replace the current description)
CA = Location, customer and selling agent 
BB  = Back office branch and account number
AC = Account number (replace the current description) 
AD - Invoice Adjustment Remarks 
DF = In foreign currency
FS = Fare save (replace the current description)
PT = PTA number
SF = Service fee
SA = Customer number SA account
SD = Customer number
CD = Customer number
RC = Routing code
FA = Faring agent remark
PH = Phone field override remark
Example: DS</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleType>
      <xsd:restriction base="xsd:string">
        <xsd:enumeration value="DS" />
        <xsd:enumeration value="PF" />
        <xsd:enumeration value="NP" />
        <xsd:enumeration value="TK" />
        <xsd:enumeration value="CA" />
        <xsd:enumeration value="BB" />
        <xsd:enumeration value="AC" />
        <xsd:enumeration value="DF" />
        <xsd:enumeration value="FS" />
        <xsd:enumeration value="PT" />
        <xsd:enumeration value="SF" />
        <xsd:enumeration value="SA" />
        <xsd:enumeration value="SD" />
        <xsd:enumeration value="CD" />
        <xsd:enumeration value="RC" />
        <xsd:enumeration value="FA" />
        <xsd:enumeration value="PH" />
        <xsd:enumeration value="AD" />
      </xsd:restriction>
    </xsd:simpleType>
  </xsd:element>
  <xsd:element name="LandSegment">
    <xsd:annotation>
      <xsd:documentation>Land segment group</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" maxOccurs="8" ref="TravelerIDRef" />
        <xsd:element ref="VendorCode" />
        <xsd:element ref="ServiceDate" />
        <xsd:element ref="OriginCityCode" />
        <xsd:element ref="DestinationCityCode" />
        <xsd:element ref="ActionCode" />
        <xsd:element ref="NumberInParty" />
        <xsd:element minOccurs="0" maxOccurs="unbounded" ref="Text" />
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element default="ENGLISH" name="Language" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>Language preference.  Example: English</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="Location" type="CarLocation">
    <xsd:annotation>
      <xsd:documentation>Location group</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="ManualPricing">
    <xsd:annotation>
      <xsd:documentation>Manual pricing information group</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:choice>
        <xsd:sequence>
          <xsd:element ref="Text" />
        </xsd:sequence>
        <xsd:sequence>
          <xsd:element ref="CurrencyCode" />
          <xsd:element maxOccurs="unbounded" name="Fare">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element maxOccurs="unbounded" ref="TravelerIDRef" />
                <xsd:element ref="Price" />
                <xsd:element minOccurs="0" name="NetRemit">
                  <xsd:annotation>
                    <xsd:documentation>Net remit group.</xsd:documentation>
                  </xsd:annotation>
                  <xsd:complexType>
                    <xsd:sequence>
                      <xsd:element minOccurs="0" name="APBC" type="xsd:positiveInteger">
                        <xsd:annotation>
                          <xsd:documentation>This IATA term stands for 'Amount Paid By Customer' and is needed for Net Remit methods 2A, 2E. Note that currency and decimal point are governed by the Currency alement definition of the FareGroup/Currency element.
Example: 57500 </xsd:documentation>
                        </xsd:annotation>
                      </xsd:element>
                      <xsd:element minOccurs="0" name="AEBA" type="xsd:positiveInteger">
                        <xsd:annotation>
                          <xsd:documentation>This IATA term stands for 'Amount Entered By Agent' and is needed for Net Remit methods 2A, 2E
Note that currency and decimal point are governed by the Currency alement definition of the FareGroup/Currency element.
Example: 50500  </xsd:documentation>
                        </xsd:annotation>
                      </xsd:element>
                    </xsd:sequence>
                    <xsd:attribute name="NRIndicator" type="xsd:string" />
                  </xsd:complexType>
                </xsd:element>
                <xsd:element minOccurs="0" ref="Commission" />
                <xsd:element name="FareRules">
                  <xsd:complexType>
                    <xsd:sequence>
                      <xsd:element minOccurs="0" maxOccurs="unbounded" name="FareInfo">
                        <xsd:complexType>
                          <xsd:sequence>
                            <xsd:element ref="DepartureDate" />
                            <xsd:element minOccurs="0" ref="DepartureTime" />
                            <xsd:element name="DepartureCode">
                              <xsd:annotation>
                                <xsd:documentation>Departure IATA 3-letter airport or city code.  Example: NYC</xsd:documentation>
                              </xsd:annotation>
                              <xsd:simpleType>
                                <xsd:restriction base="xsd:string">
                                  <xsd:length value="3" />
                                </xsd:restriction>
                              </xsd:simpleType>
                            </xsd:element>
                            <xsd:element minOccurs="0" name="ArrivalDate" type="xsd:date">
                              <xsd:annotation>
                                <xsd:documentation>Arrival date in ISO 8601 format.  Example: 2002-12-25</xsd:documentation>
                              </xsd:annotation>
                            </xsd:element>
                            <xsd:element minOccurs="0" ref="ArrivalTime" />
                            <xsd:element name="ArrivalCode">
                              <xsd:annotation>
                                <xsd:documentation>Arrival IATA 3-letter airport or city code.  Example: NYC</xsd:documentation>
                              </xsd:annotation>
                              <xsd:simpleType>
                                <xsd:restriction base="xsd:string">
                                  <xsd:length value="3" />
                                </xsd:restriction>
                              </xsd:simpleType>
                            </xsd:element>
                            <xsd:element ref="FareBasisCode" />
                            <xsd:element minOccurs="0" ref="TicketDesignator" />
                            <xsd:element ref="AirlineCode" />
                            <xsd:element minOccurs="0" ref="FareRefKey">
                              <xsd:annotation>
                                <xsd:documentation>If this value is present in the FlightPriceRS it must be mapped to this request</xsd:documentation>
                              </xsd:annotation>
                            </xsd:element>
                            <xsd:choice>
                              <xsd:sequence>
                                <xsd:element maxOccurs="16" name="RelatedSegment">
                                  <xsd:annotation>
                                    <xsd:documentation>A FareInfo element refers to one or more AirGroup/Flight elements. It has one RelatedSegment element for each Flight element it refers to.</xsd:documentation>
                                  </xsd:annotation>
                                  <xsd:complexType>
                                    <xsd:sequence>
                                      <xsd:element ref="SegmentIDRef" />
                                      <xsd:element minOccurs="0" name="Cabin">
                                        <xsd:annotation>
                                          <xsd:documentation>Cabin code.  Values are:
F = First class
C = Business class
Y = Economy class
W = Premium Economy
Example: Y</xsd:documentation>
                                        </xsd:annotation>
                                        <xsd:simpleType>
                                          <xsd:restriction base="xsd:string">
                                            <xsd:enumeration value="F" />
                                            <xsd:enumeration value="C" />
                                            <xsd:enumeration value="Y" />
                                            <xsd:enumeration value="W" />
                                          </xsd:restriction>
                                        </xsd:simpleType>
                                      </xsd:element>
                                      <xsd:element ref="ClassOfService" />
                                      <xsd:element minOccurs="0" name="BaggageAllowance" type="xsd:string">
                                        <xsd:annotation>
                                          <xsd:documentation>Baggage allowance data. Pieces, kilogramm or pound. Example: 35K or PC
Possible values:
xxK
xxP
PC
xxPC
where xx represents the amount of kilos (or pounds) or the number of pieces allowed, respectively.</xsd:documentation>
                                        </xsd:annotation>
                                      </xsd:element>
                                      <xsd:element minOccurs="0" ref="NVB" />
                                      <xsd:element minOccurs="0" ref="NVA" />
                                      <xsd:element minOccurs="0" name="StopOverIndicator">
                                        <xsd:annotation>
                                          <xsd:documentation>Indicates if stopover is permitted w/ the fare. Uses industry values to reflect the status.  Values are X, O

When X is the value - the departure city of the segment was considered a transfer point at time of fare calculation. 
If the passenger wants to stop in that city, the fare must be recalculated; the fare may or may not permit stopovers. </xsd:documentation>
                                        </xsd:annotation>
                                        <xsd:simpleType>
                                          <xsd:restriction base="xsd:string">
                                            <xsd:enumeration value="X" />
                                            <xsd:enumeration value="O" />
                                          </xsd:restriction>
                                        </xsd:simpleType>
                                      </xsd:element>
                                    </xsd:sequence>
                                  </xsd:complexType>
                                </xsd:element>
                              </xsd:sequence>
                              <xsd:sequence>
                                <xsd:element ref="SegmentIDRef" />
                                <xsd:element minOccurs="0" name="Cabin">
                                  <xsd:annotation>
                                    <xsd:documentation>Cabin code.  Values are:
F = First class
C = Business class
Y = Economy class
W = Premium Economy
Example: Y</xsd:documentation>
                                  </xsd:annotation>
                                  <xsd:simpleType>
                                    <xsd:restriction base="xsd:string">
                                      <xsd:enumeration value="F" />
                                      <xsd:enumeration value="C" />
                                      <xsd:enumeration value="Y" />
                                      <xsd:enumeration value="W" />
                                    </xsd:restriction>
                                  </xsd:simpleType>
                                </xsd:element>
                                <xsd:element minOccurs="0" ref="ClassOfService" />
                                <xsd:element minOccurs="0" name="BaggageAllowance" type="xsd:string">
                                  <xsd:annotation>
                                    <xsd:documentation>Baggage allowance data. Pieces, kilogramm or pound. Example: 35K or PC
Possible values:
xxK
xxP
PC
xxPC
where xx represents the amount of kilos (or pounds) or the number of pieces allowed, respectively.</xsd:documentation>
                                  </xsd:annotation>
                                </xsd:element>
                                <xsd:element minOccurs="0" ref="NVB" />
                                <xsd:element minOccurs="0" ref="NVA" />
                                <xsd:element minOccurs="0" name="StopOverIndicator">
                                  <xsd:annotation>
                                    <xsd:documentation>Indicates if stopover is permitted w/ the fare. Uses industry values to reflect the status.  Values are X, O

When X is the value - the departure city of the segment was considered a transfer point at time of fare calculation. 
If the passenger wants to stop in that city, the fare must be recalculated; the fare may or may not permit stopovers. </xsd:documentation>
                                  </xsd:annotation>
                                  <xsd:simpleType>
                                    <xsd:restriction base="xsd:string">
                                      <xsd:enumeration value="X" />
                                      <xsd:enumeration value="O" />
                                    </xsd:restriction>
                                  </xsd:simpleType>
                                </xsd:element>
                              </xsd:sequence>
                            </xsd:choice>
                          </xsd:sequence>
                        </xsd:complexType>
                      </xsd:element>
                      <xsd:element minOccurs="0" name="TicketByDate" type="xsd:date">
                        <xsd:annotation>
                          <xsd:documentation>Last day to ticket</xsd:documentation>
                        </xsd:annotation>
                      </xsd:element>
                      <xsd:element minOccurs="0" ref="Penalty">
                        <xsd:annotation>
                          <xsd:documentation>Penalty group</xsd:documentation>
                        </xsd:annotation>
                      </xsd:element>
                      <xsd:element minOccurs="0" name="FareCalculation">
                        <xsd:annotation>
                          <xsd:documentation>fare calculation line</xsd:documentation>
                        </xsd:annotation>
                        <xsd:simpleType>
                          <xsd:restriction base="xsd:string">
                            <xsd:minLength value="1" />
                          </xsd:restriction>
                        </xsd:simpleType>
                      </xsd:element>
                      <xsd:element minOccurs="0" maxOccurs="unbounded" name="Endorsement">
                        <xsd:annotation>
                          <xsd:documentation>Endorsements defined by carriers for the fare to be printed in the endorsements box on tickets. Exmple: NONEND/NONREF</xsd:documentation>
                        </xsd:annotation>
                        <xsd:complexType>
                          <xsd:sequence>
                            <xsd:element ref="Text" />
                            <xsd:element minOccurs="0" ref="SegmentIDRef" />
                          </xsd:sequence>
                          <xsd:attribute name="Type">
                            <xsd:annotation>
                              <xsd:documentation>Identifies the creation mode of this line. Values are:

M - manual override entered by agent
P - manual agent entered to be appended to the automatically generated line.</xsd:documentation>
                            </xsd:annotation>
                            <xsd:simpleType>
                              <xsd:restriction base="xsd:string">
                                <xsd:enumeration value="M" />
                                <xsd:enumeration value="P" />
                              </xsd:restriction>
                            </xsd:simpleType>
                          </xsd:attribute>
                        </xsd:complexType>
                      </xsd:element>
                      <xsd:element minOccurs="0" name="TourCode">
                        <xsd:complexType>
                          <xsd:sequence>
                            <xsd:element ref="Text" />
                            <xsd:element minOccurs="0" maxOccurs="unbounded" ref="SegmentIDRef" />
                          </xsd:sequence>
                        </xsd:complexType>
                      </xsd:element>
                    </xsd:sequence>
                  </xsd:complexType>
                </xsd:element>
                <xsd:element minOccurs="0" name="ExchangeInfo">
                  <xsd:annotation>
                    <xsd:documentation>Information returned by an Auto-Exchange application (e.g. ITA Reshop)</xsd:documentation>
                  </xsd:annotation>
                  <xsd:complexType>
                    <xsd:sequence>
                      <xsd:element ref="CurrencyCode" />
                      <xsd:element minOccurs="0" name="Penalty">
                        <xsd:annotation>
                          <xsd:documentation>Penalty/Change Fee amount returned by the auto-exchange application for requested transaction</xsd:documentation>
                        </xsd:annotation>
                        <xsd:complexType>
                          <xsd:sequence minOccurs="0">
                            <xsd:element ref="Taxes" />
                          </xsd:sequence>
                          <xsd:attribute name="Amount">
                            <xsd:annotation>
                              <xsd:documentation>The total fare amount including taxes of a fare alternative.</xsd:documentation>
                            </xsd:annotation>
                          </xsd:attribute>
                        </xsd:complexType>
                      </xsd:element>
                      <xsd:element minOccurs="0" name="CommPenalty">
                        <xsd:annotation>
                          <xsd:documentation>Commission allowed on penalty expressed as an amount</xsd:documentation>
                        </xsd:annotation>
                        <xsd:complexType>
                          <xsd:attribute name="Amount">
                            <xsd:annotation>
                              <xsd:documentation>The commission amount.</xsd:documentation>
                            </xsd:annotation>
                          </xsd:attribute>
                        </xsd:complexType>
                      </xsd:element>
                      <xsd:element minOccurs="0" name="ValueOfOldTicket">
                        <xsd:annotation>
                          <xsd:documentation>This is the old ticketed total fare.</xsd:documentation>
                        </xsd:annotation>
                        <xsd:complexType>
                          <xsd:attribute name="Amount">
                            <xsd:annotation>
                              <xsd:documentation>The total fare amount including taxes of the old ticketed fare</xsd:documentation>
                            </xsd:annotation>
                          </xsd:attribute>
                        </xsd:complexType>
                      </xsd:element>
                      <xsd:element minOccurs="0" name="LowFareAlternative">
                        <xsd:annotation>
                          <xsd:documentation>This is e.g. a fare identified by an auto-exchange application to be lower then the requested reissuance plus applicable penalty.</xsd:documentation>
                        </xsd:annotation>
                        <xsd:complexType>
                          <xsd:attribute name="Amount">
                            <xsd:annotation>
                              <xsd:documentation>The total fare amount including taxes of a fare alternative.</xsd:documentation>
                            </xsd:annotation>
                          </xsd:attribute>
                        </xsd:complexType>
                      </xsd:element>
                    </xsd:sequence>
                  </xsd:complexType>
                </xsd:element>
              </xsd:sequence>
              <xsd:attribute name="Type" type="xsd:string" use="required">
                <xsd:annotation>
                  <xsd:documentation>PAX Type priced. Values are: ADT, CHD, SRC, INF etc.</xsd:documentation>
                </xsd:annotation>
              </xsd:attribute>
              <xsd:attribute name="TypeCount" type="xsd:integer" use="optional">
                <xsd:annotation>
                  <xsd:documentation>Optional count of the PAX in the PNR priced at this fare.
Example: 2</xsd:documentation>
                </xsd:annotation>
              </xsd:attribute>
              <xsd:attribute name="TypeTotalPrice" type="xsd:integer" use="optional">
                <xsd:annotation>
                  <xsd:documentation>Optional totat amount of the PAX priced in this fare.</xsd:documentation>
                </xsd:annotation>
              </xsd:attribute>
              <xsd:attribute name="Tour" use="optional">
                <xsd:annotation>
                  <xsd:documentation>Tour identifier code if applicable and associated with the priced fare. See FLX CodeSet document for valid values.
Example: U</xsd:documentation>
                </xsd:annotation>
                <xsd:simpleType>
                  <xsd:restriction base="xsd:string">
                    <xsd:minLength value="1" />
                    <xsd:maxLength value="1" />
                  </xsd:restriction>
                </xsd:simpleType>
              </xsd:attribute>
              <xsd:attribute name="NetFare" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>Allowed value = "Y"

Identifies Cat35 C-Type net fare</xsd:documentation>
                </xsd:annotation>
              </xsd:attribute>
              <xsd:attribute name="TypePriced" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>PAX Type actually priced. This value is used as a key to identify the TravelerGroup within the FareGroup to be modified.</xsd:documentation>
                </xsd:annotation>
              </xsd:attribute>
            </xsd:complexType>
          </xsd:element>
          <xsd:element minOccurs="0" name="TravelStats">
            <xsd:annotation>
              <xsd:documentation>Statistical data as needed for BSP and/or ARC reporting</xsd:documentation>
            </xsd:annotation>
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element minOccurs="0" name="PurposeCode" type="xsd:string">
                  <xsd:annotation>
                    <xsd:documentation>Purpose Code.
Valid values:
1 = Business
2 = Pleasure
3 = Charter

Canadian requirement</xsd:documentation>
                  </xsd:annotation>
                </xsd:element>
                <xsd:element minOccurs="0" name="DestinationCode" type="xsd:string">
                  <xsd:annotation>
                    <xsd:documentation>1 = Mexico, Costa Rica, Central America, Canal zone
2 = Islands and countries of the Caribbean, Bermuda, including PR, VI
3 = South America
4 = Europe incl Morocco, Tunisia, Algeria, Greenland
5 = Africa
6 = Middle East (western Asia) 
7 = Asia including India
8 = Australia, New Zealand. Pacific islands incl Hawaii,
excluding Guam
0 = United States (wholly within the USA) or trans- border Canada – USA (or vice-versa) 

Canadian requirement</xsd:documentation>
                  </xsd:annotation>
                </xsd:element>
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
      </xsd:choice>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="MasterAccountRecord" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>Name of master profile record.  Example: IBM</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="MCOSegment">
    <xsd:annotation>
      <xsd:documentation>MCO segment group</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" ref="TravelerIDRef" />
        <xsd:element ref="VendorCode" />
        <xsd:element ref="ServiceDate" />
        <xsd:element ref="Purchase" />
        <xsd:element ref="ActionCode" />
        <xsd:element ref="NumberInParty" />
        <xsd:sequence minOccurs="0">
          <xsd:element ref="Amount" />
          <xsd:element ref="CurrencyCode" />
        </xsd:sequence>
        <xsd:element minOccurs="0" maxOccurs="unbounded" ref="Text" />
        <xsd:element minOccurs="0" name="AccountingText">
          <xsd:simpleType>
            <xsd:restriction base="xsd:string">
              <xsd:minLength value="1" />
            </xsd:restriction>
          </xsd:simpleType>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="MileKmLimit">
    <xsd:annotation>
      <xsd:documentation>Identifies mileage plan sold. 

Note: Amadeus does not have a designated format for mileage plan indicator. Thus, if entered and booking is for Amadeus GDS this value will be ignored. 
Values are: either UNL for unlimited mileage or a positive integer representing the max miles/km free for this rate.

NOTE: For Worldspan ExtraCharges is mandatory if MileKmLimit has value different than 'UNL' - worlspan requires charges per mile or kilometer to be entered.</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleType>
      <xsd:restriction base="xsd:string">
        <xsd:minLength value="1" />
        <xsd:pattern value="\d+|UNL" />
      </xsd:restriction>
    </xsd:simpleType>
  </xsd:element>
  <xsd:element name="Miscellaneous">
    <xsd:annotation>
      <xsd:documentation>Miscellaneous segment group</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" maxOccurs="unbounded" ref="OtherSegment" />
        <xsd:element minOccurs="0" maxOccurs="unbounded" ref="InsuranceSegment" />
        <xsd:element minOccurs="0" maxOccurs="unbounded" ref="MCOSegment" />
        <xsd:element minOccurs="0" maxOccurs="unbounded" ref="PTASegment" />
        <xsd:element minOccurs="0" maxOccurs="unbounded" ref="AirTaxiSegment" />
        <xsd:element minOccurs="0" maxOccurs="unbounded" ref="LandSegment" />
        <xsd:element minOccurs="0" maxOccurs="unbounded" ref="BusSegment" />
        <xsd:element minOccurs="0" maxOccurs="unbounded" ref="RailSegment" />
        <xsd:element minOccurs="0" maxOccurs="unbounded" ref="SeaSegment" />
        <xsd:element minOccurs="0" maxOccurs="unbounded" ref="TourSegment" />
        <xsd:element minOccurs="0" maxOccurs="unbounded" ref="CarPassiveSegment">
          <xsd:annotation>
            <xsd:documentation>Car passive segment group.

Note that Amadeus will return action code HK for passive sells so that the car segment will appear in the PNRViewRS/LandGroup/Car section after the booking as regular segment. </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" maxOccurs="unbounded" ref="HotelPassiveSegment" />
        <xsd:element minOccurs="0" maxOccurs="unbounded" ref="ChaufferBusDriveSegment" />
      </xsd:sequence>
      <xsd:attribute name="AssociationID" type="xsd:ID" use="required">
        <xsd:annotation>
          <xsd:documentation>Unique segment ID used to associate other elements to this segment at PNR creation time.  Example: F1</xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="Month">
    <xsd:annotation>
      <xsd:documentation>Credit card expiration month.  Example: 02</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleType>
      <xsd:restriction base="xsd:integer">
        <xsd:minInclusive value="1" />
        <xsd:maxInclusive value="12" />
      </xsd:restriction>
    </xsd:simpleType>
  </xsd:element>
  <xsd:element name="MoveFromProfile">
    <xsd:annotation>
      <xsd:documentation>Contains information that needs to be moved from a Profile into PNR</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" ref="AgencyProfile" />
        <xsd:element minOccurs="0" ref="PseudoCityCode" />
        <xsd:element minOccurs="0" ref="BusinessProfile" />
        <xsd:element minOccurs="0" ref="TravelerProfile" />
        <xsd:element minOccurs="0" ref="StartLine" />
        <xsd:element minOccurs="0" ref="EndLine" />
        <xsd:element minOccurs="0" name="RefLineNumber" type="xsd:nonNegativeInteger">
          <xsd:annotation>
            <xsd:documentation>Line number in the profile display. The profile will be moved by line reference. Supported only in sessioned mode.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
      <xsd:attribute name="MoveAgencyProfile">
        <xsd:annotation>
          <xsd:documentation>This indicator controls whether agency profile should be moved into PNR along with business/personal profiles. Values are: 
Y = automatically move agency profile, 
N = do not move agency profile automatically (this is the default.).
Example: Y</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:length value="1" />
            <xsd:enumeration value="Y" />
            <xsd:enumeration value="N" />
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:attribute>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="Name" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>Equipment name.  Example: Boeing 747 series</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="NameRemark" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>Free text name remark.  Example: A123456</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="Native" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>This is for the input of any ticketing native command.  Example: 7TAW</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="Nature" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>Tax nature.  Example: US2</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="Number" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>Number.  Example: 010</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="NumberInParty">
    <xsd:annotation>
      <xsd:documentation>Number of passengers.  Example: 1</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleType>
      <xsd:restriction base="xsd:integer">
        <xsd:maxInclusive value="9" />
        <xsd:minInclusive value="0" />
      </xsd:restriction>
    </xsd:simpleType>
  </xsd:element>
  <xsd:element name="NumberOfCars" type="xsd:integer">
    <xsd:annotation>
      <xsd:documentation>Number of cars being sold.  Example: 1</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="NumberOfDocuments" type="xsd:integer">
    <xsd:annotation>
      <xsd:documentation>Number of documents.  Example: 1</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="NumberOfNights" type="xsd:integer">
    <xsd:annotation>
      <xsd:documentation>Number of nights.  Example: 5</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="NumberOfPersons" type="xsd:integer">
    <xsd:annotation>
      <xsd:documentation>Number of persons.  Example: 1</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="NumberOfRooms" type="xsd:integer">
    <xsd:annotation>
      <xsd:documentation>Number of rooms requested.  Example: 1</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="OfferCodeID" type="xsd:string" />
  <xsd:element name="Office">
    <xsd:annotation>
      <xsd:documentation>Pseudo city under which private fares are stored.  Example: 1C1K</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:simpleContent>
        <xsd:extension base="xsd:string">
          <xsd:attribute name="Provider" use="required">
            <xsd:annotation>
              <xsd:documentation>Code of the provider system that holds the private fares. Possibles values are:
1A = Amadeus
1B = Abacus
1V = Apollo
1G = Galileo
1S = Sabre (also 1W)
1P = Worldspan
F1 = Farelogix
Example: 1V</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
              <xsd:restriction base="xsd:string">
                <xsd:length value="2" />
                <xsd:enumeration value="1A" />
                <xsd:enumeration value="1W" />
                <xsd:enumeration value="1P" />
                <xsd:enumeration value="1V" />
                <xsd:enumeration value="1G" />
                <xsd:enumeration value="1S" />
                <xsd:enumeration value="1B" />
                <xsd:enumeration value="F1" />
              </xsd:restriction>
            </xsd:simpleType>
          </xsd:attribute>
        </xsd:extension>
      </xsd:simpleContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="OperatingCarrier">
    <xsd:annotation>
      <xsd:documentation>Operating carrier group</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" ref="AirlineCode" />
        <xsd:element minOccurs="0" name="AirlineName" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Airline name.
Example: American Airlines</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" ref="FlightNumber" />
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="OptionalEquipment" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>Equipment type.  Example: SKR</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="OptionalName" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>Addressee's name.  Example: ABC CORPORATION</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="Options">
    <xsd:annotation>
      <xsd:documentation>List of all purchased/selected options (discounts and surcharges)</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element maxOccurs="unbounded" name="Option">
          <xsd:annotation>
            <xsd:documentation>Individual pricing option</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:sequence>
              <xsd:element minOccurs="0" name="Description">
                <xsd:complexType>
                  <xsd:sequence>
                    <xsd:element maxOccurs="unbounded" name="Text" type="xsd:string">
                      <xsd:annotation>
                        <xsd:documentation>Title description of offered option - normally a one liner, e.g. "Check Baggage"
</xsd:documentation>
                      </xsd:annotation>
                    </xsd:element>
                  </xsd:sequence>
                </xsd:complexType>
              </xsd:element>
              <xsd:element minOccurs="0" name="Amount">
                <xsd:annotation>
                  <xsd:documentation>Amount for this option (or option differential in case of upsell) in amount.  Currency/Decimals of FareGroup applies;
Example: 
300
1500
(this translates e.g. to $3.00 and $15.00 for USD currency)</xsd:documentation>
                </xsd:annotation>
                <xsd:complexType>
                  <xsd:simpleContent>
                    <xsd:extension base="xsd:string" />
                  </xsd:simpleContent>
                </xsd:complexType>
              </xsd:element>
            </xsd:sequence>
            <xsd:attribute name="SegmentIDRef" type="xsd:string" use="optional">
              <xsd:annotation>
                <xsd:documentation>The value of the SegmentIDRef element is the flight/segment position of the corresponding OriginDestination groups in document order.</xsd:documentation>
              </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="DepartureCode" type="xsd:string" use="optional">
              <xsd:annotation>
                <xsd:documentation>Origin airport code of respective flight; 
e.g. IAH</xsd:documentation>
              </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="ArrivalCode" type="xsd:string" use="optional">
              <xsd:annotation>
                <xsd:documentation>Destination airport code of respective flight; 
e.g. IAH</xsd:documentation>
              </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="OptionID" type="xsd:string" use="optional">
              <xsd:annotation>
                <xsd:documentation>Option unique ID. Example: div020</xsd:documentation>
              </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="OptionName" type="xsd:string" use="optional">
              <xsd:annotation>
                <xsd:documentation>Option Name. Example : GO1_0</xsd:documentation>
              </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="Type" type="xsd:string" use="required">
              <xsd:annotation>
                <xsd:documentation>Indicator if this option is a discount or a surcharge;
Values are: 
"Discount" - subtracted from fare
"Surcharge" - added to fare </xsd:documentation>
              </xsd:annotation>
            </xsd:attribute>
          </xsd:complexType>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="OriginCityCode" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>Origin city code.  Example: MIA</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="Other">
    <xsd:annotation>
      <xsd:documentation>Other payment information.  Example: Check 113 or *CHECK, CASH</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:simpleContent>
        <xsd:extension base="xsd:string">
          <xsd:attribute name="PartialAmount" type="xsd:positiveInteger">
            <xsd:annotation>
              <xsd:documentation>The PartialAmount must only be specified in case of a split payment (see FormOfPayment). In case of a split payment, it is optional for one and mandatory for all other means of payment elements.

If is left out for one of the means of payment, the PartialAmounts specified for the other means of payment will be charged to each of them respectively and the remaining amount will be charged to the means of payment without PartialAmount. If a PartialAmount is specified for all means of payment, an error may occur, e.g. at time of tickting, if the total amount to be paid differs from the sum of the PartialAmounts.

The PartialAmount is specified as an integer. It is interpreted to be of the same currency as the amount to be paid and based on the number of decimals for this currency, the rightmost digits are taken to be decimal places.

Not to be confused w/ amount entered for authorization in Authorization/Amount element.</xsd:documentation>
            </xsd:annotation>
          </xsd:attribute>
        </xsd:extension>
      </xsd:simpleContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="OtherInformation">
    <xsd:annotation>
      <xsd:documentation>Other information group</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" ref="Contact" />
        <xsd:element minOccurs="0" maxOccurs="unbounded" ref="Address" />
        <xsd:element maxOccurs="unbounded" ref="PassengerInformation" />
        <xsd:element ref="Agent" />
        <xsd:element minOccurs="0" ref="StateCode" />
        <xsd:element minOccurs="0" ref="CarRental" />
        <xsd:element minOccurs="0" ref="Language" />
        <xsd:element minOccurs="0" ref="TourOperator" />
        <xsd:element minOccurs="0" ref="PolicyNumber" />
        <xsd:element minOccurs="0" ref="RefundReason" />
        <xsd:element minOccurs="0" ref="AuthorizationNumber" />
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="OtherPNRElements">
    <xsd:annotation>
      <xsd:documentation>Other PNR elements group</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" maxOccurs="unbounded" ref="EmailAddress" />
        <xsd:element minOccurs="0" maxOccurs="unbounded" ref="FrequentTravelerGroup">
          <xsd:annotation>
            <xsd:documentation>FrequentTravelerGroup

If different frequent flyer programs apply to different flights in the itinerary for one and the same traveler, create multiple FrequentTravelerGroup elements for the traveler. </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" ref="QualifierGroup" />
        <xsd:element minOccurs="0" ref="BillingAndDeliveryData" />
        <xsd:element minOccurs="0" ref="CustomerIdentification">
          <xsd:annotation>
            <xsd:documentation>Customer identification group</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" ref="CustomerProfile">
          <xsd:annotation>
            <xsd:documentation>Customer profile group</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" maxOccurs="unbounded" ref="DocumentInvoiceRemark" />
        <xsd:element minOccurs="0" maxOccurs="unbounded" ref="DuePaidText" />
        <xsd:element minOccurs="0" maxOccurs="unbounded" ref="GeneralRemark" />
        <xsd:element minOccurs="0" maxOccurs="unbounded" ref="ItineraryRemark" />
        <xsd:element minOccurs="0" maxOccurs="unbounded" ref="OtherServiceInformation" />
        <xsd:element minOccurs="0" maxOccurs="unbounded" ref="ReviewBookingQueue" />
        <xsd:element minOccurs="0" maxOccurs="unbounded" ref="Seat" />
        <xsd:element minOccurs="0" maxOccurs="unbounded" name="SeatOptimization">
          <xsd:annotation>
            <xsd:documentation>Seat optimization request. Sourced to FLXMI only</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:sequence>
              <xsd:element name="SeatPreferences">
                <xsd:complexType>
                  <xsd:sequence>
                    <xsd:element maxOccurs="unbounded" name="Preference">
                      <xsd:annotation>
                        <xsd:documentation>Preference Codes:
A = Aisle
W = Window
E = Exit Row
H = Bulkhead
F = Front of Cabin
B = Back of Cabin
O = Over Wing
L  = Left
R = Right
C = Center
P = Powerport</xsd:documentation>
                      </xsd:annotation>
                      <xsd:complexType>
                        <xsd:simpleContent>
                          <xsd:extension base="xsd:string">
                            <xsd:attribute name="Rank" type="xsd:string">
                              <xsd:annotation>
                                <xsd:documentation>future use - can be used to rank the preferences for improved optimization</xsd:documentation>
                              </xsd:annotation>
                            </xsd:attribute>
                          </xsd:extension>
                        </xsd:simpleContent>
                      </xsd:complexType>
                    </xsd:element>
                  </xsd:sequence>
                  <xsd:attribute name="AcceptPremium" type="xsd:string">
                    <xsd:annotation>
                      <xsd:documentation>Indicates the acceptance of applicable premiums

Values:
Y = user accepts
N = no premiums accepted</xsd:documentation>
                    </xsd:annotation>
                  </xsd:attribute>
                </xsd:complexType>
              </xsd:element>
              <xsd:element ref="TravelerIDRef" />
              <xsd:element ref="SegmentIDRef" />
            </xsd:sequence>
            <xsd:attributeGroup ref="sourceOptional" />
          </xsd:complexType>
        </xsd:element>
        <xsd:element minOccurs="0" name="OptionalServices">
          <xsd:annotation>
            <xsd:documentation>Individual service details</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:sequence>
              <xsd:element maxOccurs="unbounded" name="Service">
                <xsd:annotation>
                  <xsd:documentation>Servive details</xsd:documentation>
                </xsd:annotation>
                <xsd:complexType>
                  <xsd:sequence>
                    <xsd:element minOccurs="0" maxOccurs="unbounded" ref="SegmentIDRef">
                      <xsd:annotation>
                        <xsd:documentation>For booked flights this references to an existing SegmentElementNumber, e.g. "4".  For a new booking it references to the flight element within this message, e.g. "F1"</xsd:documentation>
                      </xsd:annotation>
                    </xsd:element>
                    <xsd:choice>
                      <xsd:element minOccurs="0" ref="TravelerIDRef">
                        <xsd:annotation>
                          <xsd:documentation>For booked travelers this references to an existing TravelerElementNumber, e.g. "1".  For new booking reference is to the traveler element within this message, e.g. "T1"</xsd:documentation>
                        </xsd:annotation>
                      </xsd:element>
                      <xsd:element minOccurs="0" name="GroupName" type="xsd:string">
                        <xsd:annotation>
                          <xsd:documentation>If the service relates to a group PNR and there are no named travelers yet associated with the PNR, the Group Name may be used to issue generic services/EMDs such as Group Deposits.</xsd:documentation>
                        </xsd:annotation>
                      </xsd:element>
                    </xsd:choice>
                    <xsd:element minOccurs="0" name="ServiceLocation" type="xsd:string">
                      <xsd:annotation>
                        <xsd:documentation>Optionally used for non-flight related services, such as airline lounge pass, pre-paid booklets for drinks/meals or WiFi.

This is the 3-letter IATA city- or airport code related to the service.  For example, an airport lounge pass may only be valid for one location.

Example: DFW</xsd:documentation>
                      </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" name="SecondaryServiceLocation" type="xsd:string">
                      <xsd:annotation>
                        <xsd:documentation>Optionally used for non-flight related services, such as airline lounge pass, pre-paid booklets for drinks/meals or WiFi.

This is the 3-letter IATA city- or airport code related to the service.  For example, an airport lounge pass may only be valid for one location.

Example: LHR</xsd:documentation>
                      </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" ref="ServiceDate" />
                    <xsd:element minOccurs="0" name="Description" type="xsd:string">
                      <xsd:annotation>
                        <xsd:documentation>Title description (Commercial Name) of this service - normally a one liner, e.g. "3rd Bag Fee"</xsd:documentation>
                      </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" name="DescriptionVariable" type="xsd:string">
                      <xsd:annotation>
                        <xsd:documentation>This value is used to provide a variable value for an selected service.

Sample: for a Premium Seat this will be a seat number; for a annual pass of onboard WiFi this will be the credentials, etc.  

Examples:
"9D"
"UID: GO8978 PW: 1234"</xsd:documentation>
                      </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" name="ReferenceKey">
                      <xsd:annotation>
                        <xsd:documentation>Unique reference key. If present in pricing response messages, must be included.</xsd:documentation>
                      </xsd:annotation>
                      <xsd:simpleType>
                        <xsd:restriction base="xsd:string">
                          <xsd:minLength value="1" />
                        </xsd:restriction>
                      </xsd:simpleType>
                    </xsd:element>
                    <xsd:element minOccurs="0" ref="ServicePrice">
                      <xsd:annotation>
                        <xsd:documentation>Price for this service; not to be used for 'included' options (no charge options). This price is only used as the final price if it is a manually priced service, other services will be repriced during the PNRCreate processing and this price is only used for reference.</xsd:documentation>
                      </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" ref="BookingInstructions" />
                    <xsd:element minOccurs="0" maxOccurs="unbounded" name="InReferenceTo">
                      <xsd:annotation>
                        <xsd:documentation>references the exchanged document(s) to support this item</xsd:documentation>
                      </xsd:annotation>
                      <xsd:complexType>
                        <xsd:sequence>
                          <xsd:element name="DocNumber" type="xsd:integer">
                            <xsd:annotation>
                              <xsd:documentation>The 13-digit document number (no check digit) of an 'accountable' document such as eCert, voucher, MCO, EMD, etc
Example: 0061234567890</xsd:documentation>
                            </xsd:annotation>
                          </xsd:element>
                          <xsd:element name="DocIssuePlace" type="xsd:string">
                            <xsd:annotation>
                              <xsd:documentation>Three letter IATA code of the town where the ticket originally has been issued.
Example: MIA</xsd:documentation>
                            </xsd:annotation>
                          </xsd:element>
                          <xsd:element name="DocIssueDate" type="xsd:date">
                            <xsd:annotation>
                              <xsd:documentation>Date in ISO 8601 format (yyyy-mm-dd).  Example: 2001-12-25</xsd:documentation>
                            </xsd:annotation>
                          </xsd:element>
                        </xsd:sequence>
                      </xsd:complexType>
                    </xsd:element>
                    <xsd:element minOccurs="0" ref="Attributes">
                      <xsd:annotation>
                        <xsd:documentation>ATPCO S5 record attributes.</xsd:documentation>
                      </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" ref="ValidatingCarrier">
                      <xsd:annotation>
                        <xsd:documentation>Allows to specify the validating carrier for pricing. Example: DL</xsd:documentation>
                      </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" ref="InstantPurchase" />
                    <xsd:element minOccurs="0" name="AutoConfirm">
                      <xsd:annotation>
                        <xsd:documentation>Deprecated as of version 2.7 will be removed from schema in version 2.9. </xsd:documentation>
                      </xsd:annotation>
                      <xsd:simpleType>
                        <xsd:restriction base="xsd:string" />
                      </xsd:simpleType>
                    </xsd:element>
                    <xsd:element minOccurs="0" name="Amount" type="xsd:string">
                      <xsd:annotation>
                        <xsd:documentation>Price for this option (containing display format)
This node is a string showing the value with decimal 
point (not linked to a currency code)
Sample:  25.50</xsd:documentation>
                      </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" name="DescriptionDetails">
                      <xsd:annotation>
                        <xsd:documentation>Detailed description of this service</xsd:documentation>
                      </xsd:annotation>
                      <xsd:complexType>
                        <xsd:sequence>
                          <xsd:element maxOccurs="unbounded" name="Text" type="xsd:string" />
                        </xsd:sequence>
                      </xsd:complexType>
                    </xsd:element>
                    <xsd:element minOccurs="0" name="Diagnostics">
                      <xsd:complexType>
                        <xsd:simpleContent>
                          <xsd:extension base="xsd:string">
                            <xsd:attribute name="ID" type="xsd:string" use="required">
                              <xsd:annotation>
                                <xsd:documentation>Diagnstic ID to track this offer.

Example: 0D4E58C8</xsd:documentation>
                              </xsd:annotation>
                            </xsd:attribute>
                          </xsd:extension>
                        </xsd:simpleContent>
                      </xsd:complexType>
                    </xsd:element>
                    <xsd:element minOccurs="0" name="Redemption">
                      <xsd:complexType>
                        <xsd:sequence>
                          <xsd:element maxOccurs="unbounded" name="Redeem">
                            <xsd:complexType>
                              <xsd:sequence>
                                <xsd:element name="RequiredAmount">
                                  <xsd:complexType>
                                    <xsd:simpleContent>
                                      <xsd:extension base="xsd:integer">
                                        <xsd:attribute name="Unit" use="required">
                                          <xsd:annotation>
                                            <xsd:documentation source="description" xml:lang="en">Amount unit of measure. Example: Certificate, Points</xsd:documentation>
                                            <xsd:documentation source="values" xml:lang="en">Accepted values:
M = currency (money) value 
P = percentage</xsd:documentation>
                                          </xsd:annotation>
                                          <xsd:simpleType>
                                            <xsd:restriction base="xsd:string">
                                              <xsd:minLength value="1" />
                                              <xsd:maxLength value="1" />
                                              <xsd:enumeration value="M" />
                                              <xsd:enumeration value="P" />
                                            </xsd:restriction>
                                          </xsd:simpleType>
                                        </xsd:attribute>
                                      </xsd:extension>
                                    </xsd:simpleContent>
                                  </xsd:complexType>
                                </xsd:element>
                                <xsd:element minOccurs="0" name="RedemptionAmountCalc" type="xsd:integer" />
                                <xsd:element minOccurs="0" name="Operation">
                                  <xsd:complexType>
                                    <xsd:sequence>
                                      <xsd:element minOccurs="0" name="Adjustment">
                                        <xsd:complexType>
                                          <xsd:attribute name="Input" type="xsd:string" />
                                          <xsd:attribute name="Result" type="xsd:string" />
                                        </xsd:complexType>
                                      </xsd:element>
                                      <xsd:element minOccurs="0" name="Designator" type="xsd:string" />
                                      <xsd:element minOccurs="0" name="Reason" type="xsd:string" />
                                      <xsd:element minOccurs="0" name="DescriptionDetails">
                                        <xsd:complexType>
                                          <xsd:sequence>
                                            <xsd:element maxOccurs="unbounded" name="Text" type="xsd:string" />
                                          </xsd:sequence>
                                        </xsd:complexType>
                                      </xsd:element>
                                    </xsd:sequence>
                                    <xsd:attribute name="Seq" type="xsd:string" />
                                    <xsd:attribute name="Type" type="xsd:string" />
                                  </xsd:complexType>
                                </xsd:element>
                                <xsd:element minOccurs="0" name="Offer">
                                  <xsd:complexType>
                                    <xsd:sequence>
                                      <xsd:element ref="OfferCodeID">
                                        <xsd:annotation>
                                          <xsd:documentation>ID for this offer as filed in rules engine
Example: 0AR123</xsd:documentation>
                                        </xsd:annotation>
                                      </xsd:element>
                                      <xsd:element minOccurs="0" name="Description" type="xsd:string">
                                        <xsd:annotation>
                                          <xsd:documentation>Description of the offer</xsd:documentation>
                                        </xsd:annotation>
                                      </xsd:element>
                                      <xsd:element name="UnitControl">
                                        <xsd:annotation>
                                          <xsd:documentation>The units credited based on the request type.
Units may be number of services, cost of service in points, miles or awards

Example: 
5
2.25</xsd:documentation>
                                        </xsd:annotation>
                                        <xsd:complexType>
                                          <xsd:sequence>
                                            <xsd:element maxOccurs="unbounded" name="Units">
                                              <xsd:annotation>
                                                <xsd:documentation>The units credited based on the request type.
Units may be number of services, cost of service in points, miles or awards

Example: 
5
2.25</xsd:documentation>
                                              </xsd:annotation>
                                              <xsd:complexType>
                                                <xsd:sequence>
                                                  <xsd:element name="InitialUnits" type="xsd:integer">
                                                    <xsd:annotation>
                                                      <xsd:documentation>identifies the initial allotment</xsd:documentation>
                                                    </xsd:annotation>
                                                  </xsd:element>
                                                  <xsd:element name="AvailableUnits" type="xsd:integer">
                                                    <xsd:annotation>
                                                      <xsd:documentation>returns the number of units available for consumption</xsd:documentation>
                                                    </xsd:annotation>
                                                  </xsd:element>
                                                  <xsd:element name="PendingUnits" type="xsd:integer">
                                                    <xsd:annotation>
                                                      <xsd:documentation>identifies the number of units booked but not yet flown</xsd:documentation>
                                                    </xsd:annotation>
                                                  </xsd:element>
                                                  <xsd:element name="UsedUnits" type="xsd:integer">
                                                    <xsd:annotation>
                                                      <xsd:documentation>identifies the number of used units</xsd:documentation>
                                                    </xsd:annotation>
                                                  </xsd:element>
                                                  <xsd:element minOccurs="0" name="DiscountLevel">
                                                    <xsd:annotation>
                                                      <xsd:documentation>identifies discount level to be applied </xsd:documentation>
                                                    </xsd:annotation>
                                                    <xsd:complexType>
                                                      <xsd:simpleContent>
                                                        <xsd:extension base="xsd:string">
                                                          <xsd:attribute name="Type" type="xsd:string">
                                                            <xsd:annotation>
                                                              <xsd:documentation>A = DiscountAmount
P = DiscountPercentage</xsd:documentation>
                                                            </xsd:annotation>
                                                          </xsd:attribute>
                                                        </xsd:extension>
                                                      </xsd:simpleContent>
                                                    </xsd:complexType>
                                                  </xsd:element>
                                                  <xsd:element minOccurs="0" name="Threshold" type="xsd:string">
                                                    <xsd:annotation>
                                                      <xsd:documentation>Identifies which revenue threshold triggered this transaction</xsd:documentation>
                                                    </xsd:annotation>
                                                  </xsd:element>
                                                  <xsd:element minOccurs="0" name="EventType">
                                                    <xsd:annotation>
                                                      <xsd:documentation>ENR = Enrollment
ANN = Anniversary
REV = Revenue Treshold
ADM = Administartion</xsd:documentation>
                                                    </xsd:annotation>
                                                    <xsd:simpleType>
                                                      <xsd:restriction base="xsd:string">
                                                        <xsd:enumeration value="ENR" />
                                                        <xsd:enumeration value="ANN" />
                                                        <xsd:enumeration value="REV" />
                                                        <xsd:enumeration value="ADM" />
                                                      </xsd:restriction>
                                                    </xsd:simpleType>
                                                  </xsd:element>
                                                  <xsd:element minOccurs="0" name="CreationDate" type="xsd:date">
                                                    <xsd:annotation>
                                                      <xsd:documentation>Date in ISO 8601 format (yyyy-mm-dd).  Example: 2001-12-25</xsd:documentation>
                                                    </xsd:annotation>
                                                  </xsd:element>
                                                  <xsd:element minOccurs="0" name="TravelDates">
                                                    <xsd:annotation>
                                                      <xsd:documentation>Travel dates for which this offer is valid</xsd:documentation>
                                                    </xsd:annotation>
                                                    <xsd:complexType>
                                                      <xsd:sequence>
                                                        <xsd:element minOccurs="0" name="EffectiveDate">
                                                          <xsd:annotation>
                                                            <xsd:documentation>Date in ISO 8601 format (yyyy-mm-dd).  Example: 2001-12-25</xsd:documentation>
                                                          </xsd:annotation>
                                                          <xsd:complexType>
                                                            <xsd:simpleContent>
                                                              <xsd:extension base="xsd:date">
                                                                <xsd:attribute name="Time" type="xsd:time">
                                                                  <xsd:annotation>
                                                                    <xsd:documentation>Date in ISO 8601 format (hh:mm).  
Example: 14:55</xsd:documentation>
                                                                  </xsd:annotation>
                                                                </xsd:attribute>
                                                              </xsd:extension>
                                                            </xsd:simpleContent>
                                                          </xsd:complexType>
                                                        </xsd:element>
                                                        <xsd:element minOccurs="0" name="ExpirationDate">
                                                          <xsd:annotation>
                                                            <xsd:documentation>Date in ISO 8601 format (yyyy-mm-dd).  Example: 2001-12-25</xsd:documentation>
                                                          </xsd:annotation>
                                                          <xsd:complexType>
                                                            <xsd:simpleContent>
                                                              <xsd:extension base="xsd:date">
                                                                <xsd:attribute name="Time" type="xsd:time">
                                                                  <xsd:annotation>
                                                                    <xsd:documentation>Date in ISO 8601 format (hh:mm).  
Example: 14:55</xsd:documentation>
                                                                  </xsd:annotation>
                                                                </xsd:attribute>
                                                              </xsd:extension>
                                                            </xsd:simpleContent>
                                                          </xsd:complexType>
                                                        </xsd:element>
                                                      </xsd:sequence>
                                                    </xsd:complexType>
                                                  </xsd:element>
                                                  <xsd:element minOccurs="0" name="BookingDates">
                                                    <xsd:annotation>
                                                      <xsd:documentation>Dates for which this offer is valid</xsd:documentation>
                                                    </xsd:annotation>
                                                    <xsd:complexType>
                                                      <xsd:sequence>
                                                        <xsd:element minOccurs="0" name="EffectiveDate">
                                                          <xsd:annotation>
                                                            <xsd:documentation>Date in ISO 8601 format (yyyy-mm-dd).  Example: 2001-12-25</xsd:documentation>
                                                          </xsd:annotation>
                                                          <xsd:complexType>
                                                            <xsd:simpleContent>
                                                              <xsd:extension base="xsd:date">
                                                                <xsd:attribute name="Time" type="xsd:time">
                                                                  <xsd:annotation>
                                                                    <xsd:documentation>Date in ISO 8601 format (hh:mm).  
Example: 14:55</xsd:documentation>
                                                                  </xsd:annotation>
                                                                </xsd:attribute>
                                                              </xsd:extension>
                                                            </xsd:simpleContent>
                                                          </xsd:complexType>
                                                        </xsd:element>
                                                        <xsd:element minOccurs="0" name="ExpirationDate">
                                                          <xsd:annotation>
                                                            <xsd:documentation>Date in ISO 8601 format (yyyy-mm-dd).  Example: 2001-12-25</xsd:documentation>
                                                          </xsd:annotation>
                                                          <xsd:complexType>
                                                            <xsd:simpleContent>
                                                              <xsd:extension base="xsd:date">
                                                                <xsd:attribute name="Time" type="xsd:time">
                                                                  <xsd:annotation>
                                                                    <xsd:documentation>Date in ISO 8601 format (hh:mm).  
Example: 14:55</xsd:documentation>
                                                                  </xsd:annotation>
                                                                </xsd:attribute>
                                                              </xsd:extension>
                                                            </xsd:simpleContent>
                                                          </xsd:complexType>
                                                        </xsd:element>
                                                      </xsd:sequence>
                                                    </xsd:complexType>
                                                  </xsd:element>
                                                </xsd:sequence>
                                                <xsd:attribute name="DateControlled" type="xsd:string">
                                                  <xsd:annotation>
                                                    <xsd:documentation>default is "N"
if set to "Y" the offer is not unit controlled and valid as per expiration date</xsd:documentation>
                                                  </xsd:annotation>
                                                </xsd:attribute>
                                                <xsd:attribute name="OfferSubCode" type="xsd:string">
                                                  <xsd:annotation>
                                                    <xsd:documentation>(Future Use) to be generated on creation by SQL</xsd:documentation>
                                                  </xsd:annotation>
                                                </xsd:attribute>
                                              </xsd:complexType>
                                            </xsd:element>
                                          </xsd:sequence>
                                        </xsd:complexType>
                                      </xsd:element>
                                    </xsd:sequence>
                                  </xsd:complexType>
                                </xsd:element>
                              </xsd:sequence>
                              <xsd:attribute name="Program" type="xsd:string">
                                <xsd:annotation>
                                  <xsd:documentation>Program Name Example: AC</xsd:documentation>
                                </xsd:annotation>
                              </xsd:attribute>
                            </xsd:complexType>
                          </xsd:element>
                        </xsd:sequence>
                        <xsd:attribute name="Required" type="xsd:string">
                          <xsd:annotation>
                            <xsd:documentation>Example: Y</xsd:documentation>
                          </xsd:annotation>
                        </xsd:attribute>
                      </xsd:complexType>
                    </xsd:element>
                    <xsd:element minOccurs="0" name="Baggage">
                      <xsd:annotation>
                        <xsd:documentation>Baggage details </xsd:documentation>
                      </xsd:annotation>
                      <xsd:complexType>
                        <xsd:sequence>
                          <xsd:element minOccurs="0" maxOccurs="unbounded" name="MaxWeight">
                            <xsd:annotation>
                              <xsd:documentation>Maximum Weight allowed per piece.</xsd:documentation>
                            </xsd:annotation>
                            <xsd:complexType>
                              <xsd:simpleContent>
                                <xsd:extension base="xsd:decimal">
                                  <xsd:attribute name="Unit" type="xsd:string" use="required">
                                    <xsd:annotation>
                                      <xsd:documentation>Measurement unit
Values are:
KG
LBS</xsd:documentation>
                                    </xsd:annotation>
                                  </xsd:attribute>
                                </xsd:extension>
                              </xsd:simpleContent>
                            </xsd:complexType>
                          </xsd:element>
                          <xsd:element minOccurs="0" maxOccurs="unbounded" name="MinWeight">
                            <xsd:annotation>
                              <xsd:documentation>Minimum Weight requirement of the Sub Code for which the baggage allowance/charge applies</xsd:documentation>
                            </xsd:annotation>
                            <xsd:complexType>
                              <xsd:simpleContent>
                                <xsd:extension base="xsd:decimal">
                                  <xsd:attribute name="Unit" type="xsd:string" use="required">
                                    <xsd:annotation>
                                      <xsd:documentation>Measurement unit
Values are:
KG
LBS</xsd:documentation>
                                    </xsd:annotation>
                                  </xsd:attribute>
                                </xsd:extension>
                              </xsd:simpleContent>
                            </xsd:complexType>
                          </xsd:element>
                          <xsd:element minOccurs="0" maxOccurs="unbounded" name="MaxDimensions">
                            <xsd:annotation>
                              <xsd:documentation>Maximum Size allowed per Piece. </xsd:documentation>
                            </xsd:annotation>
                            <xsd:complexType>
                              <xsd:sequence>
                                <xsd:element minOccurs="0" name="Length">
                                  <xsd:annotation>
                                    <xsd:documentation>Value e.g 40 </xsd:documentation>
                                  </xsd:annotation>
                                  <xsd:complexType>
                                    <xsd:simpleContent>
                                      <xsd:extension base="xsd:decimal">
                                        <xsd:attribute name="Type" type="xsd:string">
                                          <xsd:annotation>
                                            <xsd:documentation>Provides a text description of the type of length included in the response for the bag type.                                                                Example - Linear  </xsd:documentation>
                                          </xsd:annotation>
                                        </xsd:attribute>
                                      </xsd:extension>
                                    </xsd:simpleContent>
                                  </xsd:complexType>
                                </xsd:element>
                                <xsd:element minOccurs="0" name="Height" type="xsd:decimal">
                                  <xsd:annotation>
                                    <xsd:documentation>Value e.g 40 </xsd:documentation>
                                  </xsd:annotation>
                                </xsd:element>
                                <xsd:element minOccurs="0" name="Width" type="xsd:decimal">
                                  <xsd:annotation>
                                    <xsd:documentation>Value e.g 40 </xsd:documentation>
                                  </xsd:annotation>
                                </xsd:element>
                              </xsd:sequence>
                              <xsd:attribute name="Units" type="xsd:string" use="required">
                                <xsd:annotation>
                                  <xsd:documentation>Measurement unit
Values are:
IN
CM</xsd:documentation>
                                </xsd:annotation>
                              </xsd:attribute>
                            </xsd:complexType>
                          </xsd:element>
                          <xsd:element minOccurs="0" maxOccurs="unbounded" name="MinDimensions">
                            <xsd:annotation>
                              <xsd:documentation>Minimum Size requirement of the Sub Code for which the baggage allowance/charge applies</xsd:documentation>
                            </xsd:annotation>
                            <xsd:complexType>
                              <xsd:sequence>
                                <xsd:element minOccurs="0" name="Length">
                                  <xsd:annotation>
                                    <xsd:documentation>Value e.g 40 </xsd:documentation>
                                  </xsd:annotation>
                                  <xsd:complexType>
                                    <xsd:simpleContent>
                                      <xsd:extension base="xsd:decimal">
                                        <xsd:attribute name="Type" type="xsd:string">
                                          <xsd:annotation>
                                            <xsd:documentation>Provides a text description of the type of length included in the response for the bag type.                                                                Example - Linear  </xsd:documentation>
                                          </xsd:annotation>
                                        </xsd:attribute>
                                      </xsd:extension>
                                    </xsd:simpleContent>
                                  </xsd:complexType>
                                </xsd:element>
                                <xsd:element minOccurs="0" name="Height" type="xsd:decimal">
                                  <xsd:annotation>
                                    <xsd:documentation>Value e.g 40 </xsd:documentation>
                                  </xsd:annotation>
                                </xsd:element>
                                <xsd:element minOccurs="0" name="Width" type="xsd:decimal">
                                  <xsd:annotation>
                                    <xsd:documentation>Value e.g 40 </xsd:documentation>
                                  </xsd:annotation>
                                </xsd:element>
                              </xsd:sequence>
                              <xsd:attribute name="Units" type="xsd:string" use="required">
                                <xsd:annotation>
                                  <xsd:documentation>Measurement unit
Values are:
IN
CM</xsd:documentation>
                                </xsd:annotation>
                              </xsd:attribute>
                            </xsd:complexType>
                          </xsd:element>
                          <xsd:element minOccurs="0" name="ExcessFirst" type="xsd:integer">
                            <xsd:annotation>
                              <xsd:documentation>represent the first occurrence of the excess bag.</xsd:documentation>
                            </xsd:annotation>
                          </xsd:element>
                          <xsd:element minOccurs="0" name="ExcessLast" type="xsd:integer">
                            <xsd:annotation>
                              <xsd:documentation>represent the first occurrence of the excess bag.</xsd:documentation>
                            </xsd:annotation>
                          </xsd:element>
                        </xsd:sequence>
                      </xsd:complexType>
                    </xsd:element>
                    <xsd:element minOccurs="0" name="WebLinks">
                      <xsd:annotation>
                        <xsd:documentation>Links to associated promotional material</xsd:documentation>
                      </xsd:annotation>
                      <xsd:complexType>
                        <xsd:sequence>
                          <xsd:element maxOccurs="unbounded" name="WebLink">
                            <xsd:complexType>
                              <xsd:simpleContent>
                                <xsd:extension base="xsd:string">
                                  <xsd:attribute name="Type">
                                    <xsd:annotation>
                                      <xsd:documentation>Indicates what the content of the web link is; these are possible values:
“I”  Image
“V” Video
“C” HTML or other webpages                      "D" Deeplink URL                 "R" RouteHappy Content      "T" Template Location</xsd:documentation>
                                    </xsd:annotation>
                                    <xsd:simpleType>
                                      <xsd:restriction base="xsd:string">
                                        <xsd:enumeration value="I" />
                                        <xsd:enumeration value="V" />
                                        <xsd:enumeration value="C" />
                                        <xsd:enumeration value="R" />
                                        <xsd:enumeration value="D" />
                                        <xsd:enumeration value="T" />
                                      </xsd:restriction>
                                    </xsd:simpleType>
                                  </xsd:attribute>
                                </xsd:extension>
                              </xsd:simpleContent>
                            </xsd:complexType>
                          </xsd:element>
                        </xsd:sequence>
                      </xsd:complexType>
                    </xsd:element>
                  </xsd:sequence>
                  <xsd:attributeGroup ref="sourceMandatory" />
                  <xsd:attribute name="TrxRefKey" type="xsd:string" use="required">
                    <xsd:annotation>
                      <xsd:documentation>Data binding reference key created for each supported PNR element such as "Services".

Generate standard 36 character GUID (example 540c2d5f-a9ab-4414-bd36-9999f5388773) and convert to base64 (example Xy0MVKupFES9NpmZ9TiHcw).  Result is unique 22 character key.</xsd:documentation>
                    </xsd:annotation>
                  </xsd:attribute>
                  <xsd:attribute name="AssociationID" type="xsd:ID" use="required">
                    <xsd:annotation>
                      <xsd:documentation>Unique ID used to associate to this element at PNR creation time.  Example: S1</xsd:documentation>
                    </xsd:annotation>
                  </xsd:attribute>
                  <xsd:attribute name="ReasonCode" type="xsd:string" use="required">
                    <xsd:annotation>
                      <xsd:documentation>IATA RFIC (ReasonFor IssuanceCode, a 1-character main code)
Example of RFIC: A  

Note: Only services of same RFIC code can be combined on an EMD-A document.  For example, if there are services of RFIC code "A" and "B", two separate EMD documents are needed, issuing all services of "A" and "B" on seperate docs.</xsd:documentation>
                    </xsd:annotation>
                  </xsd:attribute>
                  <xsd:attribute name="Method" use="optional">
                    <xsd:annotation>
                      <xsd:documentation>Values are:

F = FareIntegrated
EA = EMD Associated
ES = EMD Standalone 
MA = Flight Associated but settled via MCO
MS = Standalone but settle via MCO
D = DirectSettlement</xsd:documentation>
                    </xsd:annotation>
                    <xsd:simpleType>
                      <xsd:restriction base="xsd:string">
                        <xsd:enumeration value="F" />
                        <xsd:enumeration value="EA" />
                        <xsd:enumeration value="MA" />
                        <xsd:enumeration value="ES" />
                        <xsd:enumeration value="MS" />
                        <xsd:enumeration value="D" />
                      </xsd:restriction>
                    </xsd:simpleType>
                  </xsd:attribute>
                  <xsd:attribute name="SubCode" type="xsd:string" use="required">
                    <xsd:annotation>
                      <xsd:documentation>ATPCO RFIS (ReasonForIssuance  Subcode).
Example of RFIS: 0CC  </xsd:documentation>
                    </xsd:annotation>
                  </xsd:attribute>
                  <xsd:attribute name="ServiceCode" type="xsd:string" use="optional">
                    <xsd:annotation>
                      <xsd:documentation>Additional unique ATPCO code.
Example: OC</xsd:documentation>
                    </xsd:annotation>
                  </xsd:attribute>
                  <xsd:attribute name="Type">
                    <xsd:annotation>
                      <xsd:documentation>Indicator if this option is a discount or a surcharge;

Values are: 
"Discount"  1)
"Surcharge"
"Included"  2)
"Not applicable" 3)
"Credit" 4)

1) only applicable when using methof F, applying option directly to a fare (not used in an EMD solution)

2) This item is free of charge due to FQTV status or chosen Price Class

3) This item is not available/applicable due to FQTV status or chosen Price Class.

4) This value applies when a residual value is provided as a credit (for future travel) 

Sample:  Earning extra miles may only be allowed for a Top tier FQTV status and is not applicable for any other traveler.</xsd:documentation>
                    </xsd:annotation>
                    <xsd:simpleType>
                      <xsd:restriction base="xsd:string">
                        <xsd:enumeration value="Discount" />
                        <xsd:enumeration value="Surcharge" />
                        <xsd:enumeration value="Included" />
                        <xsd:enumeration value="Not applicable" />
                      </xsd:restriction>
                    </xsd:simpleType>
                  </xsd:attribute>
                  <xsd:attribute name="FareBrand" type="xsd:string">
                    <xsd:annotation>
                      <xsd:documentation>Service is part of a bundle associated to this fare brand</xsd:documentation>
                    </xsd:annotation>
                  </xsd:attribute>
                  <xsd:attribute name="Quantity" type="xsd:integer">
                    <xsd:annotation>
                      <xsd:documentation>This attribute provides how many service/items of the same type have been ordered. 

Possible Values: 
1-99; 1 being the default

Example: 3</xsd:documentation>
                    </xsd:annotation>
                  </xsd:attribute>
                  <xsd:attribute name="ServiceType" type="xsd:string">
                    <xsd:annotation>
                      <xsd:documentation>The ATPCO defined code for the type of service (also referred to as 'Flight/Ticket/Merchandise Byte 21)':

F = Flight (TypeValue=2)
R = Rule Buster (Type Value = 5)
T = Ticket (TypeValue=3 if EMD-S is issued, 4 if other)
M = Merchandise (TypeValue=1 if EMD-S is issued, 4 if other)</xsd:documentation>
                    </xsd:annotation>
                  </xsd:attribute>
                  <xsd:attribute name="FQTVStatus" type="xsd:string">
                    <xsd:annotation>
                      <xsd:documentation>The status (tier level) of the traveler's FQTV account.

This is available as a query results against the airline's FQTV database.

Samples:
AA(American AAdvantage):
-- Gold
-- Platinum
-- Executive Platinum

LH (Miles and More):
-- Frequent Traveller
-- Senator
-- HON Circle

EK (Emirates Skywards):
-- Silver
-- Gold</xsd:documentation>
                    </xsd:annotation>
                  </xsd:attribute>
                  <xsd:attribute name="FQTVNumber" type="xsd:string">
                    <xsd:annotation>
                      <xsd:documentation>This is the actual FrequentFlyer number associated to the FQTVStatus.  This will allow the POS GUI to associate the actual traveler with the respective option/price</xsd:documentation>
                    </xsd:annotation>
                  </xsd:attribute>
                  <xsd:attribute name="ProviderIDRef" type="xsd:string">
                    <xsd:annotation>
                      <xsd:documentation>Allows to associate this service to a unique provider tag/id/ref</xsd:documentation>
                    </xsd:annotation>
                  </xsd:attribute>
                  <xsd:attribute name="MustSelect" type="xsd:string">
                    <xsd:annotation>
                      <xsd:documentation>Identifies (free or included) services which must be explicitly selected.
Allowed Values: Y/N</xsd:documentation>
                    </xsd:annotation>
                  </xsd:attribute>
                  <xsd:attribute name="ApplyToAll" use="optional">
                    <xsd:annotation>
                      <xsd:documentation>Identifies that this offer, if selected, applies to all passengers in the PNR

Allowed value: "Y"</xsd:documentation>
                    </xsd:annotation>
                    <xsd:simpleType>
                      <xsd:restriction base="xsd:string">
                        <xsd:enumeration value="Y" />
                        <xsd:enumeration value="N" />
                      </xsd:restriction>
                    </xsd:simpleType>
                  </xsd:attribute>
                  <xsd:attribute name="CanUnBundle">
                    <xsd:annotation>
                      <xsd:documentation>Indicates if the service can be unbundled from the rest of the offering or not. Values Y/N</xsd:documentation>
                    </xsd:annotation>
                    <xsd:simpleType>
                      <xsd:restriction base="xsd:string">
                        <xsd:enumeration value="Y" />
                        <xsd:enumeration value="N" />
                      </xsd:restriction>
                    </xsd:simpleType>
                  </xsd:attribute>
                  <xsd:attribute name="Status">
                    <xsd:annotation>
                      <xsd:documentation>Values are per AIRIMP chapter 7:                            Examples:
NN = "Requested"
HK = "Confirmed"
NO = "Unavailable"
PN = "Pending"</xsd:documentation>
                    </xsd:annotation>
                    <xsd:simpleType>
                      <xsd:restriction base="xsd:string">
                        <xsd:enumeration value="NN" />
                        <xsd:enumeration value="HK" />
                      </xsd:restriction>
                    </xsd:simpleType>
                  </xsd:attribute>
                </xsd:complexType>
              </xsd:element>
            </xsd:sequence>
          </xsd:complexType>
        </xsd:element>
        <xsd:element minOccurs="0" maxOccurs="unbounded" ref="SpecialServiceRequest" />
        <xsd:element minOccurs="0" maxOccurs="unbounded" name="APIS">
          <xsd:annotation>
            <xsd:documentation>APIS data group
(Advanced Passenger Information System)</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:sequence>
              <xsd:element ref="TravelerIDRef" />
              <xsd:element minOccurs="0" maxOccurs="unbounded" ref="SegmentIDRef" />
              <xsd:choice>
                <xsd:element name="PictureID">
                  <xsd:annotation>
                    <xsd:documentation>Passport or other accepted government issued picture ID. SSR DOCS.	

U.S. Department of Homeland Security (DHS) announced Secure Flight program. Effective Date: 1 May 2009. As part of this program requirements the elements DocNumber and NationalityCountry are optional. For regular Picture ID reporting where for instance passport number and issuing country is known - information is still required.

A single SSR DOCS is required for each passenger when submitting required Secure Flight information, as the information is pertinent to a specific passenger. 

If more than one passenger is identified during name association when entering the SSR DOCS, existing error responses will be displayed.
</xsd:documentation>
                  </xsd:annotation>
                  <xsd:complexType>
                    <xsd:sequence>
                      <xsd:element minOccurs="0" name="DocType">
                        <xsd:annotation>
                          <xsd:documentation>A  - Alien resident card
C - Permanent resident card
P - Passport
T - Refugee travel document and re-entry permit, US Travel document
F - Facilitation document
M - Military
N - Naturalization certificate
V - Border crossing card
DB - Secure Flight data</xsd:documentation>
                        </xsd:annotation>
                        <xsd:simpleType>
                          <xsd:restriction base="xsd:string">
                            <xsd:length value="2" />
                            <xsd:enumeration value="A" />
                            <xsd:enumeration value="C" />
                            <xsd:enumeration value="P" />
                            <xsd:enumeration value="F" />
                            <xsd:enumeration value="M" />
                            <xsd:enumeration value="N" />
                            <xsd:enumeration value="V" />
                            <xsd:enumeration value="DB" />
                          </xsd:restriction>
                        </xsd:simpleType>
                      </xsd:element>
                      <xsd:element minOccurs="0" name="IssueCountry">
                        <xsd:annotation>
                          <xsd:documentation>Country where document (for instance passport) was issued.
Use valid 2 or 3 char country codes. ISO3166-Alpha2 or ISO3166-Alpha3</xsd:documentation>
                        </xsd:annotation>
                        <xsd:simpleType>
                          <xsd:restriction base="xsd:string">
                            <xsd:length value="2" />
                          </xsd:restriction>
                        </xsd:simpleType>
                      </xsd:element>
                      <xsd:element minOccurs="0" name="IssueDate" type="xsd:date">
                        <xsd:annotation>
                          <xsd:documentation>Document issue date 
Example: 2012-05-25</xsd:documentation>
                        </xsd:annotation>
                      </xsd:element>
                      <xsd:element minOccurs="0" name="DocNumber">
                        <xsd:annotation>
                          <xsd:documentation>Document (for instance passport) number.</xsd:documentation>
                        </xsd:annotation>
                        <xsd:simpleType>
                          <xsd:restriction base="xsd:string">
                            <xsd:minLength value="1" />
                          </xsd:restriction>
                        </xsd:simpleType>
                      </xsd:element>
                      <xsd:element minOccurs="0" name="NationalityCountry">
                        <xsd:annotation>
                          <xsd:documentation>Use valid 2 or 3 char country codes. ISO3166-Alpha2 or ISO3166-Alpha3</xsd:documentation>
                        </xsd:annotation>
                        <xsd:simpleType>
                          <xsd:restriction base="xsd:string">
                            <xsd:length value="2" />
                          </xsd:restriction>
                        </xsd:simpleType>
                      </xsd:element>
                      <xsd:element ref="DateOfBirth" />
                      <xsd:element ref="Gender">
                        <xsd:annotation>
                          <xsd:documentation>Traveler gender.  Values are: F = Female M = Male U= Unknown at time of booking.  Example: M      NOTE: Always use M or F int eh FLX API, even for infants. FLX backend processing will submit alternative indicators (such as MI/FI) as appropriate</xsd:documentation>
                        </xsd:annotation>
                      </xsd:element>
                      <xsd:element minOccurs="0" name="DocExpirationDate" type="xsd:date">
                        <xsd:annotation>
                          <xsd:documentation>This element is MANDATORY, if the DocType is one of the following: 
C - Permanent resident card
P - Passport
T - Refugee travel document and re-entry permit, US Travel document
M - Military

Example: 2012-05-25</xsd:documentation>
                        </xsd:annotation>
                      </xsd:element>
                      <xsd:element ref="Surname" />
                      <xsd:element ref="GivenName" />
                      <xsd:element minOccurs="0" ref="Initial">
                        <xsd:annotation>
                          <xsd:documentation>Traveler middle initial or spelled out middle name.  Example: G</xsd:documentation>
                        </xsd:annotation>
                      </xsd:element>
                      <xsd:element minOccurs="0" name="PassportHolder">
                        <xsd:annotation>
                          <xsd:documentation>In case of a multi-passenger passport this element can be used to indentify the the person entered in this SSR is the primary passport holder. The only value allowed: H.
Example: H</xsd:documentation>
                        </xsd:annotation>
                        <xsd:simpleType>
                          <xsd:restriction base="xsd:string">
                            <xsd:length value="1" />
                            <xsd:enumeration value="H" />
                          </xsd:restriction>
                        </xsd:simpleType>
                      </xsd:element>
                    </xsd:sequence>
                  </xsd:complexType>
                </xsd:element>
                <xsd:element name="VISA">
                  <xsd:annotation>
                    <xsd:documentation>Visa information.
SSR DOCO

A single VISA element must be created for each passenger when submitting a redress number as it is always associated to a specific passenger. </xsd:documentation>
                  </xsd:annotation>
                  <xsd:complexType>
                    <xsd:sequence>
                      <xsd:element minOccurs="0" default="V" name="DocType">
                        <xsd:annotation>
                          <xsd:documentation>Identifies the type of the SSR DOCO entered. Three types exist: Visa (default), Known Traveler Number and Redress Number.
V - Visa
K - Known Traveler
R - Redress Number
Example: V</xsd:documentation>
                        </xsd:annotation>
                        <xsd:simpleType>
                          <xsd:restriction base="xsd:string">
                            <xsd:length value="1" />
                            <xsd:enumeration value="V" />
                            <xsd:enumeration value="K" />
                            <xsd:enumeration value="R" />
                          </xsd:restriction>
                        </xsd:simpleType>
                      </xsd:element>
                      <xsd:element minOccurs="0" name="PlaceOfBirth">
                        <xsd:annotation>
                          <xsd:documentation>Mandatory for VISA</xsd:documentation>
                        </xsd:annotation>
                        <xsd:simpleType>
                          <xsd:restriction base="xsd:string">
                            <xsd:minLength value="1" />
                          </xsd:restriction>
                        </xsd:simpleType>
                      </xsd:element>
                      <xsd:element name="DocNumber">
                        <xsd:annotation>
                          <xsd:documentation>Mandatory for all types.
This is the VISA document number, the RedressNumber or the KnownTraveler number</xsd:documentation>
                        </xsd:annotation>
                        <xsd:simpleType>
                          <xsd:restriction base="xsd:string">
                            <xsd:minLength value="1" />
                          </xsd:restriction>
                        </xsd:simpleType>
                      </xsd:element>
                      <xsd:element minOccurs="0" name="PlaceOfIssue" type="xsd:string">
                        <xsd:annotation>
                          <xsd:documentation>Mandatory for VISA

Example: Frankfurt</xsd:documentation>
                        </xsd:annotation>
                      </xsd:element>
                      <xsd:element minOccurs="0" name="IssueDate" type="xsd:date">
                        <xsd:annotation>
                          <xsd:documentation>Mandatory for VISA</xsd:documentation>
                        </xsd:annotation>
                      </xsd:element>
                      <xsd:element minOccurs="0" name="IssuedForCountry">
                        <xsd:annotation>
                          <xsd:documentation>Mandatory for VISA

Use valid 2 or 3 char country codes. ISO3166-Alpha2 or ISO3166-Alpha3
Example: DE</xsd:documentation>
                        </xsd:annotation>
                        <xsd:simpleType>
                          <xsd:restriction base="xsd:string">
                            <xsd:minLength value="2" />
                            <xsd:maxLength value="3" />
                          </xsd:restriction>
                        </xsd:simpleType>
                      </xsd:element>
                      <xsd:element minOccurs="0" name="InfantOnLap">
                        <xsd:simpleType>
                          <xsd:restriction base="xsd:string">
                            <xsd:length value="1" />
                            <xsd:enumeration value="Y" />
                            <xsd:enumeration value="N" />
                          </xsd:restriction>
                        </xsd:simpleType>
                      </xsd:element>
                    </xsd:sequence>
                  </xsd:complexType>
                </xsd:element>
                <xsd:element name="StayingAt">
                  <xsd:annotation>
                    <xsd:documentation>Address while in country. 
SSR DOCA

NOTE: SplitItemLine atttribute is for future use and is considered a plcaeholder. Not supported. Will be ignored if included in request.

NOTE: Dashes are not allowed in APIS entries. XX1 will replace dashes wiht a space.</xsd:documentation>
                  </xsd:annotation>
                  <xsd:complexType>
                    <xsd:sequence>
                      <xsd:element name="Address" type="xsd:string">
                        <xsd:annotation>
                          <xsd:documentation>Street or PO Box address.  Example: 1234 Main Street</xsd:documentation>
                        </xsd:annotation>
                      </xsd:element>
                      <xsd:element name="City" type="xsd:string">
                        <xsd:annotation>
                          <xsd:documentation>City name.  Example: NY</xsd:documentation>
                        </xsd:annotation>
                      </xsd:element>
                      <xsd:element name="StateCode" type="xsd:string">
                        <xsd:annotation>
                          <xsd:documentation>State code.  Example: NY</xsd:documentation>
                        </xsd:annotation>
                      </xsd:element>
                      <xsd:element name="CountryCode" type="xsd:string">
                        <xsd:annotation>
                          <xsd:documentation>Country code.  Example: US</xsd:documentation>
                        </xsd:annotation>
                      </xsd:element>
                      <xsd:element name="PostalCode" type="xsd:string">
                        <xsd:annotation>
                          <xsd:documentation>Postal code or zip code.  Example: 12345</xsd:documentation>
                        </xsd:annotation>
                      </xsd:element>
                      <xsd:element minOccurs="0" name="InfantOnLap">
                        <xsd:simpleType>
                          <xsd:restriction base="xsd:string">
                            <xsd:length value="1" />
                            <xsd:enumeration value="Y" />
                            <xsd:enumeration value="N" />
                          </xsd:restriction>
                        </xsd:simpleType>
                      </xsd:element>
                    </xsd:sequence>
                    <xsd:attribute name="AddressType">
                      <xsd:annotation>
                        <xsd:documentation>Valid address types are:
R - Residence Address
D - Destination Address
</xsd:documentation>
                      </xsd:annotation>
                      <xsd:simpleType>
                        <xsd:restriction base="xsd:string">
                          <xsd:length value="1" />
                          <xsd:enumeration value="R" />
                          <xsd:enumeration value="D" />
                        </xsd:restriction>
                      </xsd:simpleType>
                    </xsd:attribute>
                  </xsd:complexType>
                </xsd:element>
              </xsd:choice>
            </xsd:sequence>
          </xsd:complexType>
        </xsd:element>
        <xsd:element minOccurs="0" maxOccurs="unbounded" ref="TicketRemark" />
        <xsd:element minOccurs="0" maxOccurs="unbounded" ref="UserRemark" />
        <xsd:element minOccurs="0" maxOccurs="unbounded" ref="HistoricalRemark" />
        <xsd:element minOccurs="0" maxOccurs="unbounded" ref="AccountingLine" />
        <xsd:element minOccurs="0" name="AccountingInfo">
          <xsd:annotation>
            <xsd:documentation>BOS related accounting information</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:all>
              <xsd:element name="AccountNumber" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>BOS related account number</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" name="CompanyNumber" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>IATA/ARC/BOS company identification number</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" name="CostCenter" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>Cost center number/code</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
            </xsd:all>
          </xsd:complexType>
        </xsd:element>
        <xsd:element minOccurs="0" maxOccurs="unbounded" ref="TicketingInstructions" />
        <xsd:element minOccurs="0" maxOccurs="unbounded" ref="HiddenRemark" />
        <xsd:element minOccurs="0" name="TourCode">
          <xsd:annotation>
            <xsd:documentation>TourCode element (Amadeus)</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:sequence>
              <xsd:element name="Text" type="FreeFormTextField">
                <xsd:annotation>
                  <xsd:documentation>Information text. Example: Free flow text</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
            </xsd:sequence>
          </xsd:complexType>
        </xsd:element>
        <xsd:element minOccurs="0" maxOccurs="unbounded" name="ManualTicket">
          <xsd:complexType>
            <xsd:sequence>
              <xsd:element ref="TravelerIDRef" />
              <xsd:element minOccurs="0" maxOccurs="unbounded" ref="SegmentIDRef" />
              <xsd:element ref="AirlineCode" />
              <xsd:element name="TicketNumber" type="xsd:string" />
              <xsd:element minOccurs="0" name="TNCheckDigit" type="xsd:string" />
              <xsd:element minOccurs="0" name="TNLastConjunction" type="xsd:string" />
              <xsd:element minOccurs="0" name="TNLastConjunctionCheckDigit" type="xsd:string" />
              <xsd:element minOccurs="0" ref="Text" />
            </xsd:sequence>
            <xsd:attribute name="Type" use="required">
              <xsd:annotation>
                <xsd:documentation>Type of the manual document. A-automated (in case the system did not issued a ticket w/ automated number), E - e-Ticket number, M- a real manual (handwritten) ticket number.
</xsd:documentation>
              </xsd:annotation>
              <xsd:simpleType>
                <xsd:restriction base="xsd:string">
                  <xsd:enumeration value="A" />
                  <xsd:enumeration value="E" />
                  <xsd:enumeration value="M" />
                </xsd:restriction>
              </xsd:simpleType>
            </xsd:attribute>
            <xsd:attribute default="N" name="IsInfant" use="optional">
              <xsd:simpleType>
                <xsd:restriction base="xsd:string">
                  <xsd:enumeration value="Y" />
                  <xsd:enumeration value="N" />
                </xsd:restriction>
              </xsd:simpleType>
            </xsd:attribute>
          </xsd:complexType>
        </xsd:element>
        <xsd:element minOccurs="0" maxOccurs="unbounded" name="CLID">
          <xsd:annotation>
            <xsd:documentation>CLID Group</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="unbounded" ref="TravelerIDRef" />
              <xsd:element name="CLIDCompanyCode">
                <xsd:annotation>
                  <xsd:documentation source="description" xml:lang="en">Airline code of the program/ membership sponsoring airline.</xsd:documentation>
                </xsd:annotation>
                <xsd:complexType>
                  <xsd:simpleContent>
                    <xsd:extension base="xsd:string" />
                  </xsd:simpleContent>
                </xsd:complexType>
              </xsd:element>
              <xsd:element name="CLIDNumber">
                <xsd:annotation>
                  <xsd:documentation>CorporateID. Example: C900395168859</xsd:documentation>
                </xsd:annotation>
                <xsd:simpleType>
                  <xsd:restriction base="xsd:string">
                    <xsd:minLength value="1" />
                    <xsd:maxLength value="50" />
                  </xsd:restriction>
                </xsd:simpleType>
              </xsd:element>
              <xsd:element minOccurs="0" name="CLIDStatus" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>CLID level for this member as provided by airline's database.</xsd:documentation>
                  <xsd:appinfo>
                    <title xmlns="">Schematron Release Notes</title>
                    <change version="2.0" change="V2-Child elements should have defined types." changeDetail="Element typed as xsd:string" xmlns="" />
                  </xsd:appinfo>
                </xsd:annotation>
              </xsd:element>
            </xsd:sequence>
          </xsd:complexType>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="OtherSegment">
    <xsd:annotation>
      <xsd:documentation>Other segment group</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" maxOccurs="8" ref="TravelerIDRef" />
        <xsd:element ref="VendorCode" />
        <xsd:element ref="ServiceDate" />
        <xsd:element ref="Purchase" />
        <xsd:element ref="ActionCode" />
        <xsd:element ref="NumberInParty" />
        <xsd:element minOccurs="0" maxOccurs="unbounded" ref="Text" />
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="OtherServiceInformation">
    <xsd:annotation>
      <xsd:documentation>Other service information group.  If TravelerAssociationNumber is not included, then OSI applies to all travelers.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" maxOccurs="unbounded" ref="TravelerIDRef" />
        <xsd:element minOccurs="0" ref="SegmentIDRef">
          <xsd:annotation>
            <xsd:documentation>ID reference used to asscociate the OSI to a segment.  No comma separeted lists and no ranges supported. Back end system specific restrictions may apply.

Example: F1</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element ref="AirlineCode" />
        <xsd:element minOccurs="0" name="OSICode" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Conventional code (AIRIMP code) for other service information. Recommended to use when sending OSI to airline. Example: CTCA</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element ref="Text" />
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="PartialRefund">
    <xsd:annotation>
      <xsd:documentation>Partial refund group</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element ref="RefundAmount" />
        <xsd:element ref="RefundTax" />
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="PassengerAccountRecord" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>Name of passenger profile record.  Example: SMITH</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="PassengerIDRef" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>Traveler reference ID used to associate this element to a traveler at PNR creation time.  This ID can have three different value types

(1) It can be an ID that cross-references the same ID that is in a Traveler AssociationID attribute.  This is the case when Traveler names and insurance segments are in the same input XML.  Ex: T1  (2) It can be the traveler PNR element number. This would be the case when the passenger name is already in the PNR and the insurance segment is added to the PNR.  Ex: 1.1 (3) It can have the value ALL, which would associated the insurance segment to all passengers in the PNR. Example: ALL</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="PassengerInformation">
    <xsd:annotation>
      <xsd:documentation>PassengerInformation group</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element ref="PassengerIDRef" />
        <xsd:choice>
          <xsd:sequence>
            <xsd:element minOccurs="0" ref="RateType" />
            <xsd:choice>
              <xsd:element ref="DateOfBirth" />
              <xsd:element ref="Age" />
            </xsd:choice>
            <xsd:element minOccurs="0" ref="Beneficiary" />
          </xsd:sequence>
          <xsd:element ref="IDNumber" />
        </xsd:choice>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="PassengerRef" type="xsd:integer">
    <xsd:annotation>
      <xsd:documentation>Passenger reference number for credit card payment.  Example 3</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="Payment" type="Payment_Type">
    <xsd:annotation>
      <xsd:documentation>Payment information group</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="PaymentGuarantee">
    <xsd:annotation>
      <xsd:documentation>Payment guarantee group</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" maxOccurs="unbounded" ref="CreditCard" />
        <xsd:element minOccurs="0" maxOccurs="unbounded" ref="Other" />
      </xsd:sequence>
      <xsd:attribute default="G" name="Type" use="optional">
        <xsd:annotation>
          <xsd:documentation>Type of payment.  Values are:
G = Guarantee
D = Deposit
Example: G</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:minLength value="1" />
            <xsd:maxLength value="1" />
            <xsd:enumeration value="G" />
            <xsd:enumeration value="D" />
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:attribute>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="PaymentType">
    <xsd:annotation>
      <xsd:documentation>Insurance payment type group</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" ref="CCCode" />
        <xsd:element minOccurs="0" ref="CCNumber" />
        <xsd:element minOccurs="0" ref="CCExpiration" />
        <xsd:element minOccurs="0" ref="CardholderLastName" />
        <xsd:choice minOccurs="0">
          <xsd:element ref="PassengerRef" />
          <xsd:element ref="Percentage" />
          <xsd:element ref="DollarValue" />
        </xsd:choice>
      </xsd:sequence>
      <xsd:attribute name="Type" use="required">
        <xsd:annotation>
          <xsd:documentation>Payment type indicator. When CC, CCCode, CCNumber and CCExpiration become mandatory. Possible values are: 
CA = cash
CC = credit card
CK = check
Example: CC</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:minLength value="2" />
            <xsd:maxLength value="2" />
            <xsd:enumeration value="CA" />
            <xsd:enumeration value="CC" />
            <xsd:enumeration value="CK" />
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:attribute>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="Penalty">
    <xsd:annotation>
      <xsd:documentation>Penalty group</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" ref="TicketText" />
        <xsd:element minOccurs="0" ref="FeeApplies" />
        <xsd:element minOccurs="0" ref="CurrencyCode" />
        <xsd:element minOccurs="0" maxOccurs="3" ref="Change" />
        <xsd:element minOccurs="0" maxOccurs="3" ref="Cancel" />
        <xsd:element minOccurs="0" ref="Failure" />
        <xsd:element minOccurs="0" ref="Replace" />
      </xsd:sequence>
      <xsd:attribute name="TicketRefundable" use="optional">
        <xsd:annotation>
          <xsd:documentation>Indicates if ticket is refundable or not.  Values are: Y = Ticket is refundable
N = Ticket is not refundable  Example: Y</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:minLength value="1" />
            <xsd:maxLength value="1" />
            <xsd:enumeration value="Y" />
            <xsd:enumeration value="N" />
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:attribute>
      <xsd:attribute name="DepositRequired" use="optional">
        <xsd:annotation>
          <xsd:documentation>Indicates if deposit is refundable or not.  Values are: Y = Deposit is refundable
N = Deposit is not refundable  Example: Y</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:minLength value="1" />
            <xsd:maxLength value="1" />
            <xsd:enumeration value="Y" />
            <xsd:enumeration value="N" />
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:attribute>
      <xsd:attribute name="DepositRefundable" use="optional">
        <xsd:annotation>
          <xsd:documentation>Y = Deposit is non refundable
N = Deposit is refundable  Example: Y</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:minLength value="1" />
            <xsd:maxLength value="1" />
            <xsd:enumeration value="Y" />
            <xsd:enumeration value="N" />
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:attribute>
      <xsd:attribute name="Reusable" use="optional">
        <xsd:annotation>
          <xsd:documentation>If Y, this is a reusable fare.
Example: Y (YES)</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:minLength value="1" />
            <xsd:maxLength value="1" />
            <xsd:enumeration value="Y" />
            <xsd:enumeration value="N" />
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:attribute>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="Percentage" type="xsd:integer">
    <xsd:annotation>
      <xsd:documentation>Percentage value for credit card payment.  Example: 25</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="PickUp">
    <xsd:annotation>
      <xsd:documentation>Pick up information group</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:choice>
          <xsd:element ref="AirportCode" />
          <xsd:element ref="Location" />
        </xsd:choice>
        <xsd:element ref="Date" />
        <xsd:element ref="Time" />
        <xsd:element minOccurs="0" ref="FlightArrival" />
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="PickUpDate" type="xsd:date">
    <xsd:annotation>
      <xsd:documentation>Car rental pick up date.  Example: 2002-12-25</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="PickUpInfo">
    <xsd:annotation>
      <xsd:documentation>Pick up information group</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element ref="Date" />
        <xsd:element minOccurs="0" ref="Time">
          <xsd:annotation>
            <xsd:documentation>Time in ISO 8601 format (hh:mm).  
MANDATORY for Amadeus!

Example: 14:30</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" ref="CityCode" />
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="PlanType" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>Insurance plan type.  Example: TPKG</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="PNRName" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>Free text entered by the user to identify the PNR easily by this text instead of the record locator.  Example: Houston Trip</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="PolicyNumber" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>Policy number.  Example: Y123T456</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="PostalCode">
    <xsd:annotation>
      <xsd:documentation>Postal code or zip code.  Example: 12345</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:simpleContent>
        <xsd:extension base="xsd:string">
          <xsd:attribute name="SplitItemLine" type="xsd:integer" use="optional">
            <xsd:annotation>
              <xsd:documentation>Allows to specify how to group address items when SplitItems attribut is at Yes. All items with the same SplitItemLine value will be created in the same address element in the GDS. Example: 1</xsd:documentation>
            </xsd:annotation>
          </xsd:attribute>
        </xsd:extension>
      </xsd:simpleContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="Prepaid" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>Prepaid ticketing.  Leave this element empty to create "prepaid ticket" ticketing element.  Example: - </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="Price">
    <xsd:annotation>
      <xsd:documentation>Price group for the PAX type identified in the Fare/Type attribute.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="BaseFare">
          <xsd:annotation>
            <xsd:documentation>Base fare amount. See amount attribute.</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:complexContent mixed="false">
              <xsd:restriction base="BaseFareType">
                <xsd:sequence>
                  <xsd:element minOccurs="0" ref="FiledIn" />
                  <xsd:element minOccurs="0" maxOccurs="0" name="Surcharges" type="SurchargesType">
                    <xsd:annotation>
                      <xsd:documentation>Surcharges group</xsd:documentation>
                    </xsd:annotation>
                  </xsd:element>
                </xsd:sequence>
                <xsd:attribute name="Amount" type="xsd:integer" use="required">
                  <xsd:annotation>
                    <xsd:documentation>Total base fare amount that includes surcharges (if any).  Example: 200000</xsd:documentation>
                  </xsd:annotation>
                </xsd:attribute>
              </xsd:restriction>
            </xsd:complexContent>
          </xsd:complexType>
        </xsd:element>
        <xsd:element ref="Taxes" />
      </xsd:sequence>
      <xsd:attribute name="Total" type="xsd:integer" use="required">
        <xsd:annotation>
          <xsd:documentation>Total Fare amount for one traveler of the specified passenger type.  Total price = base fare amount + taxes amount.  Example: 230000</xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="PriceClass">
    <xsd:annotation>
      <xsd:documentation>Identifies the price group associated to this price, e.g. TANGO</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:simpleContent>
        <xsd:extension base="xsd:string">
          <xsd:attribute name="Name" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>this is the exact name of the respective price class (fare brand).
</xsd:documentation>
            </xsd:annotation>
          </xsd:attribute>
          <xsd:attribute name="Code" type="xsd:string" use="optional">
            <xsd:annotation>
              <xsd:documentation>Numeric reference code to the price class.
Example: 1</xsd:documentation>
            </xsd:annotation>
          </xsd:attribute>
        </xsd:extension>
      </xsd:simpleContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="PricingInfo">
    <xsd:annotation>
      <xsd:documentation>Pricing information group</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="TravelerIDRef">
            <xsd:annotation>
              <xsd:documentation>Reference to a Traveler element this PricingInfo is to be applied to.

If no TravelerIDRef is specified, the PricingInfo is applied to all Traveler. If at least one TravelerIDRef is specified to add a PassengerTypeCode override, all other Traveler to be priced must also be referenced by respective TravelerIDRef elements, whether they require a a PassengerTypeCode override or not.

Example: T1</xsd:documentation>
            </xsd:annotation>
            <xsd:complexType>
              <xsd:simpleContent>
                <xsd:extension base="xsd:string">
                  <xsd:attribute name="PassengerTypeCode" type="xsd:string">
                    <xsd:annotation>
                      <xsd:documentation>The passenger type code to be applied *for pricing* for the traveler referenced by TravelerIDRef (See IATA PTC's).
		PassengerTypeCode is only required when there is a need to override the type code defined for the traveler via Traveler/@Type or resulting from agency/system defaults. This may be the case for instance 
- when booking a contract fare requiring a special type code (e.g. JCB)
- when booking a GOV fare for a traveler defined as ADT

Example: JCB</xsd:documentation>
                    </xsd:annotation>
                  </xsd:attribute>
                  <xsd:attributeGroup ref="RefType" />
                </xsd:extension>
              </xsd:simpleContent>
            </xsd:complexType>
          </xsd:element>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="SegmentIDRef">
            <xsd:annotation>
              <xsd:documentation>Allows to price (optional) services.

Use the attribute AssociationID of the flight element within this message, e.g. "F1"</xsd:documentation>
            </xsd:annotation>
            <xsd:complexType>
              <xsd:simpleContent>
                <xsd:extension base="xsd:string">
                  <xsd:attributeGroup ref="ONPoint" />
                  <xsd:attributeGroup ref="OFFPoint" />
                  <xsd:attributeGroup ref="RefType" />
                  <xsd:attribute name="FareRefKey" type="xsd:string">
                    <xsd:annotation>
                      <xsd:documentation>If this value is present in the shopping response it must be mapped to this location in the FlightPriceRQ in order to ensure that the selected fare from the shopping response is applied in the pricing process,</xsd:documentation>
                    </xsd:annotation>
                  </xsd:attribute>
                  <xsd:attribute name="PriceClassCode" type="xsd:integer" use="optional">
                    <xsd:annotation>
                      <xsd:documentation>Numeric reference code to the price class.
Example: 1</xsd:documentation>
                    </xsd:annotation>
                  </xsd:attribute>
                  <xsd:attribute name="PriceClassName" type="xsd:string" use="optional">
                    <xsd:annotation>
                      <xsd:documentation>Exact name of the respective price class (fare brand).
Example: SUPERSAVER</xsd:documentation>
                    </xsd:annotation>
                  </xsd:attribute>
                </xsd:extension>
              </xsd:simpleContent>
            </xsd:complexType>
          </xsd:element>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ServiceIDRef">
            <xsd:annotation>
              <xsd:documentation>Allows to price and re-priced new and existing (optional) services.

For booked services this is the reference to an existing ServiceElement, e.g. "8". For a new booking this references to the attribute AssociationID of the newly booked service element within this message, e.g. "S1"</xsd:documentation>
            </xsd:annotation>
            <xsd:complexType>
              <xsd:simpleContent>
                <xsd:extension base="xsd:string">
                  <xsd:attributeGroup ref="RefType" />
                </xsd:extension>
              </xsd:simpleContent>
            </xsd:complexType>
          </xsd:element>
          <xsd:element minOccurs="0" name="FareCacheKey" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>Internal fare reference for auto-exchanges.  Using this element requires a sessioned Auto-Exchange workflow.  This value is to be passed thru from a FlightPriceRS message when present.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" ref="Restrictions" />
          <xsd:element minOccurs="0" name="PricingCurrency" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>Desired currency override for pricing only (not ticketing)
Example: EUR</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" ref="AgencyType" />
          <xsd:element minOccurs="0" ref="PrivateFares" />
          <xsd:element minOccurs="0" ref="Commission" />
          <xsd:element minOccurs="0" name="ShoppingResponseIDs">
            <xsd:annotation>
              <xsd:documentation>A collection of shopping session (message response) IDs, including the unique (master) Shopping Response ID, Offer IDs, Offer Item IDs and Service IDs.

Notes: This capability may not be supported by all NDC-enabled systems or may be supported by bilateral agreement only. The technical implementation of this capability is not dictated by this specification. </xsd:documentation>
            </xsd:annotation>
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="ResponseID">
                  <xsd:annotation>
                    <xsd:documentation>Unique shopping session response ID. Example: 1F126AF1-7FCF-414F-8A3D-E4FFA408F747</xsd:documentation>
                  </xsd:annotation>
                  <xsd:complexType>
                    <xsd:simpleContent>
                      <xsd:extension base="xsd:string">
                        <xsd:attribute name="policy" type="xsd:string">
                          <xsd:annotation>
                            <xsd:documentation>Associated Policy Reference(s). Example: pol1 Note: This capability may not be supported by all NDC-enabled systems or may be supported by bilateral agreement only. If supported, the technical implementation of this capability is not dictated by this specification.</xsd:documentation>
                          </xsd:annotation>
                        </xsd:attribute>
                        <xsd:attribute name="refs" type="xsd:string">
                          <xsd:annotation>
                            <xsd:documentation>Object association(s) between this object and any other object or metadata instance(s).</xsd:documentation>
                          </xsd:annotation>
                        </xsd:attribute>
                      </xsd:extension>
                    </xsd:simpleContent>
                  </xsd:complexType>
                </xsd:element>
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
          <xsd:element minOccurs="0" maxOccurs="3" name="Endorsement">
            <xsd:annotation>
              <xsd:documentation>Creates endorsements associated with the fare. See Type attribute  for details of endorsement types.

In general, on tickets issued manual endorsements will override those automatically generated by the GDS/CRS, which are then no longer visible in the PNR. 

However, if a GDS (e.g. Apollo, Sabre) returns both generated and manual endorsements stored w/ a fare, both will be present in PNRViewRS distinguished by their Type.

Amadeus allows only either-or mode - either manual or automatically generated enorsements will be present in the PNR.

Which endorsements will be printed on the ticket depends on GDS-specific logic. As a rule of thumb: manual will override generated.</xsd:documentation>
            </xsd:annotation>
            <xsd:complexType>
              <xsd:complexContent mixed="false">
                <xsd:extension base="BasicEndorsement">
                  <xsd:attribute name="Type" use="required">
                    <xsd:annotation>
                      <xsd:documentation>Identifies the creation mode of this line. Values are:

M - manual override entered by agent
P - manual agent entered to be appended to the automatically generated line.</xsd:documentation>
                    </xsd:annotation>
                    <xsd:simpleType>
                      <xsd:restriction base="xsd:string">
                        <xsd:length value="1" />
                        <xsd:enumeration value="M" />
                        <xsd:enumeration value="P" />
                      </xsd:restriction>
                    </xsd:simpleType>
                  </xsd:attribute>
                </xsd:extension>
              </xsd:complexContent>
            </xsd:complexType>
          </xsd:element>
          <xsd:element minOccurs="0" name="TicketingIdentifier">
            <xsd:annotation>
              <xsd:documentation>Optional override element. Allows to override system settings for ticketing mode and force ticketing indicator in stored fare.
Values are:
E- E-Ticket
P - Paper Ticket

Restrictions:
Implemented for Sabre GDS only.  </xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
              <xsd:restriction base="xsd:string">
                <xsd:length value="1" />
                <xsd:enumeration value="E" />
                <xsd:enumeration value="P" />
              </xsd:restriction>
            </xsd:simpleType>
          </xsd:element>
          <xsd:element minOccurs="0" ref="ValidatingCarrier">
            <xsd:annotation>
              <xsd:documentation>Allows to specify the validating carrier for pricing. Example: DL</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" ref="HistoricPricingDate" />
          <xsd:element minOccurs="0" name="Redemption">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element maxOccurs="unbounded" name="Redeem">
                  <xsd:complexType>
                    <xsd:sequence>
                      <xsd:element name="RequiredAmount">
                        <xsd:complexType>
                          <xsd:simpleContent>
                            <xsd:extension base="xsd:integer">
                              <xsd:attribute name="Unit" use="required">
                                <xsd:annotation>
                                  <xsd:documentation source="description" xml:lang="en">Amount unit of measure. Example: Certificate, Points</xsd:documentation>
                                  <xsd:documentation source="values" xml:lang="en">Accepted values:
M = currency (money) value 
P = percentage</xsd:documentation>
                                </xsd:annotation>
                                <xsd:simpleType>
                                  <xsd:restriction base="xsd:string">
                                    <xsd:minLength value="1" />
                                    <xsd:maxLength value="1" />
                                    <xsd:enumeration value="M" />
                                    <xsd:enumeration value="P" />
                                  </xsd:restriction>
                                </xsd:simpleType>
                              </xsd:attribute>
                            </xsd:extension>
                          </xsd:simpleContent>
                        </xsd:complexType>
                      </xsd:element>
                      <xsd:element minOccurs="0" name="RedemptionAmountCalc" type="xsd:integer" />
                      <xsd:element minOccurs="0" name="Operation">
                        <xsd:complexType>
                          <xsd:sequence>
                            <xsd:element minOccurs="0" name="Adjustment">
                              <xsd:complexType>
                                <xsd:attribute name="Input" type="xsd:string" />
                                <xsd:attribute name="Result" type="xsd:string" />
                              </xsd:complexType>
                            </xsd:element>
                            <xsd:element minOccurs="0" name="Designator" type="xsd:string" />
                            <xsd:element minOccurs="0" name="Reason" type="xsd:string" />
                            <xsd:element minOccurs="0" name="DescriptionDetails">
                              <xsd:complexType>
                                <xsd:sequence>
                                  <xsd:element maxOccurs="unbounded" name="Text" type="xsd:string" />
                                </xsd:sequence>
                              </xsd:complexType>
                            </xsd:element>
                          </xsd:sequence>
                          <xsd:attribute name="Seq" type="xsd:string" />
                          <xsd:attribute name="Type" type="xsd:string" />
                        </xsd:complexType>
                      </xsd:element>
                      <xsd:element minOccurs="0" name="Offer">
                        <xsd:complexType>
                          <xsd:sequence>
                            <xsd:element ref="OfferCodeID">
                              <xsd:annotation>
                                <xsd:documentation>ID for this offer as filed in rules engine
Example: 0AR123</xsd:documentation>
                              </xsd:annotation>
                            </xsd:element>
                            <xsd:element minOccurs="0" name="Description" type="xsd:string">
                              <xsd:annotation>
                                <xsd:documentation>Description of the offer</xsd:documentation>
                              </xsd:annotation>
                            </xsd:element>
                            <xsd:element name="UnitControl">
                              <xsd:annotation>
                                <xsd:documentation>The units credited based on the request type.
Units may be number of services, cost of service in points, miles or awards

Example: 
5
2.25</xsd:documentation>
                              </xsd:annotation>
                              <xsd:complexType>
                                <xsd:sequence>
                                  <xsd:element maxOccurs="unbounded" name="Units">
                                    <xsd:annotation>
                                      <xsd:documentation>The units credited based on the request type.
Units may be number of services, cost of service in points, miles or awards

Example: 
5
2.25</xsd:documentation>
                                    </xsd:annotation>
                                    <xsd:complexType>
                                      <xsd:sequence>
                                        <xsd:element name="InitialUnits" type="xsd:integer">
                                          <xsd:annotation>
                                            <xsd:documentation>identifies the initial allotment</xsd:documentation>
                                          </xsd:annotation>
                                        </xsd:element>
                                        <xsd:element name="AvailableUnits" type="xsd:integer">
                                          <xsd:annotation>
                                            <xsd:documentation>returns the number of units available for consumption</xsd:documentation>
                                          </xsd:annotation>
                                        </xsd:element>
                                        <xsd:element name="PendingUnits" type="xsd:integer">
                                          <xsd:annotation>
                                            <xsd:documentation>identifies the number of units booked but not yet flown</xsd:documentation>
                                          </xsd:annotation>
                                        </xsd:element>
                                        <xsd:element name="UsedUnits" type="xsd:integer">
                                          <xsd:annotation>
                                            <xsd:documentation>identifies the number of used units</xsd:documentation>
                                          </xsd:annotation>
                                        </xsd:element>
                                        <xsd:element minOccurs="0" name="DiscountLevel">
                                          <xsd:annotation>
                                            <xsd:documentation>identifies discount level to be applied </xsd:documentation>
                                          </xsd:annotation>
                                          <xsd:complexType>
                                            <xsd:simpleContent>
                                              <xsd:extension base="xsd:string">
                                                <xsd:attribute name="Type" type="xsd:string">
                                                  <xsd:annotation>
                                                    <xsd:documentation>A = DiscountAmount
P = DiscountPercentage</xsd:documentation>
                                                  </xsd:annotation>
                                                </xsd:attribute>
                                              </xsd:extension>
                                            </xsd:simpleContent>
                                          </xsd:complexType>
                                        </xsd:element>
                                        <xsd:element minOccurs="0" name="Threshold" type="xsd:string">
                                          <xsd:annotation>
                                            <xsd:documentation>Identifies which revenue threshold triggered this transaction</xsd:documentation>
                                          </xsd:annotation>
                                        </xsd:element>
                                        <xsd:element minOccurs="0" name="EventType">
                                          <xsd:annotation>
                                            <xsd:documentation>ENR = Enrollment
ANN = Anniversary
REV = Revenue Treshold
ADM = Administartion</xsd:documentation>
                                          </xsd:annotation>
                                          <xsd:simpleType>
                                            <xsd:restriction base="xsd:string">
                                              <xsd:enumeration value="ENR" />
                                              <xsd:enumeration value="ANN" />
                                              <xsd:enumeration value="REV" />
                                              <xsd:enumeration value="ADM" />
                                            </xsd:restriction>
                                          </xsd:simpleType>
                                        </xsd:element>
                                        <xsd:element minOccurs="0" name="CreationDate" type="xsd:date">
                                          <xsd:annotation>
                                            <xsd:documentation>Date in ISO 8601 format (yyyy-mm-dd).  Example: 2001-12-25</xsd:documentation>
                                          </xsd:annotation>
                                        </xsd:element>
                                        <xsd:element minOccurs="0" name="TravelDates">
                                          <xsd:annotation>
                                            <xsd:documentation>Travel dates for which this offer is valid</xsd:documentation>
                                          </xsd:annotation>
                                          <xsd:complexType>
                                            <xsd:sequence>
                                              <xsd:element minOccurs="0" name="EffectiveDate">
                                                <xsd:annotation>
                                                  <xsd:documentation>Date in ISO 8601 format (yyyy-mm-dd).  Example: 2001-12-25</xsd:documentation>
                                                </xsd:annotation>
                                                <xsd:complexType>
                                                  <xsd:simpleContent>
                                                    <xsd:extension base="xsd:date">
                                                      <xsd:attribute name="Time" type="xsd:time">
                                                        <xsd:annotation>
                                                          <xsd:documentation>Date in ISO 8601 format (hh:mm).  
Example: 14:55</xsd:documentation>
                                                        </xsd:annotation>
                                                      </xsd:attribute>
                                                    </xsd:extension>
                                                  </xsd:simpleContent>
                                                </xsd:complexType>
                                              </xsd:element>
                                              <xsd:element minOccurs="0" name="ExpirationDate">
                                                <xsd:annotation>
                                                  <xsd:documentation>Date in ISO 8601 format (yyyy-mm-dd).  Example: 2001-12-25</xsd:documentation>
                                                </xsd:annotation>
                                                <xsd:complexType>
                                                  <xsd:simpleContent>
                                                    <xsd:extension base="xsd:date">
                                                      <xsd:attribute name="Time" type="xsd:time">
                                                        <xsd:annotation>
                                                          <xsd:documentation>Date in ISO 8601 format (hh:mm).  
Example: 14:55</xsd:documentation>
                                                        </xsd:annotation>
                                                      </xsd:attribute>
                                                    </xsd:extension>
                                                  </xsd:simpleContent>
                                                </xsd:complexType>
                                              </xsd:element>
                                            </xsd:sequence>
                                          </xsd:complexType>
                                        </xsd:element>
                                        <xsd:element minOccurs="0" name="BookingDates">
                                          <xsd:annotation>
                                            <xsd:documentation>Dates for which this offer is valid</xsd:documentation>
                                          </xsd:annotation>
                                          <xsd:complexType>
                                            <xsd:sequence>
                                              <xsd:element minOccurs="0" name="EffectiveDate">
                                                <xsd:annotation>
                                                  <xsd:documentation>Date in ISO 8601 format (yyyy-mm-dd).  Example: 2001-12-25</xsd:documentation>
                                                </xsd:annotation>
                                                <xsd:complexType>
                                                  <xsd:simpleContent>
                                                    <xsd:extension base="xsd:date">
                                                      <xsd:attribute name="Time" type="xsd:time">
                                                        <xsd:annotation>
                                                          <xsd:documentation>Date in ISO 8601 format (hh:mm).  
Example: 14:55</xsd:documentation>
                                                        </xsd:annotation>
                                                      </xsd:attribute>
                                                    </xsd:extension>
                                                  </xsd:simpleContent>
                                                </xsd:complexType>
                                              </xsd:element>
                                              <xsd:element minOccurs="0" name="ExpirationDate">
                                                <xsd:annotation>
                                                  <xsd:documentation>Date in ISO 8601 format (yyyy-mm-dd).  Example: 2001-12-25</xsd:documentation>
                                                </xsd:annotation>
                                                <xsd:complexType>
                                                  <xsd:simpleContent>
                                                    <xsd:extension base="xsd:date">
                                                      <xsd:attribute name="Time" type="xsd:time">
                                                        <xsd:annotation>
                                                          <xsd:documentation>Date in ISO 8601 format (hh:mm).  
Example: 14:55</xsd:documentation>
                                                        </xsd:annotation>
                                                      </xsd:attribute>
                                                    </xsd:extension>
                                                  </xsd:simpleContent>
                                                </xsd:complexType>
                                              </xsd:element>
                                            </xsd:sequence>
                                          </xsd:complexType>
                                        </xsd:element>
                                      </xsd:sequence>
                                      <xsd:attribute name="DateControlled" type="xsd:string">
                                        <xsd:annotation>
                                          <xsd:documentation>default is "N"
if set to "Y" the offer is not unit controlled and valid as per expiration date</xsd:documentation>
                                        </xsd:annotation>
                                      </xsd:attribute>
                                      <xsd:attribute name="OfferSubCode" type="xsd:string">
                                        <xsd:annotation>
                                          <xsd:documentation>(Future Use) to be generated on creation by SQL</xsd:documentation>
                                        </xsd:annotation>
                                      </xsd:attribute>
                                    </xsd:complexType>
                                  </xsd:element>
                                </xsd:sequence>
                              </xsd:complexType>
                            </xsd:element>
                          </xsd:sequence>
                        </xsd:complexType>
                      </xsd:element>
                    </xsd:sequence>
                    <xsd:attribute name="Program" type="xsd:string">
                      <xsd:annotation>
                        <xsd:documentation>Program Name Example: AC</xsd:documentation>
                      </xsd:annotation>
                    </xsd:attribute>
                  </xsd:complexType>
                </xsd:element>
              </xsd:sequence>
              <xsd:attribute name="Required" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>Example: Y</xsd:documentation>
                </xsd:annotation>
              </xsd:attribute>
            </xsd:complexType>
          </xsd:element>
          <xsd:element minOccurs="0" name="Awards">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element maxOccurs="unbounded" name="Award">
                  <xsd:complexType>
                    <xsd:sequence>
                      <xsd:element maxOccurs="unbounded" ref="TravelerIDRef" />
                      <xsd:element maxOccurs="unbounded" ref="SegmentIDRef" />
                      <xsd:element name="CreditAmount">
                        <xsd:complexType>
                          <xsd:simpleContent>
                            <xsd:extension base="xsd:string">
                              <xsd:attribute name="Units" type="xsd:string" />
                            </xsd:extension>
                          </xsd:simpleContent>
                        </xsd:complexType>
                      </xsd:element>
                    </xsd:sequence>
                    <xsd:attribute name="Program" type="xsd:string" />
                  </xsd:complexType>
                </xsd:element>
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
          <xsd:element minOccurs="0" name="TaxExemption">
            <xsd:annotation>
              <xsd:documentation>Allows to exempt tax(es) by different criteria</xsd:documentation>
            </xsd:annotation>
            <xsd:complexType>
              <xsd:sequence>
                <xsd:choice minOccurs="0">
                  <xsd:element maxOccurs="unbounded" ref="SegmentIDRef">
                    <xsd:annotation>
                      <xsd:documentation>Allows to price (optional) services.

Use the attribute AssociationID of the flight element within this message, e.g. "F1"</xsd:documentation>
                    </xsd:annotation>
                  </xsd:element>
                  <xsd:element maxOccurs="unbounded" ref="FlightReferences" />
                </xsd:choice>
                <xsd:element minOccurs="0" maxOccurs="unbounded" name="TaxCode">
                  <xsd:annotation>
                    <xsd:documentation>Exemption is based on identified tax codes plus (optional) tax types within a tax code</xsd:documentation>
                  </xsd:annotation>
                  <xsd:complexType>
                    <xsd:sequence>
                      <xsd:element name="Designator">
                        <xsd:annotation>
                          <xsd:documentation>Identifies the Tax Code to be exempt, e.g. AY</xsd:documentation>
                        </xsd:annotation>
                        <xsd:complexType>
                          <xsd:simpleContent>
                            <xsd:extension base="xsd:string">
                              <xsd:attribute name="CollectionPoint" type="xsd:string">
                                <xsd:annotation>
                                  <xsd:documentation>3-letter airport code to identify the exemption of a  ZP or XF tax for this location</xsd:documentation>
                                </xsd:annotation>
                              </xsd:attribute>
                            </xsd:extension>
                          </xsd:simpleContent>
                        </xsd:complexType>
                      </xsd:element>
                      <xsd:element minOccurs="0" maxOccurs="unbounded" name="TaxType" type="xsd:string">
                        <xsd:annotation>
                          <xsd:documentation>Identifies the tax type(s) within the tax code

Example: SE, TR</xsd:documentation>
                        </xsd:annotation>
                      </xsd:element>
                    </xsd:sequence>
                  </xsd:complexType>
                </xsd:element>
                <xsd:element minOccurs="0" maxOccurs="unbounded" ref="CountryCode">
                  <xsd:annotation>
                    <xsd:documentation>Exemption based on country code(s).</xsd:documentation>
                  </xsd:annotation>
                </xsd:element>
                <xsd:element minOccurs="0" name="ProvinceCode" type="xsd:string">
                  <xsd:annotation>
                    <xsd:documentation>Used in Canadian market.  Exemption is based on provinces</xsd:documentation>
                  </xsd:annotation>
                </xsd:element>
                <xsd:element minOccurs="0" name="GovernmentBody" type="xsd:string">
                  <xsd:annotation>
                    <xsd:documentation>Used in Canadian market.  Freeflow entity name must be provided for ceratin exemptions</xsd:documentation>
                  </xsd:annotation>
                </xsd:element>
              </xsd:sequence>
              <xsd:attribute name="ExemptALL" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>Exempt from all taxes

Values allowed:
N = (default)
Y = exempt of all taxes</xsd:documentation>
                </xsd:annotation>
              </xsd:attribute>
            </xsd:complexType>
          </xsd:element>
          <xsd:element minOccurs="0" name="FareSelection">
            <xsd:annotation>
              <xsd:documentation>Fare selection qualifiers, such as Ticket designator (journey level) and FareBasisCodes (flight/OD level)</xsd:documentation>
            </xsd:annotation>
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element minOccurs="0" ref="TicketDesignator">
                  <xsd:annotation>
                    <xsd:documentation>Ticket designator provided here is used for fare selection at a journey level</xsd:documentation>
                  </xsd:annotation>
                </xsd:element>
                <xsd:element minOccurs="0" maxOccurs="unbounded" name="SelectionData">
                  <xsd:annotation>
                    <xsd:documentation>Group fare selection data by PaxType (e.g. ADT, CHD, etc)</xsd:documentation>
                  </xsd:annotation>
                  <xsd:complexType>
                    <xsd:sequence>
                      <xsd:element maxOccurs="unbounded" name="FareBasis">
                        <xsd:annotation>
                          <xsd:documentation>A FareBasisCode provided here is used for fare selection at the flight/OD level</xsd:documentation>
                        </xsd:annotation>
                        <xsd:complexType>
                          <xsd:sequence>
                            <xsd:choice minOccurs="0">
                              <xsd:element maxOccurs="unbounded" ref="SegmentIDRef">
                                <xsd:annotation>
                                  <xsd:documentation>ID reference used to asscociate this item to the respective FareBasisCode.</xsd:documentation>
                                </xsd:annotation>
                              </xsd:element>
                              <xsd:element maxOccurs="unbounded" ref="FlightReferences" />
                            </xsd:choice>
                            <xsd:element ref="FareBasisCode">
                              <xsd:annotation>
                                <xsd:documentation>Applies to entire pricing request if not associated to selected segments</xsd:documentation>
                              </xsd:annotation>
                            </xsd:element>
                          </xsd:sequence>
                        </xsd:complexType>
                      </xsd:element>
                    </xsd:sequence>
                    <xsd:attribute name="PaxType" type="xsd:string" use="required">
                      <xsd:annotation>
                        <xsd:documentation>Passenger type code.

Some IATA values are :
ADT= Adult
CHD = Child
INF = Infant
GOV = Government
MIL = Military
SRC = Senior citizen
STD = Student
YTH = Youth
Example: CHD</xsd:documentation>
                      </xsd:annotation>
                    </xsd:attribute>
                  </xsd:complexType>
                </xsd:element>
                <xsd:element minOccurs="0" ref="Certificates" />
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:sequence>
        <xsd:choice minOccurs="0">
          <xsd:element ref="ManualPricing" />
          <xsd:element ref="DiscountPricing" />
          <xsd:element ref="ClassifiedFare" />
          <xsd:element ref="DirectPricing" />
        </xsd:choice>
      </xsd:sequence>
      <xsd:attribute default="PUBL" name="FareType">
        <xsd:annotation>
          <xsd:documentation>Type of fare being returned.   Please see Farelogix CodeSet documentation for values
Example: NEGO</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:maxLength value="4" />
            <xsd:minLength value="3" />
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:attribute>
      <xsd:attribute default="N" name="Price">
        <xsd:annotation>
          <xsd:documentation>Option to price PNR.  Values are:
Y = Yes
N = No
Example: Y</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:maxLength value="1" />
            <xsd:minLength value="1" />
            <xsd:enumeration value="Y" />
            <xsd:enumeration value="N" />
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:attribute>
      <xsd:attribute default="N" name="StorePrice">
        <xsd:annotation>
          <xsd:documentation>Option to store price in PNR.  Values are:
Y = Yes
N = No
Example: Y</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:maxLength value="1" />
            <xsd:minLength value="1" />
            <xsd:enumeration value="Y" />
            <xsd:enumeration value="N" />
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:attribute>
      <xsd:attribute default="N" name="BestPricing" use="optional">
        <xsd:annotation>
          <xsd:documentation>Used to find the best fare available regardless of the class of service requested.  Possible values are:
Y = get the best fare available
N = price accordingly to the other parameters in the PricingInfo group.
Example: Y</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:enumeration value="Y" />
            <xsd:enumeration value="N" />
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:attribute>
      <xsd:attribute default="N" name="ConnectionSelection" use="optional">
        <xsd:annotation>
          <xsd:documentation>Indicates if a connection selection pricing must be applied in Sabre.  Possible values are:
- Y: apply connection selection pricing
- N: do not apply connection selection pricing (default)
Example: Y</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:enumeration value="Y" />
            <xsd:enumeration value="N" />
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:attribute>
      <xsd:attribute name="PriceServicesOnly" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>Allowed value: Y

Used to price and reprice optional service without repricing base fare, typically set after selections from a ServiceListRS message</xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="AutoExchange" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>Allowed value = "Y"

Identifies this fare as a returned solution from an auto-exchanging application such as ITA Reshop.</xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="PricingInstruction">
    <xsd:annotation>
      <xsd:documentation>Pricing instruction.  Empty for attribute Type = S. Contains pricing command for Type = P and M. Example: Y//DA25.00</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:simpleContent>
        <xsd:extension base="xsd:string">
          <xsd:attribute name="Type" use="required">
            <xsd:annotation>
              <xsd:documentation>Pricing instruction type.  Values are: P = Price only
S = Store Price
M = Manual Store Price  Example: P</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
              <xsd:restriction base="xsd:string">
                <xsd:minLength value="1" />
                <xsd:maxLength value="1" />
                <xsd:enumeration value="P" />
                <xsd:enumeration value="S" />
                <xsd:enumeration value="M" />
              </xsd:restriction>
            </xsd:simpleType>
          </xsd:attribute>
        </xsd:extension>
      </xsd:simpleContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="PrivateFares">
    <xsd:annotation>
      <xsd:documentation>Negotiated fares (Private Fares) group</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element ref="Office" />
        <xsd:element minOccurs="0" maxOccurs="unbounded" ref="Corporate" />
        <xsd:element minOccurs="0" maxOccurs="unbounded" ref="PromoCodes" />
        <xsd:element minOccurs="0" maxOccurs="unbounded" name="LoyaltyPrograms">
          <xsd:annotation>
            <xsd:documentation>Loyalty Program data</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:sequence>
              <xsd:element name="LoyaltyMemberID" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>Membership number </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element name="Name" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>Individual Program name</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element ref="AirlineCode">
                <xsd:annotation>
                  <xsd:documentation>Airline code of the airline offering this Loyaty Program</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
            </xsd:sequence>
          </xsd:complexType>
        </xsd:element>
        <xsd:choice minOccurs="0">
          <xsd:element maxOccurs="unbounded" ref="TravelerInfo" />
          <xsd:element maxOccurs="unbounded" name="PassengerType">
            <xsd:annotation>
              <xsd:documentation>Passenger Type Codes to be used for itinerary pricing.  You can use ADT, CHD etc. if you don't store the PAX type in the name filed or override here the stored type with contract specific PAX types - JCB for bulk adult inventory.</xsd:documentation>
            </xsd:annotation>
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element minOccurs="0" maxOccurs="unbounded" ref="TravelerIDRef" />
                <xsd:element name="Code" type="xsd:string">
                  <xsd:annotation>
                    <xsd:documentation>Contract and/or GDS specific PassengerType Code. See IATA PTC's Example: JCB</xsd:documentation>
                  </xsd:annotation>
                </xsd:element>
              </xsd:sequence>
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
        <xsd:element minOccurs="0" name="TourCodes">
          <xsd:annotation>
            <xsd:documentation>Discount Group</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:sequence>
              <xsd:element maxOccurs="unbounded" name="TourCode">
                <xsd:annotation>
                  <xsd:documentation>TourCode applicable to the PTC (TravelerGroup)</xsd:documentation>
                </xsd:annotation>
                <xsd:complexType>
                  <xsd:simpleContent>
                    <xsd:extension base="xsd:string">
                      <xsd:attribute name="PaxType" type="xsd:string" use="required">
                        <xsd:annotation>
                          <xsd:documentation>Passenger type requested for pricing. 

Some IATA values are :
ADT= Adult
CHD = Child
INF = Infant
GOV = Government
MIL = Military
SRC = Senior citizen
STD = Student
YTH = Youth
Example: CHD</xsd:documentation>
                        </xsd:annotation>
                      </xsd:attribute>
                    </xsd:extension>
                  </xsd:simpleContent>
                </xsd:complexType>
              </xsd:element>
            </xsd:sequence>
          </xsd:complexType>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="ProfileIndex">
    <xsd:annotation>
      <xsd:documentation>Associated profile index for this traveler.

Example: 6457</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:simpleContent>
        <xsd:extension base="xsd:string">
          <xsd:attributeGroup ref="sourceOptional" />
          <xsd:attribute name="CorporateIndex">
            <xsd:annotation>
              <xsd:documentation>This is the ProfileIndex assign to the associated Corporate Profile of this traveler.

Example: 117</xsd:documentation>
            </xsd:annotation>
          </xsd:attribute>
          <xsd:attribute name="CorporateName">
            <xsd:annotation>
              <xsd:documentation>This is the Profile Name given to this corporation.

Example: IBM CORP</xsd:documentation>
            </xsd:annotation>
          </xsd:attribute>
        </xsd:extension>
      </xsd:simpleContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="ProgramName" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>Frequent flyer program name.  Example: Frequence Plus</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="PromoCodes">
    <xsd:annotation>
      <xsd:documentation>Corporate info group</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" maxOccurs="unbounded" ref="TravelerIDRef" />
        <xsd:element minOccurs="0" ref="AirlineCode" />
        <xsd:element name="PromoCode" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Code ID / Number</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
      <xsd:attribute name="CorporateIndex" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>Corporation associated with this program</xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="PropertyCode" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>Hotel property code in GDS.  Example: RD</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="PseudoCityCode" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>Agency's pseudo city code.  Example: LNJ2</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="PTASegment">
    <xsd:annotation>
      <xsd:documentation>PTA segment group</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" maxOccurs="8" ref="TravelerIDRef" />
        <xsd:element ref="VendorCode" />
        <xsd:element ref="ServiceDate" />
        <xsd:element ref="Purchase" />
        <xsd:element ref="ActionCode" />
        <xsd:element ref="NumberInParty" />
        <xsd:element minOccurs="0" maxOccurs="unbounded" ref="Text" />
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="Purchase">
    <xsd:annotation>
      <xsd:documentation>Purchase group</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:choice>
        <xsd:element ref="CityCode" />
        <xsd:element ref="CityName" />
      </xsd:choice>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="PurchaseDate" type="xsd:date">
    <xsd:annotation>
      <xsd:documentation>Insurance purchase date.  Example: 2002-12-25</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="QualifierGroup">
    <xsd:annotation>
      <xsd:documentation>Contains qualifiers such as Corporate ID, Contract ID, LoyaltyProgram ID, Office ID, Promotion ID </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" maxOccurs="unbounded" ref="PromoCodes">
          <xsd:annotation>
            <xsd:documentation>Promo info group</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" maxOccurs="unbounded" ref="Corporate" />
        <xsd:element minOccurs="0" maxOccurs="unbounded" name="LoyaltyPrograms">
          <xsd:annotation>
            <xsd:documentation>Loyalty Program data</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="unbounded" ref="TravelerIDRef" />
              <xsd:element name="LoyaltyMemberID" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>Membership number </xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element name="Name" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>Individual Program name</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" name="GroupID" type="xsd:string">
                <xsd:annotation>
                  <xsd:documentation>Associates this account to a pre-defined group</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element ref="AirlineCode">
                <xsd:annotation>
                  <xsd:documentation>Airline code of the airline offering this Loyaty Program</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
            </xsd:sequence>
            <xsd:attribute name="CorporateIndex" type="xsd:string">
              <xsd:annotation>
                <xsd:documentation>Corporation associated with this program</xsd:documentation>
              </xsd:annotation>
            </xsd:attribute>
          </xsd:complexType>
        </xsd:element>
        <xsd:element minOccurs="0" name="Certificates">
          <xsd:annotation>
            <xsd:documentation>Electronic Certificate information.

=notes=
1. Supports non-revenue and flightpass certificates.</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:sequence>
              <xsd:element maxOccurs="unbounded" name="Certificate">
                <xsd:annotation>
                  <xsd:documentation>Certificate detail.</xsd:documentation>
                </xsd:annotation>
                <xsd:complexType>
                  <xsd:complexContent mixed="false">
                    <xsd:extension base="CertificateType" />
                  </xsd:complexContent>
                </xsd:complexType>
              </xsd:element>
            </xsd:sequence>
          </xsd:complexType>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="Quantity" type="xsd:integer">
    <xsd:annotation>
      <xsd:documentation>Amount of special service requested.  Example: 1</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="Queue">
    <xsd:annotation>
      <xsd:documentation>Queue group</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" ref="PseudoCityCode" />
        <xsd:element minOccurs="0" ref="Date">
          <xsd:annotation>
            <xsd:documentation>Date for future queue placement in ISO 8601 format (yyyy-mm-dd).  

If a Date is specified, this will trigger a future queue placement (a.k.a "queue minder"). Specifying the current date will result in an error.

Example: 2001-12-25</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:choice>
          <xsd:sequence>
            <xsd:element ref="QueueNumber" />
            <xsd:element ref="QueueCategory">
              <xsd:annotation>
                <xsd:documentation>Queue category. 
Since Sabre does not have queue categories, this value is used as a PIC (Prefatory Instruction Code).

Example: 10</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
          </xsd:sequence>
          <xsd:sequence>
            <xsd:element ref="QueueName" />
            <xsd:element minOccurs="0" ref="QueueCategory" />
          </xsd:sequence>
        </xsd:choice>
      </xsd:sequence>
      <xsd:attributeGroup ref="sourceOptional" />
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="QueueCategory" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>Queue category.  Example: 10</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="QueueName" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>Used to queue pnr.  Example: Schedule Changes</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="QueueNumber" type="xsd:integer">
    <xsd:annotation>
      <xsd:documentation>Queue number.  Example: 08</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="RailName" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>Rail name.  Example: Amtrak</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="RailSegment">
    <xsd:annotation>
      <xsd:documentation>Rail segment group</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" maxOccurs="8" ref="TravelerIDRef" />
        <xsd:element ref="VendorCode" />
        <xsd:element ref="DepartureDate" />
        <xsd:element ref="OriginCityCode" />
        <xsd:element ref="DestinationCityCode" />
        <xsd:element ref="ActionCode" />
        <xsd:element ref="NumberInParty" />
        <xsd:element minOccurs="0" ref="DeparturePoint" />
        <xsd:element minOccurs="0" ref="DepartureTime" />
        <xsd:element minOccurs="0" ref="ArrivalPoint" />
        <xsd:element minOccurs="0" ref="ArrivalTime" />
        <xsd:element minOccurs="0" ref="RailName" />
        <xsd:element minOccurs="0" ref="ServiceInformation" />
        <xsd:element minOccurs="0" ref="ConfirmationNumber" />
        <xsd:element minOccurs="0" maxOccurs="unbounded" ref="Text" />
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="RateAmount" type="xsd:integer">
    <xsd:annotation>
      <xsd:documentation>Rate amount.  Example: 20000</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="RateCategory">
    <xsd:annotation>
      <xsd:documentation>Rate category.  Values are:

ASN = Association
CLB = Club
CON = Convention
COR = Corporate
DAY = Day room
FAM = Family
GOV = Government
MIL = Military
NEG = Negotiated
PKG = Package
PRO = Promotional
RAC = Standard 
SPE = Special
SRS = Senior citizen
STP = Stopover
TUR = Tour
TVL = Travel industry
WKD = Weekend
Example: GOV</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleType>
      <xsd:restriction base="xsd:string">
        <xsd:enumeration value="ASN" />
        <xsd:enumeration value="CLB" />
        <xsd:enumeration value="CON" />
        <xsd:enumeration value="COR" />
        <xsd:enumeration value="DAY" />
        <xsd:enumeration value="FAM" />
        <xsd:enumeration value="GOV" />
        <xsd:enumeration value="MIL" />
        <xsd:enumeration value="NEG" />
        <xsd:enumeration value="PKG" />
        <xsd:enumeration value="PRO" />
        <xsd:enumeration value="RAC" />
        <xsd:enumeration value="SPE" />
        <xsd:enumeration value="SRS" />
        <xsd:enumeration value="STP" />
        <xsd:enumeration value="TUR" />
        <xsd:enumeration value="TVL" />
        <xsd:enumeration value="WKD" />
      </xsd:restriction>
    </xsd:simpleType>
  </xsd:element>
  <xsd:element name="RateCode" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>Rate code.  Example: STD</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="RateOptions">
    <xsd:annotation>
      <xsd:documentation>Rate options group</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element ref="RateCode" />
        <xsd:element ref="RateAmount" />
        <xsd:element ref="CurrencyCode" />
        <xsd:element minOccurs="0" name="RateID" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Rate identification number.  Example: 153425</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" ref="RateQualifier" />
      </xsd:sequence>
      <xsd:attribute name="Type" use="optional">
        <xsd:annotation>
          <xsd:documentation>Rate type.  Values are:
D = Daily
E = Weekend
W = Weekly
M = Monthly
H = Hourly
P = Package
Example: W</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:enumeration value="D" />
            <xsd:enumeration value="E" />
            <xsd:enumeration value="W" />
            <xsd:enumeration value="M" />
            <xsd:enumeration value="H" />
            <xsd:enumeration value="P" />
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:attribute>
      <xsd:attribute name="Category" use="optional">
        <xsd:annotation>
          <xsd:documentation>Rate category.  Values are:
A = Association
B = Business standard
C = Corporate
G = Government
I = Industry (Travel)
K = Package
L = Inclusive 
P = Promotional
R = Credential
S = Standard
U = Consortium
V = Convention
X = Negotiated
Example: G</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:enumeration value="A" />
            <xsd:enumeration value="B" />
            <xsd:enumeration value="C" />
            <xsd:enumeration value="G" />
            <xsd:enumeration value="I" />
            <xsd:enumeration value="K" />
            <xsd:enumeration value="L" />
            <xsd:enumeration value="P" />
            <xsd:enumeration value="R" />
            <xsd:enumeration value="S" />
            <xsd:enumeration value="U" />
            <xsd:enumeration value="V" />
            <xsd:enumeration value="X" />
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:attribute>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="RateQualifier" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>Rate qualifier.  Example: Unknown</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="RateType">
    <xsd:annotation>
      <xsd:documentation>Rate type applied.  Possible values are:
F = family rate
P = per passenger rate.  Example: F</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleType>
      <xsd:restriction base="xsd:string">
        <xsd:minLength value="1" />
        <xsd:maxLength value="1" />
      </xsd:restriction>
    </xsd:simpleType>
  </xsd:element>
  <xsd:element name="ReceiptNumber" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>Ticket or voucher receipt number.  Example: 1234567</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="ReceivedFrom" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>Received from field.  Example: John</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="RecordLocator">
    <xsd:annotation>
      <xsd:documentation>Record locator reference of the PNR to cancel.  Example: XDFWES.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:simpleContent>
        <xsd:extension base="xsd:string">
          <xsd:attribute name="Source" type="xsd:string" use="optional">
            <xsd:annotation>
              <xsd:documentation source="DESCRIPTION" xml:lang="en">Content source. Example: BA</xsd:documentation>
            </xsd:annotation>
          </xsd:attribute>
          <xsd:attribute name="SourceRef" type="xsd:string" use="prohibited">
            <xsd:annotation>
              <xsd:documentation source="DESCRIPTION" xml:lang="en">=WARNINGS=
This element has been DEPRECATED as of September 2013.

Record Locator associated to @Source attribute.</xsd:documentation>
            </xsd:annotation>
          </xsd:attribute>
          <xsd:attribute name="AggregatorLocator" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>Indicates if the record locator specified is an Aggregator PNR record locator.  Must be used if using an aggregator record locator(e.g, Amadeus, Travelport) to identify the PNR. Example: Y</xsd:documentation>
            </xsd:annotation>
          </xsd:attribute>
        </xsd:extension>
      </xsd:simpleContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="RefundAmount" type="xsd:integer">
    <xsd:annotation>
      <xsd:documentation>Refund amount in cents.  5000 means 50.00.  Example: 5000</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="RefundReason" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>Refund reason information text.  Example: Discount </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="RefundTax" type="xsd:integer">
    <xsd:annotation>
      <xsd:documentation>Refund tax amount in cents.  1000 means 10.00.  Example: 1000</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="Remark">
    <xsd:annotation>
      <xsd:documentation>Form of payment to be sent to history remark.  Values are: Y = Yes, N = No.  Example: Y</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleType>
      <xsd:restriction base="xsd:string">
        <xsd:enumeration value="Y" />
        <xsd:enumeration value="N" />
      </xsd:restriction>
    </xsd:simpleType>
  </xsd:element>
  <xsd:element name="Replace">
    <xsd:annotation>
      <xsd:documentation>Replacement penalty group</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" ref="Amount" />
        <xsd:element minOccurs="0" maxOccurs="unbounded" ref="Text" />
        <xsd:element ref="Taxes" />
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="Restrictions">
    <xsd:annotation>
      <xsd:documentation>Pricing restrictions group</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" maxOccurs="unbounded" ref="TravelerInfo" />
      </xsd:sequence>
      <xsd:attribute default="Y" name="MinimumStay">
        <xsd:annotation>
          <xsd:documentation>Allow fares with minimum stay requirement.  Values are:
Y = Yes
N = No
Default: Y
Example: N</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:maxLength value="1" />
            <xsd:minLength value="1" />
            <xsd:enumeration value="Y" />
            <xsd:enumeration value="N" />
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:attribute>
      <xsd:attribute default="Y" name="MaximumStay">
        <xsd:annotation>
          <xsd:documentation>Allow fares with maximum stay requirement.  Values are:
Y = Yes
N = No
Default: Y
Example: N</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:maxLength value="1" />
            <xsd:minLength value="1" />
            <xsd:enumeration value="Y" />
            <xsd:enumeration value="N" />
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:attribute>
      <xsd:attribute default="Y" name="Advance">
        <xsd:annotation>
          <xsd:documentation>Allow fares with advance requirement.  Values are:
Y = Yes
N = No
Default: Y
Example: N</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:maxLength value="1" />
            <xsd:minLength value="1" />
            <xsd:enumeration value="Y" />
            <xsd:enumeration value="N" />
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:attribute>
      <xsd:attribute default="Y" name="Penalty">
        <xsd:annotation>
          <xsd:documentation>Allow fares with penalty restrictions.  Values are:
Y = Yes
N = No
Default: Y
Example: N</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:maxLength value="1" />
            <xsd:minLength value="1" />
            <xsd:enumeration value="Y" />
            <xsd:enumeration value="N" />
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:attribute>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="ReturnDate" type="xsd:date">
    <xsd:annotation>
      <xsd:documentation>Return date is ISO 8601 format.  Example: 2002-12-25</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="ReviewBookingQueue">
    <xsd:annotation>
      <xsd:documentation>Review booking queue group</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" ref="Date" />
        <xsd:element minOccurs="0" ref="QueueNumber" />
        <xsd:element minOccurs="0" ref="PseudoCityCode" />
        <xsd:element minOccurs="0" ref="Time" />
        <xsd:element minOccurs="0" ref="Text" />
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="RollawayAdult" type="xsd:integer">
    <xsd:annotation>
      <xsd:documentation>Number of rollaway adults.  Example: 1</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="RollawayChild" type="xsd:integer">
    <xsd:annotation>
      <xsd:documentation>Number of rollaway child.  Example: 1</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="Room">
    <xsd:annotation>
      <xsd:documentation>Room detail group</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element ref="BookingCode" />
        <xsd:element minOccurs="0" ref="RateCategory" />
        <xsd:element ref="RoomType" />
        <xsd:element ref="NumberOfRooms" />
        <xsd:element minOccurs="0" ref="RateAmount" />
        <xsd:element minOccurs="0" ref="CurrencyCode" />
        <xsd:element minOccurs="0" maxOccurs="3" ref="RateCode" />
        <xsd:element minOccurs="0" ref="RoomOptions" />
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="RoomCode" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>Room type code for tour segment.  Possible values are: SGLB = Single accomodation, DBLB = Double accomodation, TRPB = Triple accomodation.  Example: SGLB</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="RoomOptions">
    <xsd:annotation>
      <xsd:documentation>Room options group</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" ref="ExtraAdult" />
        <xsd:element minOccurs="0" ref="ExtraChild" />
        <xsd:element minOccurs="0" ref="RollawayAdult" />
        <xsd:element minOccurs="0" ref="RollawayChild" />
        <xsd:element minOccurs="0" ref="Crib" />
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="RoomRate">
    <xsd:annotation>
      <xsd:documentation>Room rate group</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element ref="Amount" />
        <xsd:element minOccurs="0" ref="CurrencyCode" />
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="RoomType" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>Room type code.  The code consists of three parameters: room category, number of beds and bed type.
Example: A1K</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="SeaSegment">
    <xsd:annotation>
      <xsd:documentation>Sea segment group</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" maxOccurs="8" ref="TravelerIDRef" />
        <xsd:element ref="VendorCode" />
        <xsd:element ref="DepartureDate" />
        <xsd:element ref="OriginCityCode" />
        <xsd:element ref="DestinationCityCode" />
        <xsd:element ref="ActionCode" />
        <xsd:element ref="NumberInParty" />
        <xsd:element minOccurs="0" ref="DeparturePoint" />
        <xsd:element minOccurs="0" ref="DepartureTime" />
        <xsd:element minOccurs="0" ref="ArrivalPoint" />
        <xsd:element minOccurs="0" ref="ArrivalTime" />
        <xsd:element minOccurs="0" ref="ShipName" />
        <xsd:element minOccurs="0" ref="ServiceInformation" />
        <xsd:element minOccurs="0" ref="ConfirmationNumber" />
        <xsd:element minOccurs="0" maxOccurs="unbounded" ref="Text" />
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="Seat">
    <xsd:annotation>
      <xsd:documentation>Seat request group.

If SegmentIDRef is not included, then Seat request applies to all flight segments.

If the /PNRCreateRQ/EndTransaction element is present and an error occurs during seat processing, an information message will be returned, but XX/1 will still attempt to end transact the PNR.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" ref="SegmentIDRef" />
        <xsd:element maxOccurs="unbounded" ref="Assignment">
          <xsd:annotation>
            <xsd:documentation>Seat assignment group

If TravelerIDRef is not included, then the seat assignment will be applied to all travelers. If more than traveler exists, this only makes sende for a Characteristic, not for a SeatLocation.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
      <xsd:attributeGroup ref="sourceOptional" />
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="SeatLocation">
    <xsd:annotation>
      <xsd:documentation>Seat assignment location for specific seat request.  Example: 03A</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:simpleContent>
        <xsd:extension base="xsd:string">
          <xsd:attribute name="Position" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>Column position in the plane. Possible values are:
W = Window
A = Aisle
C = Center (between two seats)
WA = Window on one side and aisle on the other side
AW = Aisle on one side and window on the other side
Example: W</xsd:documentation>
            </xsd:annotation>
          </xsd:attribute>
          <xsd:attribute name="ExitRow" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>Values allowed: Y/N</xsd:documentation>
            </xsd:annotation>
          </xsd:attribute>
        </xsd:extension>
      </xsd:simpleContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="SecondaryAction">
    <xsd:annotation>
      <xsd:documentation>Secondary action data for future process. The data depends on the Code attribute. Possibile SecondaryAction values when:
Code = A : Airline Validation
     Airline code

Code = E : Electronic Ticketing
     D = Default
     O = Override electronic ticketing default
    
Code = H : Hemisphere Code
     0 = UNITED STATES /EXCLUDING HAWAII/
     1 = MEXICO/CENTRAL AMERICA
     2 = CARIBBEAN
     3 = SOUTH AMERICA
     4 = EUROPE/GREENLAND
     5 = AFRICA
     6 = MIDDLE EAST/WESTERN ASIA
     7 = ASIA
     8 = AUSTRALIA/NEW ZEALAND/SOUTH PACIFIC AND HAWAII
     9 = CANADA

Code = J : Journey Code
     1 = BUSINESS
     2 = PLEASURE
     3 = SELECTED CHARTERS

Code = K : Commission
     amount (ex: 20.00)  or
     P + percent (ex: P5)

Code = P : Passenger Type
     Passenger Types or Discount Codes separated by a / (ex: ADT/CHD)

Code = U : Tour Order Number
     I + tour number = Inclusive (ex: I123456)
     B + tour number = Bulk inclusive (ex: B123456)
     N + tour number = (ex: N123456)
Example: B123456</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:simpleContent>
        <xsd:extension base="xsd:string">
          <xsd:attribute name="Code" use="required">
            <xsd:annotation>
              <xsd:documentation>Secondary action codes for future ticketing process.  Possible values are:
A = AIRLINE VALIDATION

E = ELECTRONIC TICKETING

H = HEMISPHERE CODE (FOR CANADIAN AGENCIES)

J = JOURNEY CODE (FOR CANADIAN AGENCIES)

K = COMMISSION

P = PASSENGER TYPE

U = TOUR ORDER NUMBER 
Q = PRICING COMMAND

Example: K</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
              <xsd:restriction base="xsd:string">
                <xsd:minLength value="1" />
                <xsd:maxLength value="1" />
                <xsd:enumeration value="A" />
                <xsd:enumeration value="E" />
                <xsd:enumeration value="H" />
                <xsd:enumeration value="J" />
                <xsd:enumeration value="K" />
                <xsd:enumeration value="P" />
                <xsd:enumeration value="U" />
              </xsd:restriction>
            </xsd:simpleType>
          </xsd:attribute>
        </xsd:extension>
      </xsd:simpleContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="SegmentRefKey" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>SegmentRefKey contains  references for subsequent transactions (used by selected airlines, e.g. AC)</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="SelectedFlight">
    <xsd:annotation>
      <xsd:documentation>Flight detail for chosen alternative.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element maxOccurs="unbounded" name="Segment">
          <xsd:complexType>
            <xsd:sequence>
              <xsd:element ref="Departure">
                <xsd:annotation>
                  <xsd:documentation>Flight departure group.
</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element ref="Arrival">
                <xsd:annotation>
                  <xsd:documentation>Flight arrival group.
</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element ref="Carrier">
                <xsd:annotation>
                  <xsd:documentation>Flight carrier group.
</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" ref="OperatingCarrier">
                <xsd:annotation>
                  <xsd:documentation>Operating Flight carrier group.</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element minOccurs="0" ref="ClassOfService" />
            </xsd:sequence>
          </xsd:complexType>
        </xsd:element>
      </xsd:sequence>
      <xsd:attribute name="DepartureCode">
        <xsd:annotation>
          <xsd:documentation>Departure airport or city code for overall OD.  Example: JFK</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:minLength value="3" />
            <xsd:maxLength value="3" />
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:attribute>
      <xsd:attribute name="ArrivalCode">
        <xsd:annotation>
          <xsd:documentation>Arrival airport or city code for overall OD.  Example: MIA</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:minLength value="3" />
            <xsd:maxLength value="3" />
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:attribute>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="ServiceDate" type="xsd:date">
    <xsd:annotation>
      <xsd:documentation>Service date in ISO 8601 format (yyyy-mm-dd).  Example: 2002-12-25</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="ServiceIDRef">
    <xsd:annotation>
      <xsd:documentation>ID reference used to asscociate this item to a service item.

Example: S1</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:simpleContent>
        <xsd:extension base="xsd:string">
          <xsd:attributeGroup ref="RefType" />
        </xsd:extension>
      </xsd:simpleContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="ServiceInformation" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>Service information.  Example:  Group traveling together</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="ServicePrice">
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" ref="CurrencyCode" />
        <xsd:element name="BasePrice">
          <xsd:annotation>
            <xsd:documentation>Base (net) price of Service</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:attribute name="Amount" type="xsd:integer" use="required">
              <xsd:annotation>
                <xsd:documentation>Net price of service
Example: 6750</xsd:documentation>
              </xsd:annotation>
            </xsd:attribute>
          </xsd:complexType>
        </xsd:element>
        <xsd:element minOccurs="0" name="Taxes">
          <xsd:annotation>
            <xsd:documentation>Tax Group</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:sequence>
              <xsd:element minOccurs="0" maxOccurs="unbounded" name="Tax">
                <xsd:annotation>
                  <xsd:documentation>Tax break down information group </xsd:documentation>
                </xsd:annotation>
                <xsd:complexType>
                  <xsd:sequence minOccurs="0">
                    <xsd:element minOccurs="0" name="Designator" type="xsd:string">
                      <xsd:annotation>
                        <xsd:documentation>Tax or surcharge designator.  Example: US</xsd:documentation>
                      </xsd:annotation>
                    </xsd:element>
                    <xsd:element minOccurs="0" name="Description" type="xsd:string">
                      <xsd:annotation>
                        <xsd:documentation>Tax or surcharge description.  Example: US national transportation</xsd:documentation>
                      </xsd:annotation>
                    </xsd:element>
                  </xsd:sequence>
                  <xsd:attribute name="Amount" type="xsd:integer" use="required">
                    <xsd:annotation>
                      <xsd:documentation>Individual tax amount.  Example: 250</xsd:documentation>
                    </xsd:annotation>
                  </xsd:attribute>
                </xsd:complexType>
              </xsd:element>
            </xsd:sequence>
            <xsd:attribute name="Amount" type="xsd:integer" use="required">
              <xsd:annotation>
                <xsd:documentation>Total taxes amount.  Example: 750</xsd:documentation>
              </xsd:annotation>
            </xsd:attribute>
          </xsd:complexType>
        </xsd:element>
        <xsd:element minOccurs="0" name="ItemPrice">
          <xsd:annotation>
            <xsd:documentation>Recommended to provide at all times, however if quantity is greater than 1 ItemPrice is mandatory</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:all>
              <xsd:element ref="CurrencyCode" />
              <xsd:element name="BasePrice">
                <xsd:annotation>
                  <xsd:documentation>Base (net) price of Option</xsd:documentation>
                </xsd:annotation>
                <xsd:complexType>
                  <xsd:simpleContent>
                    <xsd:extension base="xsd:integer">
                      <xsd:attribute name="Amount" type="xsd:integer" use="required">
                        <xsd:annotation>
                          <xsd:documentation>Net price of option.
Example: 6750</xsd:documentation>
                        </xsd:annotation>
                      </xsd:attribute>
                    </xsd:extension>
                  </xsd:simpleContent>
                </xsd:complexType>
              </xsd:element>
              <xsd:element minOccurs="0" name="Taxes">
                <xsd:annotation>
                  <xsd:documentation>Tax Group</xsd:documentation>
                </xsd:annotation>
                <xsd:complexType>
                  <xsd:sequence>
                    <xsd:element minOccurs="0" maxOccurs="unbounded" name="Tax">
                      <xsd:annotation>
                        <xsd:documentation>Tax break down information group </xsd:documentation>
                      </xsd:annotation>
                      <xsd:complexType>
                        <xsd:sequence minOccurs="0">
                          <xsd:element name="Designator" type="xsd:string">
                            <xsd:annotation>
                              <xsd:documentation>Tax or surcharge designator.  Example: US</xsd:documentation>
                            </xsd:annotation>
                          </xsd:element>
                          <xsd:element minOccurs="0" name="Description" type="xsd:string">
                            <xsd:annotation>
                              <xsd:documentation>Tax or surcharge description.  Example: US national transportation</xsd:documentation>
                            </xsd:annotation>
                          </xsd:element>
                        </xsd:sequence>
                        <xsd:attribute name="Amount" type="xsd:integer" use="required">
                          <xsd:annotation>
                            <xsd:documentation>Individual tax amount.  Example: 250</xsd:documentation>
                          </xsd:annotation>
                        </xsd:attribute>
                      </xsd:complexType>
                    </xsd:element>
                  </xsd:sequence>
                  <xsd:attribute name="Amount" type="xsd:integer" use="required">
                    <xsd:annotation>
                      <xsd:documentation>Total taxes amount.  Example: 750</xsd:documentation>
                    </xsd:annotation>
                  </xsd:attribute>
                </xsd:complexType>
              </xsd:element>
            </xsd:all>
            <xsd:attribute name="Total" type="xsd:integer" use="required">
              <xsd:annotation>
                <xsd:documentation>Total amount for this service based on FQTV status and chosen Price Class.

Total = base price +  total amount of taxes.

Example: 7500</xsd:documentation>
              </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="Unit" type="xsd:string">
              <xsd:annotation>
                <xsd:documentation>Values = P (Pieces) OR K (Kilos) OR L (Pounds )</xsd:documentation>
              </xsd:annotation>
            </xsd:attribute>
          </xsd:complexType>
        </xsd:element>
      </xsd:sequence>
      <xsd:attribute name="Total" type="xsd:integer" use="required">
        <xsd:annotation>
          <xsd:documentation>Total amount for this service.

Total = base price +  total amount of taxes.

Example: 7500</xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="FCICode">
        <xsd:annotation>
          <xsd:documentation>0: System auto priced 
1: Agent priced 
2: System auto priced with tax exemption</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:integer">
            <xsd:enumeration value="0" />
            <xsd:enumeration value="1" />
            <xsd:enumeration value="2" />
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:attribute>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="ShipName" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>Ship name.  Example: Nordic Empress</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="SpecialServiceRequest">
    <xsd:annotation>
      <xsd:documentation>Special service request group.  If TravelerAssociationNumber is not included, then SSR applies to all travelers.  Same for SegmentAssociationNumber</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" maxOccurs="unbounded" ref="TravelerIDRef" />
        <xsd:element minOccurs="0" ref="SegmentIDRef" />
        <xsd:element minOccurs="0" ref="AirlineCode" />
        <xsd:element ref="SSRCode" />
        <xsd:element minOccurs="0" ref="Text" />
        <xsd:choice minOccurs="0">
          <xsd:element minOccurs="0" ref="NumberInParty">
            <xsd:annotation>
              <xsd:documentation>Number of passengers/items.  Example: 1</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="NumberOfServices" type="xsd:integer">
            <xsd:annotation>
              <xsd:documentation>Number of services provided with this SSR. Primarily appliicable to XBAG, BIKE etc.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:choice>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="SSRCode" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>Special service request code.  IATA standard.  Example: VGML</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="StartDate" type="xsd:date">
    <xsd:annotation>
      <xsd:documentation>Start date in ISO 8601 format (yyyy-mm-dd).  Example: 2002-12-01</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="StartLine" type="xsd:integer">
    <xsd:annotation>
      <xsd:documentation>Profile start line of elements to be moved into PNR.  Example: 1</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="StateCode" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>State code.  Example: NY</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="SupplementalInformation">
    <xsd:annotation>
      <xsd:documentation>Supplemental information group</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" ref="BookingSource" />
        <xsd:element minOccurs="0" ref="CorporateRateOverride" />
        <xsd:element minOccurs="0" ref="CorporateDiscountNumber" />
        <xsd:element minOccurs="0" ref="PaymentGuarantee" />
        <xsd:element minOccurs="0" ref="Voucher" />
        <xsd:element minOccurs="0" ref="Coupon" />
        <xsd:element minOccurs="0" ref="TourCode" />
        <xsd:element minOccurs="0" ref="FrequentGuest" />
        <xsd:element minOccurs="0" ref="FrequentFlyer" />
        <xsd:element minOccurs="0" ref="AdditionalInformation" />
        <xsd:choice minOccurs="0">
          <xsd:element minOccurs="0" ref="BillingNumber">
            <xsd:annotation>
              <xsd:documentation>Optional element that reflects Billing Number.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" ref="BillingReference" />
        </xsd:choice>
        <xsd:element minOccurs="0" name="DriverGroup">
          <xsd:annotation>
            <xsd:documentation>Future Use. 
Defines driver specific information.</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:sequence>
              <xsd:element name="Driver">
                <xsd:complexType>
                  <xsd:attribute name="Age" type="xsd:positiveInteger" use="required" />
                  <xsd:attribute name="CountryOfResidency">
                    <xsd:annotation>
                      <xsd:documentation>Optional. Could be used to add ISO 2-Letter code to identify country of residency.
Example: US</xsd:documentation>
                    </xsd:annotation>
                    <xsd:simpleType>
                      <xsd:restriction base="xsd:string">
                        <xsd:length value="2" />
                      </xsd:restriction>
                    </xsd:simpleType>
                  </xsd:attribute>
                </xsd:complexType>
              </xsd:element>
            </xsd:sequence>
          </xsd:complexType>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="Tax">
    <xsd:annotation>
      <xsd:documentation>Tax break down information group</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" ref="Designator" />
        <xsd:element minOccurs="0" ref="Nature" />
        <xsd:element minOccurs="0" ref="Description" />
        <xsd:element minOccurs="0" maxOccurs="unbounded" name="CollectionPoint">
          <xsd:annotation>
            <xsd:documentation>For XF and ZP taxes. 
Tax data break down for each collection point.  

The sum of individual amounts entered here must  be equal to the Amount entered in the Tax element.</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:sequence>
              <xsd:element ref="AirportCode" />
              <xsd:element name="AirportAmount" type="xsd:integer">
                <xsd:annotation>
                  <xsd:documentation>The amount actually filed by the airport in the currency applicable to the geographical location of the airport
(same as shown in FareCalculation line)</xsd:documentation>
                </xsd:annotation>
              </xsd:element>
              <xsd:element ref="CurrencyCode" />
            </xsd:sequence>
            <xsd:attribute name="Amount" type="xsd:integer" use="required">
              <xsd:annotation>
                <xsd:documentation>Individual amount for collection point.  
Example: 2500</xsd:documentation>
              </xsd:annotation>
            </xsd:attribute>
            <xsd:attribute name="Paid">
              <xsd:annotation>
                <xsd:documentation>Indicator to represent that given tax is already paid. Will be used only in the new Ticket issued as part of exchange process is the BSP markets.   
Value is  "PD"</xsd:documentation>
              </xsd:annotation>
              <xsd:simpleType>
                <xsd:restriction base="xsd:string">
                  <xsd:enumeration value="PD" />
                  <xsd:enumeration value="RF" />
                </xsd:restriction>
              </xsd:simpleType>
            </xsd:attribute>
          </xsd:complexType>
        </xsd:element>
      </xsd:sequence>
      <xsd:attribute name="Amount" type="xsd:integer" use="required">
        <xsd:annotation>
          <xsd:documentation>Individual tax amount.  Example: 2500</xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute default="N" name="Paid" use="optional">
        <xsd:annotation>
          <xsd:documentation>Identifies if this particular tax was paid. Note that the posisitve indicator was changed from Y to PD(paid).
Values are: PD (paid), RF(to be refunded) or N or omit the attribute - this would indicate that this tax is not paid.
Example: PD</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:minLength value="1" />
            <xsd:maxLength value="2" />
            <xsd:enumeration value="PD" />
            <xsd:enumeration value="N" />
            <xsd:enumeration value="RF" />
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:attribute>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="TaxAmount">
    <xsd:annotation>
      <xsd:documentation>Tax amount.  Example: 1000</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:simpleContent>
        <xsd:extension base="xsd:string">
          <xsd:attribute name="Type" use="required">
            <xsd:annotation>
              <xsd:documentation>Commission type.  Values are: P = Percent, A = Amount  Example: A</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
              <xsd:restriction base="xsd:string">
                <xsd:minLength value="1" />
                <xsd:maxLength value="1" />
                <xsd:enumeration value="P" />
                <xsd:enumeration value="A" />
              </xsd:restriction>
            </xsd:simpleType>
          </xsd:attribute>
        </xsd:extension>
      </xsd:simpleContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="Taxes">
    <xsd:annotation>
      <xsd:documentation>Taxes group</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element maxOccurs="unbounded" ref="Tax" />
      </xsd:sequence>
      <xsd:attribute name="Amount" type="xsd:integer" use="required">
        <xsd:annotation>
          <xsd:documentation>Total taxes amount.  Example: 30000</xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="TaxSurcharge" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>Tax surcharge information.  Example: 20.00</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="Telephone">
    <xsd:annotation>
      <xsd:documentation>Telephone group.  *Please note that Galileo does not support TravelerIDRef is in this group.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" maxOccurs="unbounded" ref="TravelerIDRef" />
        <xsd:element ref="TelephoneNumber" />
        <xsd:element minOccurs="0" maxOccurs="0" ref="CityCode" />
        <xsd:element minOccurs="0" maxOccurs="0" ref="StateCode">
          <xsd:annotation>
            <xsd:documentation>State code.  Example: NY</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" maxOccurs="0" ref="CountryCode" />
        <xsd:element minOccurs="0" name="Remark">
          <xsd:annotation>
            <xsd:documentation>Freeflow text remark.

Example: After Hours</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element minOccurs="0" name="Language" type="CountryCodeAlpha2">
          <xsd:annotation>
            <xsd:documentation>Language(s) preferred by traveler using .net language codes (localization codes). 

Sample:  fr-ca</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
      <xsd:attribute name="Type" use="optional">
        <xsd:annotation>
          <xsd:documentation>Phone type.  Values are:
A = AGENCY
B = BUSINESS                E = Emergency Contact
F = FAX
H = HOME
M = MOBILE
O = OTHER                     T =  Travel Arranger Example: H</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:enumeration value="A" />
            <xsd:enumeration value="B" />
            <xsd:enumeration value="C" />
            <xsd:enumeration value="F" />
            <xsd:enumeration value="H" />
            <xsd:enumeration value="M" />
            <xsd:enumeration value="O" />
            <xsd:enumeration value="T" />
            <xsd:enumeration value="E" />
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:attribute>
      <xsd:attribute name="OperationalContact" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>Allowed value "Y". If present this telephone number is designated as the operational contact</xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="TelephoneNumber" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>Telephone number.  Example: 305-269-6975</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="TicketDesignator" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>Ticket designator to price.  Example: AM10AC</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="Ticketing">
    <xsd:annotation>
      <xsd:documentation>Ticketing group</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:choice>
        <xsd:element ref="Issued" />
        <xsd:element ref="TimeLimit" />
        <xsd:element ref="Prepaid" />
        <xsd:element ref="Native" />
      </xsd:choice>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="TicketingInfo">
    <xsd:annotation>
      <xsd:documentation>Ticketing information group</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" ref="CityCode" />
        <xsd:element minOccurs="0" ref="CountryCode" />
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="TicketingInstructions">
    <xsd:annotation>
      <xsd:documentation>Ticketing instruction for future ticketing and pricing processes group</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:choice>
        <xsd:sequence>
          <xsd:element maxOccurs="unbounded" ref="SecondaryAction" />
          <xsd:element minOccurs="0" ref="PricingInstruction" />
        </xsd:sequence>
        <xsd:element name="TicketExchange">
          <xsd:complexType>
            <xsd:sequence>
              <xsd:element minOccurs="0" ref="TravelerIDRef" />
              <xsd:element minOccurs="0" ref="SegmentIDRef" />
              <xsd:element minOccurs="0" name="CommissionGroup">
                <xsd:complexType>
                  <xsd:sequence>
                    <xsd:element name="Commission">
                      <xsd:complexType>
                        <xsd:simpleContent>
                          <xsd:restriction base="CommissionType" />
                        </xsd:simpleContent>
                      </xsd:complexType>
                    </xsd:element>
                    <xsd:element minOccurs="0" name="OldCommission">
                      <xsd:complexType>
                        <xsd:complexContent mixed="false">
                          <xsd:extension base="CommissionType" />
                        </xsd:complexContent>
                      </xsd:complexType>
                    </xsd:element>
                  </xsd:sequence>
                </xsd:complexType>
              </xsd:element>
              <xsd:element minOccurs="0" name="PaymentGroup">
                <xsd:complexType>
                  <xsd:sequence>
                    <xsd:element name="Payment" type="Payment_Type" />
                    <xsd:element minOccurs="0" name="OldPayment">
                      <xsd:complexType>
                        <xsd:complexContent mixed="false">
                          <xsd:extension base="Payment_Type" />
                        </xsd:complexContent>
                      </xsd:complexType>
                    </xsd:element>
                  </xsd:sequence>
                </xsd:complexType>
              </xsd:element>
              <xsd:element name="OriginalDocument" type="DocumentIssueType" />
              <xsd:element minOccurs="0" maxOccurs="2" name="ExchangeForDocument">
                <xsd:complexType>
                  <xsd:complexContent mixed="false">
                    <xsd:extension base="DocumentIssueType" />
                  </xsd:complexContent>
                </xsd:complexType>
              </xsd:element>
              <xsd:element minOccurs="0" ref="Amount" />
              <xsd:element minOccurs="0" ref="BaseAmount" />
              <xsd:element minOccurs="0" ref="TaxAmount" />
              <xsd:element minOccurs="0" name="PenaltyAmount" type="xsd:string" />
              <xsd:element minOccurs="0" ref="Text" />
            </xsd:sequence>
            <xsd:attribute name="Type" use="required">
              <xsd:annotation>
                <xsd:documentation>Type of exchange: E-even eschange, R - residual value exchange, A - add-collect exchange</xsd:documentation>
              </xsd:annotation>
              <xsd:simpleType>
                <xsd:restriction base="xsd:string">
                  <xsd:length value="1" />
                  <xsd:enumeration value="E" />
                  <xsd:enumeration value="R" />
                  <xsd:enumeration value="A" />
                </xsd:restriction>
              </xsd:simpleType>
            </xsd:attribute>
          </xsd:complexType>
        </xsd:element>
      </xsd:choice>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="TicketNumber">
    <xsd:annotation>
      <xsd:documentation>Ticket number.   Example: T123</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:simpleContent>
        <xsd:extension base="xsd:string">
          <xsd:attribute name="ConjTicketNumber">
            <xsd:annotation>
              <xsd:documentation>13-digit ticket number of the LAST ticket of an conjunctive ticket set. 
Example: 1761233215673</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
              <xsd:restriction base="xsd:string">
                <xsd:minLength value="1" />
              </xsd:restriction>
            </xsd:simpleType>
          </xsd:attribute>
          <xsd:attribute name="Status" use="required">
            <xsd:annotation>
              <xsd:documentation>Possible Values:
"TICKETED"
"VOIDED"
"EXCHANGED"
"REFUNDED"</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
              <xsd:restriction base="xsd:string">
                <xsd:enumeration value="TICKETED" />
                <xsd:enumeration value="VOIDED" />
                <xsd:enumeration value="EXCHANGED" />
                <xsd:enumeration value="REFUNDED" />
              </xsd:restriction>
            </xsd:simpleType>
          </xsd:attribute>
          <xsd:attribute name="Date" use="required">
            <xsd:annotation>
              <xsd:documentation>The date in ISO format yyyy-mm-dd of the transaction controlling the 'Status' value.

If e.g. value is "TICKETED" then it is the ticket issuance date; if value is "REFUNDED" then it is the transaction date of the refund.

Example:  2009-10-13</xsd:documentation>
            </xsd:annotation>
          </xsd:attribute>
          <xsd:attributeGroup ref="Time" />
          <xsd:attribute name="TicketingPCC" use="required">
            <xsd:annotation>
              <xsd:documentation>The PCC of the office which issued the ticket.

Example: AAL0</xsd:documentation>
            </xsd:annotation>
          </xsd:attribute>
          <xsd:attribute name="TicketingIATA" use="required">
            <xsd:annotation>
              <xsd:documentation>The IATA number of the agency reporting and responsible for the issued the ticket.

Example: 12345678</xsd:documentation>
            </xsd:annotation>
          </xsd:attribute>
          <xsd:attribute name="UTCDate">
            <xsd:annotation>
              <xsd:documentation>UTC equivalent of the "Date" attribute above.</xsd:documentation>
            </xsd:annotation>
          </xsd:attribute>
          <xsd:attribute name="UTCTime">
            <xsd:annotation>
              <xsd:documentation>UTC equivalent of the Time attribute above</xsd:documentation>
            </xsd:annotation>
          </xsd:attribute>
        </xsd:extension>
      </xsd:simpleContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="TicketRemark">
    <xsd:annotation>
      <xsd:documentation>Ticket remark group</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element ref="Text" />
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="TicketText">
    <xsd:annotation>
      <xsd:documentation>Text related to the ticket penalty.  Values are:
AD = ticket is not refundable after departure

BD = ticket is not refundable before departure  
Example: BD </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleType>
      <xsd:restriction base="xsd:string">
        <xsd:enumeration value="AD" />
        <xsd:enumeration value="BD" />
      </xsd:restriction>
    </xsd:simpleType>
  </xsd:element>
  <xsd:element name="TimeLimit">
    <xsd:annotation>
      <xsd:documentation>Time limit group</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element ref="Date" />
        <xsd:element ref="Time" />
        <xsd:element minOccurs="0" ref="PseudoCityCode" />
        <xsd:element minOccurs="0" ref="AirportCode" />
        <xsd:element minOccurs="0" ref="AirlineCode" />
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="Title" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>Traveler title.  Example: MISS</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="TourCode" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>Tour code.  Example: YK643TU</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="TourName" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>Tour name.  Example: N E Inns</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="TourOperator" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>Tour operator infromation.  Example: 01234</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="TourSegment">
    <xsd:annotation>
      <xsd:documentation>Tour segment group</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" maxOccurs="8" ref="TravelerIDRef" />
        <xsd:element ref="VendorCode" />
        <xsd:element ref="StartDate" />
        <xsd:element ref="CityCode" />
        <xsd:element ref="ActionCode" />
        <xsd:element ref="NumberInParty" />
        <xsd:element minOccurs="0" ref="TourName" />
        <xsd:element minOccurs="0" ref="TourCode" />
        <xsd:element minOccurs="0" ref="RoomCode" />
        <xsd:element minOccurs="0" ref="ServiceInformation" />
        <xsd:element minOccurs="0" ref="ConfirmationNumber" />
        <xsd:element minOccurs="0" maxOccurs="unbounded" ref="Text" />
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="Traveler">
    <xsd:annotation>
      <xsd:documentation>Traveler group</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element ref="TravelerName" />
        <xsd:element minOccurs="0" ref="Infant" />
        <xsd:element minOccurs="0" ref="DiscountInfo" />
      </xsd:sequence>
      <xsd:attribute name="AssociationID" type="xsd:ID" use="required">
        <xsd:annotation>
          <xsd:documentation>Unique traveler ID used to associate other elements to this traveler at PNR creation time.  Example: T1</xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="Type" type="xsd:string" use="optional">
        <xsd:annotation>
          <xsd:documentation>Passenger type.  Values are: ADT = Adult, INS = Infant occupying seat, CHD = Child, YTH = Youth, MIL = Military, GOV = Government, SRC = Senior Citizen, STD = Student (Example: ADT)</xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="PartyAssociation">
        <xsd:annotation>
          <xsd:documentation>This association identifies a group of travelers as a single party, most typically is a group by Surname

Allowed value:  
Pnn (P01-P99)</xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="TopTierAssociation">
        <xsd:annotation>
          <xsd:documentation>Associated a top tier member with a companion(s)  for the purpose of extended top tier benefits.

Allowed value:  
Tnn (T01-T99)</xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="TravelerElementNumber">
    <xsd:annotation>
      <xsd:documentation>Element number of traveler associated to this item.  Example: 1</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:simpleContent>
        <xsd:extension base="xsd:string">
          <xsd:attributeGroup ref="RefType" />
        </xsd:extension>
      </xsd:simpleContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="TravelerGroup">
    <xsd:annotation>
      <xsd:documentation>Traveler group.  Includes pricing information for all passengers of the same type. </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="BookingClass" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Booking class of service for specified passenger type.  This class is returned according to the passenger type priced.  Example: B</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
        <xsd:element ref="Price" />
        <xsd:choice>
          <xsd:element name="ValidBefore" type="xsd:string" />
          <xsd:element name="ValidAfter" type="xsd:string" />
        </xsd:choice>
      </xsd:sequence>
      <xsd:attribute name="TypeRequested" use="required">
        <xsd:annotation>
          <xsd:documentation>Passenger type being requested for pricing.  If the passenger type sent by the GDS is not in the below predefined list, then it is shown as is. If the type priced is different from the type requested and the GDS does not send back the type requested, this type code wil be XXX.  Predefined values are: 
ADT= Adult
CHD = Child
INF = Infant
GOV = Government
MIL = Military
SRC = Senior citizen
STD = Student
YTH = Youth
XXX = Undefined
 Example: CHD</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string" />
        </xsd:simpleType>
      </xsd:attribute>
      <xsd:attribute name="TypePriced" type="xsd:string" use="required">
        <xsd:annotation>
          <xsd:documentation>Passenger type being priced. This type can be different from the type requested if there is no available fare for the requested type.  For example the requested type is GOV and the priced type is ADT because there is no available fare for type GOV and there is an available fare for type ADT. 
If the passenger type sent by the GDS is not the below predefined list, then it is shown as is. 
Predefined values are:
ADT= Adult
CHD = Child
INF = Infant
GOV = Government
MIL = Military
SRC = Senior citizen
STD = Student
YTH = Youth 
Example: ADT</xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
      <xsd:attribute name="TypeCount" use="required">
        <xsd:annotation>
          <xsd:documentation>Number of travelers of the same passenger type.  Example: 2</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:integer">
            <xsd:minInclusive value="0" />
            <xsd:maxInclusive value="9" />
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:attribute>
      <xsd:attribute name="TypeTotalPrice" type="xsd:integer" use="required">
        <xsd:annotation>
          <xsd:documentation>Total price for all passengers of the same type.  It is the result of Price multiplied by TypeCount.  Example: 200000</xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="TravelerInfo">
    <xsd:annotation>
      <xsd:documentation>Number of passengers of the specified type.  Example: 2</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:simpleContent>
        <xsd:extension base="xsd:string">
          <xsd:attribute name="Type" type="xsd:string" use="required">
            <xsd:annotation>
              <xsd:documentation>Passenger type requested for pricing.  If the passenger type sent to the GDS is not in the below predefined list, then it is passed as is to the GDS.  Predefined values are: 
ADT= Adult
CHD = Child
INF = Infant
GOV = Government
MIL = Military
SRC = Senior citizen
STD = Student
YTH = Youth
Example: CHD</xsd:documentation>
            </xsd:annotation>
          </xsd:attribute>
        </xsd:extension>
      </xsd:simpleContent>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="TravelerName">
    <xsd:annotation>
      <xsd:documentation>Name group</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element ref="Surname" />
        <xsd:element ref="GivenName" />
        <xsd:element minOccurs="0" ref="Initial" />
        <xsd:element minOccurs="0" ref="Title" />
        <xsd:choice minOccurs="0">
          <xsd:element minOccurs="0" ref="Age" />
          <xsd:element minOccurs="0" ref="DateOfBirth" />
        </xsd:choice>
        <xsd:element minOccurs="0" ref="NameRemark" />
        <xsd:element minOccurs="0" ref="Gender" />
        <xsd:element minOccurs="0" ref="ProfileIndex" />
        <xsd:element minOccurs="0" name="NameRef">
          <xsd:annotation>
            <xsd:documentation source="DESCRIPTION" xml:lang="en">Name reference.</xsd:documentation>
          </xsd:annotation>
          <xsd:simpleType>
            <xsd:restriction base="xsd:string">
              <xsd:maxLength value="49" />
            </xsd:restriction>
          </xsd:simpleType>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="TravelerProfile" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>Travel profile.  Example: PUBLIC/JOHN</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="Type" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>Discount type.  Example: MIL</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="UserNumber" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>User defined number.  Example: 82</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="UserRemark">
    <xsd:annotation>
      <xsd:documentation>User defined remark group</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element ref="UserNumber" />
        <xsd:element ref="Text" />
      </xsd:sequence>
      <xsd:attribute name="InhibitPrint" use="required">
        <xsd:annotation>
          <xsd:documentation>Option to print remark.  Values are:
Y = Inhibit remark print on invoice
N = Print remark on invoice  Example: Y</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:minLength value="1" />
            <xsd:maxLength value="1" />
            <xsd:enumeration value="Y" />
            <xsd:enumeration value="N" />
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:attribute>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="Value" type="xsd:string">
    <xsd:annotation>
      <xsd:documentation>Voucher value.  Example: 7500</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="VendorCode">
    <xsd:annotation>
      <xsd:documentation>Vendor code.  Example: CS</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleType>
      <xsd:restriction base="xsd:string">
        <xsd:minLength value="2" />
        <xsd:maxLength value="2" />
      </xsd:restriction>
    </xsd:simpleType>
  </xsd:element>
  <xsd:element name="VendorText">
    <xsd:annotation>
      <xsd:documentation>Free text vendor code.  Example: TAXREC</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleType>
      <xsd:restriction base="xsd:string">
        <xsd:minLength value="6" />
        <xsd:maxLength value="6" />
      </xsd:restriction>
    </xsd:simpleType>
  </xsd:element>
  <xsd:element name="Voucher">
    <xsd:annotation>
      <xsd:documentation>Voucher group</xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element minOccurs="0" ref="Number" />
        <xsd:element minOccurs="0" ref="Value" />
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="Year">
    <xsd:annotation>
      <xsd:documentation>Last two digits of the credit card expiration year.  Example: 06</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleType>
      <xsd:restriction base="xsd:integer">
        <xsd:minInclusive value="00" />
        <xsd:maxInclusive value="99" />
        <xsd:totalDigits value="2" />
      </xsd:restriction>
    </xsd:simpleType>
  </xsd:element>
  <xsd:complexType name="BaseFareType">
    <xsd:all>
      <xsd:element minOccurs="0" ref="FiledIn" />
      <xsd:element minOccurs="0" name="Surcharges" type="SurchargesType">
        <xsd:annotation>
          <xsd:documentation>Surcharges group</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:all>
    <xsd:attribute name="Amount" type="xsd:integer" use="required">
      <xsd:annotation>
        <xsd:documentation>Total base fare amount that includes surcharges (if any).  Example: 200000</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>
  <xsd:complexType name="BasicCreditCardType">
    <xsd:sequence>
      <xsd:element name="CCCode">
        <xsd:annotation>
          <xsd:documentation>Credit card vendor code.</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:length value="2" />
            <xsd:pattern value="[A-Z0-9]{2}" />
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="CCNumber">
        <xsd:annotation>
          <xsd:documentation>Credit card number.  Example: 4011236654652341

Can be returned encrypted by GDS/CRS.
Example: XXXXXXXXXXXXXXXX</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:minLength value="1" />
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element name="CCExpiration">
        <xsd:annotation>
          <xsd:documentation>Credit card expiration group</xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="Month">
              <xsd:annotation>
                <xsd:documentation>Credit card expiration month.  Example: 02

Can be returned encrypted by GDS/CRS.
Example: XX</xsd:documentation>
              </xsd:annotation>
              <xsd:simpleType>
                <xsd:restriction base="xsd:string">
                  <xsd:pattern value="0[1-9]|1[0-2]|[^0-9]*" />
                </xsd:restriction>
              </xsd:simpleType>
            </xsd:element>
            <xsd:element name="Year">
              <xsd:annotation>
                <xsd:documentation>Last two digits of the credit card expiration year.  Example: 06

Can be returned encrypted by GDS/CRS.
Example: XX</xsd:documentation>
              </xsd:annotation>
              <xsd:simpleType>
                <xsd:restriction base="xsd:string">
                  <xsd:pattern value="[0-9][0-9]|[^0-9]*" />
                </xsd:restriction>
              </xsd:simpleType>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="BasicEndorsement">
    <xsd:annotation>
      <xsd:documentation>Represents an endorsement line - automatic or manual. The actual text is displayed in the child element Text. </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" name="Text" type="FreeFormTextField">
        <xsd:annotation>
          <xsd:documentation>Endorsement text.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="CarHotelSupplementalInformationType">
    <xsd:sequence>
      <xsd:element minOccurs="0" ref="BookingSource" />
      <xsd:element minOccurs="0" name="CorporateRateOverride" type="xsd:integer">
        <xsd:annotation>
          <xsd:documentation>Corporate rate override.  Example: 25900</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="CorporateDiscountNumber">
        <xsd:annotation>
          <xsd:documentation>Corporate discount number.  Example: 5643356</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:minLength value="1" />
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element minOccurs="0" name="PaymentGuarantee">
        <xsd:complexType>
          <xsd:choice>
            <xsd:element name="CreditCard">
              <xsd:complexType>
                <xsd:complexContent mixed="false">
                  <xsd:extension base="BasicCreditCardType">
                    <xsd:sequence minOccurs="0">
                      <xsd:element minOccurs="0" name="CardholderFirstName">
                        <xsd:annotation>
                          <xsd:documentation>FirstName on card. </xsd:documentation>
                        </xsd:annotation>
                        <xsd:simpleType>
                          <xsd:restriction base="xsd:string">
                            <xsd:minLength value="1" />
                          </xsd:restriction>
                        </xsd:simpleType>
                      </xsd:element>
                      <xsd:element name="CardholderLastName">
                        <xsd:annotation>
                          <xsd:documentation>Name on card. </xsd:documentation>
                        </xsd:annotation>
                        <xsd:simpleType>
                          <xsd:restriction base="xsd:string">
                            <xsd:minLength value="1" />
                          </xsd:restriction>
                        </xsd:simpleType>
                      </xsd:element>
                    </xsd:sequence>
                  </xsd:extension>
                </xsd:complexContent>
              </xsd:complexType>
            </xsd:element>
            <xsd:element name="Other">
              <xsd:simpleType>
                <xsd:restriction base="xsd:string">
                  <xsd:minLength value="1" />
                </xsd:restriction>
              </xsd:simpleType>
            </xsd:element>
          </xsd:choice>
          <xsd:attribute default="G" name="Type" use="optional">
            <xsd:annotation>
              <xsd:documentation>Type of payment.  Values are:
G = Guarantee
D = Deposit
Example: G</xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
              <xsd:restriction base="xsd:string">
                <xsd:enumeration value="G">
                  <xsd:annotation>
                    <xsd:documentation>Guarantee</xsd:documentation>
                  </xsd:annotation>
                </xsd:enumeration>
                <xsd:enumeration value="D">
                  <xsd:annotation>
                    <xsd:documentation>Deposit</xsd:documentation>
                  </xsd:annotation>
                </xsd:enumeration>
              </xsd:restriction>
            </xsd:simpleType>
          </xsd:attribute>
        </xsd:complexType>
      </xsd:element>
      <xsd:element minOccurs="0" name="FrequentGuest">
        <xsd:annotation>
          <xsd:documentation>Frequent Guest Group</xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element minOccurs="0" name="FGCode">
              <xsd:annotation>
                <xsd:documentation>Frequent guest code.  Example: MC</xsd:documentation>
              </xsd:annotation>
              <xsd:simpleType>
                <xsd:restriction base="xsd:string">
                  <xsd:length value="2" />
                </xsd:restriction>
              </xsd:simpleType>
            </xsd:element>
            <xsd:element name="FGNumber">
              <xsd:annotation>
                <xsd:documentation>Frequent guest number.  Example: 123456</xsd:documentation>
              </xsd:annotation>
              <xsd:simpleType>
                <xsd:restriction base="xsd:string">
                  <xsd:minLength value="1" />
                </xsd:restriction>
              </xsd:simpleType>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element minOccurs="0" name="FrequentFlyer">
        <xsd:annotation>
          <xsd:documentation>Frequent Flyer Group</xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element minOccurs="0" name="FFCode">
              <xsd:annotation>
                <xsd:documentation>Frequent flyer code.  Example: DL</xsd:documentation>
              </xsd:annotation>
              <xsd:simpleType>
                <xsd:restriction base="xsd:string">
                  <xsd:length value="2" />
                </xsd:restriction>
              </xsd:simpleType>
            </xsd:element>
            <xsd:element name="FFNumber">
              <xsd:annotation>
                <xsd:documentation>Frequent flyer number.  Example: 0956301007</xsd:documentation>
              </xsd:annotation>
              <xsd:simpleType>
                <xsd:restriction base="xsd:string">
                  <xsd:minLength value="1" />
                </xsd:restriction>
              </xsd:simpleType>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element minOccurs="0" name="AdditionalInformation">
        <xsd:annotation>
          <xsd:documentation>Optional additional information.  Example: Traveler on wheelchair</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:minLength value="1" />
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="CarLocation">
    <xsd:annotation>
      <xsd:documentation>Type definition for particular car location (for particular car vendor).</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="CityCode">
        <xsd:annotation>
          <xsd:documentation>IATA 3-letter city/airport code for location. In case of non-airport location Category and Number need to be present. Example: NYC</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:length value="3" />
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:sequence minOccurs="0">
        <xsd:element name="Category">
          <xsd:annotation>
            <xsd:documentation>Location category:
T = Airport terminal
O = Off-airport
C = City location 
P = Port 
X = Rail
N = North suburban
E = East suburban
S = South suburban
W = West suburban
A = All suburban locations 
R = Resort location
Example: C</xsd:documentation>
          </xsd:annotation>
          <xsd:simpleType>
            <xsd:restriction base="xsd:string">
              <xsd:length value="1" />
            </xsd:restriction>
          </xsd:simpleType>
        </xsd:element>
        <xsd:element name="Number" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Location number used to identify specific rental location within a location category.  Example: 001</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="CertificateType">
    <xsd:annotation>
      <xsd:documentation source="DESCRIPTION" xml:lang="en">Electronic Certificate information.

=notes=
1. Supports non-revenue and flightpass certificates.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="Number" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation source="DESCRIPTION" xml:lang="en">Unique certificate number.
Example: 12345678</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="IssuingAirline">
        <xsd:annotation>
          <xsd:documentation source="DESCRIPTION" xml:lang="en">Airline designator code.
Example: UA</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:minLength value="2" />
            <xsd:maxLength value="3" />
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element minOccurs="0" name="ProgramName">
        <xsd:annotation>
          <xsd:documentation source="DESCRIPTION" xml:lang="en">Associated program name.
Example: PASSPRO</xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
          <xsd:simpleContent>
            <xsd:extension base="xsd:string">
              <xsd:attribute name="Type" type="xsd:string" use="optional">
                <xsd:annotation>
                  <xsd:documentation source="DESCRIPTION" xml:lang="en">Program type.
Examples:
BUSINESS
LEISURE</xsd:documentation>
                </xsd:annotation>
              </xsd:attribute>
            </xsd:extension>
          </xsd:simpleContent>
        </xsd:complexType>
      </xsd:element>
      <xsd:element minOccurs="0" name="CertificateName" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>Associated certificate name. This element is returned by the program and onlly valid as part of a response message.                             Example: Flex 30 credits</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="CreditsUsed" type="xsd:integer">
        <xsd:annotation>
          <xsd:documentation>Credits consumed as part of the given certificate. This element is returned by the program and only valid as part of a response message. </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="Holder">
        <xsd:annotation>
          <xsd:documentation source="DESCRIPTION" xml:lang="en">Certificate holder or owner information.</xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
          <xsd:simpleContent>
            <xsd:extension base="xsd:string">
              <xsd:attribute name="OwnerID" type="xsd:string" use="optional">
                <xsd:annotation>
                  <xsd:documentation source="DESCRIPTION" xml:lang="en">Owner ID.
Example: AAA2

=notes=
1. This will be a PCC (Pseudo City Code) if an agency has ownership.</xsd:documentation>
                </xsd:annotation>
              </xsd:attribute>
              <xsd:attribute name="IATA" use="optional">
                <xsd:annotation>
                  <xsd:documentation source="DESCRIPTION" xml:lang="en">IATA number if agency has ownership.
Example: 98417900</xsd:documentation>
                </xsd:annotation>
                <xsd:simpleType>
                  <xsd:restriction base="xsd:string">
                    <xsd:pattern value="[A-Z0-9]{7,8}" />
                  </xsd:restriction>
                </xsd:simpleType>
              </xsd:attribute>
              <xsd:attribute name="CorpID" type="xsd:string" use="optional">
                <xsd:annotation>
                  <xsd:documentation source="DESCRIPTION" xml:lang="en">Account number if agency has ownership.
Example: 23456</xsd:documentation>
                </xsd:annotation>
              </xsd:attribute>
              <xsd:attribute name="FQTVNumber" type="xsd:string" use="optional">
                <xsd:annotation>
                  <xsd:documentation source="DESCRIPTION" xml:lang="en">Traveler frequent flyer number if personal ownership.
Example: 0956301007</xsd:documentation>
                </xsd:annotation>
              </xsd:attribute>
            </xsd:extension>
          </xsd:simpleContent>
        </xsd:complexType>
      </xsd:element>
      <xsd:element minOccurs="0" maxOccurs="unbounded" ref="SegmentIDRef" />
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="Children">
    <xsd:annotation>
      <xsd:documentation>Group of child elements defining age and bedding type (optional) for each child. Used in hotel requests.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" name="Child">
        <xsd:annotation>
          <xsd:documentation>Child elements - one per requested child.</xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="Age">
              <xsd:annotation>
                <xsd:documentation>Age of child in years (allowed values are 0-17).</xsd:documentation>
              </xsd:annotation>
              <xsd:simpleType>
                <xsd:restriction base="xsd:int">
                  <xsd:minInclusive value="0" />
                  <xsd:maxInclusive value="17" />
                </xsd:restriction>
              </xsd:simpleType>
            </xsd:element>
            <xsd:element minOccurs="0" name="ExtraBed">
              <xsd:annotation>
                <xsd:documentation>Defines if child will need its own bed ('Y') or sleep in parents bed ('N'). If omitted no extra bed is required.</xsd:documentation>
              </xsd:annotation>
              <xsd:simpleType>
                <xsd:restriction base="xsd:string">
                  <xsd:enumeration value="Y" />
                  <xsd:enumeration value="N" />
                </xsd:restriction>
              </xsd:simpleType>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="CommissionType">
    <xsd:simpleContent>
      <xsd:extension base="xsd:decimal">
        <xsd:attribute name="Type" use="required">
          <xsd:annotation>
            <xsd:documentation>Commission type.  Values are: P = Percent, A = Amount  Example: A</xsd:documentation>
          </xsd:annotation>
          <xsd:simpleType>
            <xsd:restriction base="xsd:string">
              <xsd:minLength value="1" />
              <xsd:maxLength value="1" />
              <xsd:enumeration value="P" />
              <xsd:enumeration value="A" />
            </xsd:restriction>
          </xsd:simpleType>
        </xsd:attribute>
        <xsd:attribute name="CommissionSource" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Indicates where or how the commission was entered. Valid Values:                       M = Manual                        P = From Pricing provider     X = Calculated using FLX-M</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:simpleType name="COSType">
    <xsd:annotation>
      <xsd:documentation> Basic definition of air  ClassOfService. Alpha-coded. Usually single char.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:maxLength value="1" />
      <xsd:minLength value="1" />
      <xsd:pattern value="[A-Z]" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="CountryCodeAlpha2">
    <xsd:annotation>
      <xsd:documentation>2 character country code as defined in ISO3166, restricted to upper case.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:pattern value="[A-Z]{2}" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="CurrencyCodeType">
    <xsd:annotation>
      <xsd:documentation>Defines currency code (ISO 3-letter code) and optional number of decimals. Not that for request messages the NumberOfDecimals has no effect and is not needed.</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="xsd:string">
        <xsd:attribute name="NumberOfDecimals" type="xsd:integer" use="optional">
          <xsd:annotation>
            <xsd:documentation>Decimal position in fare amount.  Example: 2</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="Rate" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>The daily exchange rate defined through sources such as BSR, BBR, ICH between two currencies  applied in the conversion</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="ROE" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Conversion rate applied to the conversion of a filed fare to NUC as published by IATA. Applicable to FiledInCurrency only.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="Table" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Table reference for the exchange rate.
Sample: BSR</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:simpleType name="Date">
    <xsd:annotation>
      <xsd:documentation>Date in ISO 8601 format (yyyy-mm-dd). Example: 2001-12-25</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:date" />
  </xsd:simpleType>
  <xsd:complexType name="DerivationType">
    <xsd:annotation>
      <xsd:documentation source="DESCRIPTION" xml:lang="en">Price derivation information definition.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice>
      <xsd:element minOccurs="0" name="Account" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation source="DESCRIPTION" xml:lang="en">Corporate ID or account number. 
Example: 675124</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="Contract" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation source="DESCRIPTION" xml:lang="en">Contract ID.
Example: 675124</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" maxOccurs="unbounded" name="Certificate">
        <xsd:annotation>
          <xsd:documentation>Certificate Data.</xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="Number" type="xsd:string">
              <xsd:annotation>
                <xsd:documentation source="DESCRIPTION" xml:lang="en">Unique Certificate Number.
Example: 12345678</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
            <xsd:element minOccurs="0" name="ProgramName">
              <xsd:annotation>
                <xsd:documentation source="DESCRIPTION" xml:lang="en">Associated program name.
Example: PASSPRO</xsd:documentation>
              </xsd:annotation>
              <xsd:complexType>
                <xsd:simpleContent>
                  <xsd:extension base="xsd:string">
                    <xsd:attribute name="Type" type="xsd:string" use="optional">
                      <xsd:annotation>
                        <xsd:documentation source="DESCRIPTION" xml:lang="en">Program type.
Examples:
BUSINESS
LEISURE</xsd:documentation>
                      </xsd:annotation>
                    </xsd:attribute>
                  </xsd:extension>
                </xsd:simpleContent>
              </xsd:complexType>
            </xsd:element>
            <xsd:element minOccurs="0" name="Holder">
              <xsd:annotation>
                <xsd:documentation source="DESCRIPTION" xml:lang="en">Certificate holder or owner information.</xsd:documentation>
              </xsd:annotation>
              <xsd:complexType>
                <xsd:attribute name="OwnerID" type="xsd:string" use="optional">
                  <xsd:annotation>
                    <xsd:documentation source="DESCRIPTION" xml:lang="en">Owner ID.
Example: AAA2

=notes=
1. This will be a PCC (Pseudo City Code) if an agency has ownership.</xsd:documentation>
                  </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="IATA" use="optional">
                  <xsd:annotation>
                    <xsd:documentation source="DESCRIPTION" xml:lang="en">IATA number if agency has ownership.
Example: 98417900</xsd:documentation>
                  </xsd:annotation>
                  <xsd:simpleType>
                    <xsd:restriction base="xsd:string">
                      <xsd:pattern value="[A-Z0-9]{7,8}" />
                    </xsd:restriction>
                  </xsd:simpleType>
                </xsd:attribute>
                <xsd:attribute name="CorpID" type="xsd:string" use="optional">
                  <xsd:annotation>
                    <xsd:documentation source="DESCRIPTION" xml:lang="en">Account number if agency has ownership.
Example: 23456</xsd:documentation>
                  </xsd:annotation>
                </xsd:attribute>
                <xsd:attribute name="FQTVNumber" type="xsd:string" use="optional">
                  <xsd:annotation>
                    <xsd:documentation source="DESCRIPTION" xml:lang="en">Traveler frequent flyer number if personal ownership.
Example: 0956301007</xsd:documentation>
                  </xsd:annotation>
                </xsd:attribute>
              </xsd:complexType>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element minOccurs="0" name="PromoCode" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation source="DESCRIPTION" xml:lang="en">Promotion code ID or number.
Example: PROMO123</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="Discount">
        <xsd:annotation>
          <xsd:documentation source="DESCRIPTION" xml:lang="en">Discount ID.</xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element minOccurs="0" name="DiscountID" type="xsd:string">
              <xsd:annotation>
                <xsd:documentation source="DESCRIPTION" xml:lang="en">Discount ID.
Example: DSC12345</xsd:documentation>
                <xsd:documentation source="GUIDELINES" xml:lang="en">=notes=
1. This may be used for ZapOff.</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
            <xsd:element minOccurs="0" name="TicketDesignator" type="xsd:string">
              <xsd:annotation>
                <xsd:documentation source="DESCRIPTION" xml:lang="en">Discount pricing ticket designator.
Examples:
DISC
SPCL
AD75</xsd:documentation>
                <xsd:documentation source="GUIDELINES" xml:lang="en">=notes=
1. Any ticket designator used for fare selection is to be mapped to the root of the PricingInfo/FareSelection node.</xsd:documentation>
              </xsd:annotation>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element minOccurs="0" name="TourCode">
        <xsd:annotation>
          <xsd:documentation source="DESCRIPTION" xml:lang="en">Tour code.
Example: GOGO123</xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
          <xsd:simpleContent>
            <xsd:extension base="xsd:string" />
          </xsd:simpleContent>
        </xsd:complexType>
      </xsd:element>
    </xsd:choice>
  </xsd:complexType>
  <xsd:simpleType name="FlightNumberType">
    <xsd:annotation>
      <xsd:documentation>A flight number. Flight numbers are integer values within the range of [0-9999]. Example: 1234</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:integer">
      <xsd:minInclusive value="0" />
      <xsd:maxInclusive value="9999" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="FlightNumberWithSuffixType">
    <xsd:annotation>
      <xsd:documentation>A flight number with optional suffix letter. Flight numbers are integer values within the range of [0,9999]. 

Example: 1234</xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="FlightNumberType">
        <xsd:attribute name="Suffix" use="optional">
          <xsd:annotation>
            <xsd:documentation>Flight number alpha qualifier.  
Values are:
A
B
C
D

Example: A</xsd:documentation>
          </xsd:annotation>
          <xsd:simpleType>
            <xsd:restriction base="xsd:string">
              <xsd:enumeration value="A" />
              <xsd:enumeration value="B" />
              <xsd:enumeration value="C" />
              <xsd:enumeration value="D" />
            </xsd:restriction>
          </xsd:simpleType>
        </xsd:attribute>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <xsd:simpleType name="FreeFormTextField">
    <xsd:annotation>
      <xsd:documentation>any type of freeform text - basic type</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:minLength value="1" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="Lang">
    <xsd:annotation>
      <xsd:documentation>ISO language code. A two letter code as defined by ISO-639-1. This code specifies the requested language for text content. Default value is 'en'.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:length value="2" />
      <xsd:pattern value="[a-z][a-z]" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="MarketingDataType">
    <xsd:annotation>
      <xsd:documentation source="DESCRIPTION" xml:lang="en">Marketing Messages and Multimedia Links.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element minOccurs="0" name="MediaContent">
        <xsd:annotation>
          <xsd:documentation source="DESCRIPTION" xml:lang="en">Media content information.</xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element minOccurs="0" name="Images">
              <xsd:annotation>
                <xsd:documentation source="DESCRIPTION" xml:lang="en">Image information.</xsd:documentation>
              </xsd:annotation>
              <xsd:complexType>
                <xsd:sequence>
                  <xsd:element maxOccurs="unbounded" name="Image">
                    <xsd:annotation>
                      <xsd:documentation source="DESCRIPTION" xml:lang="en">Image detail.</xsd:documentation>
                    </xsd:annotation>
                    <xsd:complexType>
                      <xsd:sequence>
                        <xsd:element name="Height">
                          <xsd:annotation>
                            <xsd:documentation>Height of media content in specified units.</xsd:documentation>
                          </xsd:annotation>
                          <xsd:complexType>
                            <xsd:simpleContent>
                              <xsd:extension base="xsd:int">
                                <xsd:attribute name="Unit" type="xsd:string" use="required">
                                  <xsd:annotation>
                                    <xsd:documentation source="DESCRIPTION" xml:lang="en">Dimension unit.
Examples:
MM (MILLIMETER)
PX (PIXEL)</xsd:documentation>
                                    <xsd:documentation source="ENCODING" xml:lang="en">Select a value from the enumerated list or enter a string value.
=enumerated values=
MM = MILLIMETER
PX = PIXEL</xsd:documentation>
                                  </xsd:annotation>
                                </xsd:attribute>
                              </xsd:extension>
                            </xsd:simpleContent>
                          </xsd:complexType>
                        </xsd:element>
                        <xsd:element name="Width">
                          <xsd:annotation>
                            <xsd:documentation>Width of media content in specified units.</xsd:documentation>
                          </xsd:annotation>
                          <xsd:complexType>
                            <xsd:simpleContent>
                              <xsd:extension base="xsd:int">
                                <xsd:attribute name="Unit" type="xsd:string" use="required">
                                  <xsd:annotation>
                                    <xsd:documentation source="DESCRIPTION" xml:lang="en">Dimension unit.
Examples:
MM (MILLIMETER)
PX (PIXEL)</xsd:documentation>
                                    <xsd:documentation source="ENCODING" xml:lang="en">Select a value from the enumerated list or enter a string value.
=enumerated values=
MM = MILLIMETER
PX = PIXEL</xsd:documentation>
                                  </xsd:annotation>
                                </xsd:attribute>
                              </xsd:extension>
                            </xsd:simpleContent>
                          </xsd:complexType>
                        </xsd:element>
                        <xsd:element minOccurs="0" name="ImageData" type="xsd:string">
                          <xsd:annotation>
                            <xsd:documentation source="DESCRIPTION" xml:lang="en">Encoded image value, typically in base64.</xsd:documentation>
                          </xsd:annotation>
                        </xsd:element>
                        <xsd:element minOccurs="0" name="ImageText">
                          <xsd:annotation>
                            <xsd:documentation source="DESCRIPTION" xml:lang="en">Media associated text.</xsd:documentation>
                          </xsd:annotation>
                          <xsd:complexType>
                            <xsd:sequence>
                              <xsd:element maxOccurs="unbounded" name="Text">
                                <xsd:simpleType>
                                  <xsd:restriction base="xsd:string">
                                    <xsd:minLength value="1" />
                                  </xsd:restriction>
                                </xsd:simpleType>
                              </xsd:element>
                            </xsd:sequence>
                          </xsd:complexType>
                        </xsd:element>
                      </xsd:sequence>
                      <xsd:attribute name="ImageID" type="xsd:string" use="optional">
                        <xsd:annotation>
                          <xsd:documentation source="DESCRIPTION" xml:lang="en">Unique media ID.
Examples:
IMG713
SFO_LOUNGE</xsd:documentation>
                          <xsd:documentation source="GUIDELINES" xml:lang="en">=notes=
1. Provides an unique ID for any available images returned in any responsemessages.
2. FileRetrieveRQ/ FileListRS will utilize these ID's to retrieve the full image(s) as needed.</xsd:documentation>
                        </xsd:annotation>
                      </xsd:attribute>
                      <xsd:attribute name="Caption" type="xsd:string" use="optional">
                        <xsd:annotation>
                          <xsd:documentation source="DESCRIPTION" xml:lang="en">Media caption.
Example: PREMIUM SEAT</xsd:documentation>
                        </xsd:annotation>
                      </xsd:attribute>
                      <xsd:attribute name="Symbology" type="xsd:string" use="optional">
                        <xsd:annotation>
                          <xsd:documentation source="DESCRIPTION" xml:lang="en">Barcode symbology applied.
Example: PDF417</xsd:documentation>
                        </xsd:annotation>
                      </xsd:attribute>
                      <xsd:attribute name="Encoding" type="xsd:string" use="optional">
                        <xsd:annotation>
                          <xsd:documentation source="DESCRIPTION" xml:lang="en">Media encoding method.
Example: BASE64</xsd:documentation>
                        </xsd:annotation>
                      </xsd:attribute>
                      <xsd:attribute name="Format" type="xsd:string" use="optional">
                        <xsd:annotation>
                          <xsd:documentation source="DESCRIPTION" xml:lang="en">Media format.
Example: JPEG</xsd:documentation>
                        </xsd:annotation>
                      </xsd:attribute>
                    </xsd:complexType>
                  </xsd:element>
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
            <xsd:element minOccurs="0" name="MediaLinks">
              <xsd:annotation>
                <xsd:documentation source="DESCRIPTION" xml:lang="en">Link information.</xsd:documentation>
              </xsd:annotation>
              <xsd:complexType>
                <xsd:sequence>
                  <xsd:element maxOccurs="unbounded" name="Link">
                    <xsd:annotation>
                      <xsd:documentation source="DESCRIPTION" xml:lang="en">Link detail.</xsd:documentation>
                    </xsd:annotation>
                    <xsd:complexType>
                      <xsd:attribute name="LinkID" type="xsd:string" use="optional">
                        <xsd:annotation>
                          <xsd:documentation source="DESCRIPTION" xml:lang="en">Unique link ID.
Example: SFOLOUNGE</xsd:documentation>
                        </xsd:annotation>
                      </xsd:attribute>
                      <xsd:attribute name="Caption" type="xsd:string" use="optional">
                        <xsd:annotation>
                          <xsd:documentation source="DESCRIPTION" xml:lang="en">Caption or label.
Example: PREMIUM SEAT</xsd:documentation>
                        </xsd:annotation>
                      </xsd:attribute>
                      <xsd:attribute name="Type" type="xsd:string" use="optional">
                        <xsd:annotation>
                          <xsd:documentation source="DESCRIPTION" xml:lang="en">Media link type.
Example:
DET (Details)
DIS (Disclosure)
VID (Video)
CAM (Webcam)
PGE (Webpage)</xsd:documentation>
                        </xsd:annotation>
                      </xsd:attribute>
                    </xsd:complexType>
                  </xsd:element>
                </xsd:sequence>
              </xsd:complexType>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element minOccurs="0" maxOccurs="unbounded" name="Message">
        <xsd:annotation>
          <xsd:documentation source="DESCRIPTION" xml:lang="en">Marketing message.
Example: ONE TRAVELER MAY BE ELIGIBLE FOR A FREE SEAT</xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="unbounded" name="Text">
              <xsd:simpleType>
                <xsd:restriction base="xsd:string">
                  <xsd:minLength value="1" />
                </xsd:restriction>
              </xsd:simpleType>
            </xsd:element>
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
    </xsd:sequence>
    <xsd:attributeGroup ref="sourceOptional" />
  </xsd:complexType>
  <xsd:complexType name="Media">
    <xsd:annotation>
      <xsd:documentation>Holds reference to multi media content such as pictures, videos, etc. for this hotel property.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent mixed="false">
      <xsd:extension base="MediaType">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="Preview" type="MediaType">
            <xsd:annotation>
              <xsd:documentation>Preview of the referenced media content (e.g. thumbnail of the picture).</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element minOccurs="0" name="Description" type="xsd:string">
            <xsd:annotation>
              <xsd:documentation>Media content description (e.g. exterior view).</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:simpleType name="MediaSizeUnitType">
    <xsd:annotation>
      <xsd:documentation>Unit used to specify dimensions of media content.

Example:
mm (millimeter) 
px (pixel)</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="px" />
      <xsd:enumeration value="mm" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="MediaType">
    <xsd:sequence>
      <xsd:element name="Url" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>Hyperlink defining the location of the referenced media (e.g. location of a JPG file).</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:sequence minOccurs="0">
        <xsd:element name="Width">
          <xsd:annotation>
            <xsd:documentation>Width of media content in specified units.</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:simpleContent>
              <xsd:extension base="xsd:int">
                <xsd:attribute name="Unit" type="MediaSizeUnitType" use="required">
                  <xsd:annotation>
                    <xsd:documentation>Unit used to specify dimensions of media content.

Example:
mm (millimeter) 
px (pixel)</xsd:documentation>
                  </xsd:annotation>
                </xsd:attribute>
              </xsd:extension>
            </xsd:simpleContent>
          </xsd:complexType>
        </xsd:element>
        <xsd:element name="Height">
          <xsd:annotation>
            <xsd:documentation>Height of media content in specified units.</xsd:documentation>
          </xsd:annotation>
          <xsd:complexType>
            <xsd:simpleContent>
              <xsd:extension base="xsd:int">
                <xsd:attribute name="Unit" type="MediaSizeUnitType" use="required">
                  <xsd:annotation>
                    <xsd:documentation>Unit used to specify dimensions of media content.

Example:
mm (millimeter) 
px (pixel)</xsd:documentation>
                  </xsd:annotation>
                </xsd:attribute>
              </xsd:extension>
            </xsd:simpleContent>
          </xsd:complexType>
        </xsd:element>
      </xsd:sequence>
      <xsd:element name="Type" type="MediaTypeType">
        <xsd:annotation>
          <xsd:documentation>Type of media content. 

Example:
image
webcam
video 
360 (panorama view)</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:simpleType name="MediaTypeType">
    <xsd:annotation>
      <xsd:documentation>Type of media content. 

Example:
image
webcam
video 
360 (panorama view)</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="image" />
      <xsd:enumeration value="webcam" />
      <xsd:enumeration value="360" />
      <xsd:enumeration value="video" />
      <xsd:enumeration value="logo" />
      <xsd:enumeration value="map" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="MessageStructure">
    <xsd:complexContent mixed="false">
      <xsd:extension base="xsd:anyType" />
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:simpleType name="PNRRecordLocator">
    <xsd:annotation>
      <xsd:documentation>Defines PNR record locator format in accordance with industry standard. [A-Z0-9]{6}.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:length value="6" />
      <xsd:pattern value="[A-Z0-9]{6}" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="positiveDecimal">
    <xsd:annotation>
      <xsd:documentation>A restriction of the built-in decimal type to positive values (excluding 0). Defined as a type of its own, because this type of restriction cannot be stated direcetly for a derived type, which is at the same time extended by attributes.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:decimal">
      <xsd:minExclusive value="0" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="positiveIntegerOrEmpty">
    <xsd:annotation>
      <xsd:documentation>Either a positive integer value (without leading zeros) or the empty string.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:pattern value="[1-9][0-9]*" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="RequestForCarLocation">
    <xsd:annotation>
      <xsd:documentation>Type definition for one or more (if only citycode and category is specified) car locations for one or more car vendors.</xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="CityCode">
        <xsd:annotation>
          <xsd:documentation>IATA 3-letter city/airport code for location. In case of non-airport location Category need to be present (Number for particular locaction). Example: NYC</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:length value="3" />
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:sequence minOccurs="0">
        <xsd:element name="Category">
          <xsd:annotation>
            <xsd:documentation>Location category:
T = Airport terminal
O = Off-airport
C = City location 
P = Port 
X = Rail
N = North suburban
E = East suburban
S = South suburban
W = West suburban 
D = default location for the city.
R = Resort location
Example: C</xsd:documentation>
          </xsd:annotation>
          <xsd:simpleType>
            <xsd:restriction base="xsd:string">
              <xsd:length value="1" />
            </xsd:restriction>
          </xsd:simpleType>
        </xsd:element>
        <xsd:element minOccurs="0" name="Number" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Location number used to identify specific rental location within a location category.  Example: 001</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="SegmentIDRef">
    <xsd:annotation>
      <xsd:documentation>ID reference used to associate this item to a segment. No comma separated lists and no ranges supported. Example: F1</xsd:documentation>
    </xsd:annotation>
    <xsd:attributeGroup ref="OFFPoint" />
    <xsd:attributeGroup ref="ONPoint" />
    <xsd:attributeGroup ref="RefType" />
  </xsd:complexType>
  <xsd:complexType name="SourceStdAttributes">
    <xsd:annotation>
      <xsd:documentation>Source Aggregation Information. </xsd:documentation>
    </xsd:annotation>
    <xsd:attributeGroup ref="sourceOptional" />
    <xsd:attribute name="Version" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation source="DESCRIPTION" xml:lang="en">Message version number.
Example: 1.0</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="TimeStamp" type="xsd:dateTime" use="optional">
      <xsd:annotation>
        <xsd:documentation source="DESCRIPTION" xml:lang="en">Message creation timestamp.
Example: 2012-01-13T13:59:38Z</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
    <xsd:attribute name="TransactionIdentifier" type="xsd:string" use="optional">
      <xsd:annotation>
        <xsd:documentation source="DESCRIPTION" xml:lang="en">Unique relationship identifier for request and response messages that are part of an on-going transaction.
Example: TRN12345</xsd:documentation>
        <xsd:documentation source="GUIDELINES" xml:lang="en">=notes=
1. This is a unique identifier to relate all messages that are part of an on-going transaction.</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>
  <xsd:simpleType name="stringLength4">
    <xsd:annotation>
      <xsd:documentation>4 character string.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:length value="4" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="SurchargesType">
    <xsd:sequence>
      <xsd:element maxOccurs="unbounded" name="Surcharge" type="SurchargeType">
        <xsd:annotation>
          <xsd:documentation>Surcharges break down information.</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
    <xsd:attribute name="Amount" type="xsd:integer" use="required">
      <xsd:annotation>
        <xsd:documentation>Total surcharges amount.  Example: 2000</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>
  <xsd:complexType name="SurchargeType">
    <xsd:complexContent mixed="false">
      <xsd:extension base="SurchargeTypeBasic">
        <xsd:attribute name="Segment" type="xsd:integer">
          <xsd:annotation>
            <xsd:documentation>Segment number to which the surcharge applies.  Example: 1</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attributeGroup ref="ONPoint" />
        <xsd:attributeGroup ref="OFFPoint" />
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
  <xsd:complexType name="SurchargeTypeBasic">
    <xsd:sequence>
      <xsd:element name="Designator">
        <xsd:annotation>
          <xsd:documentation>Surcharge designator.</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:minLength value="1" />
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element minOccurs="0" name="Description">
        <xsd:annotation>
          <xsd:documentation>Surcharge descriptions as free form text.</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:minLength value="1" />
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
      <xsd:element minOccurs="0" ref="FiledCurrencyCode">
        <xsd:annotation>
          <xsd:documentation>Currency for this FareComponent may not be the same as POS Currency Code.  Example: HKD</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" ref="FiledAmount">
        <xsd:annotation>
          <xsd:documentation>Fare Amount as filed in the currency defined in FiledCurrencyCode</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
    <xsd:attribute name="Amount" type="xsd:integer" use="required">
      <xsd:annotation>
        <xsd:documentation>Individual surcharge amount.  Example: 270</xsd:documentation>
      </xsd:annotation>
    </xsd:attribute>
  </xsd:complexType>
  <xsd:simpleType name="Time">
    <xsd:annotation>
      <xsd:documentation>Time in ISO 8601 twenty-four hour clock format. Example: 14:00</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:length value="5" />
      <xsd:pattern value="([0-1][0-9]|2[0-3]):[0-5][0-9]" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:simpleType name="TimeDurationHoursMinutes">
    <xsd:annotation>
      <xsd:documentation>A duration of time specified in hours and minutes (HH:MM) with a maximum value of 99:59.</xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:pattern value="[0-9][0-9]:[0-5][0-9]" />
    </xsd:restriction>
  </xsd:simpleType>
  <xsd:complexType name="CreditCardInformationType">
    <xsd:sequence>
      <xsd:element ref="CCCode" />
      <xsd:element ref="CCNumber" />
      <xsd:element ref="CCExpiration" />
      <xsd:element minOccurs="0" ref="TravelerIDRef" />
      <xsd:element minOccurs="0" ref="CardholderFirstName" />
      <xsd:element minOccurs="0" ref="CardholderLastName" />
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="DocumentIssueType">
    <xsd:sequence>
      <xsd:element name="Airline" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>3 digit airline code.             Exaple: 001 for AA </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="TicketNumber">
        <xsd:complexType>
          <xsd:simpleContent>
            <xsd:extension base="xsd:string">
              <xsd:attribute name="Type" use="required">
                <xsd:annotation>
                  <xsd:documentation>Ticket Type: E- e-ticket, P- paper ticket</xsd:documentation>
                </xsd:annotation>
                <xsd:simpleType>
                  <xsd:restriction base="xsd:string">
                    <xsd:enumeration value="P" />
                    <xsd:enumeration value="E" />
                  </xsd:restriction>
                </xsd:simpleType>
              </xsd:attribute>
            </xsd:extension>
          </xsd:simpleContent>
        </xsd:complexType>
      </xsd:element>
      <xsd:element minOccurs="0" name="CheckDigit" type="xsd:string" />
      <xsd:element minOccurs="0" maxOccurs="4" name="Coupon" type="xsd:int">
        <xsd:annotation>
          <xsd:documentation>Coupon numbers in ascending order</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="LastConjunctionDigits" type="xsd:string">
        <xsd:annotation>
          <xsd:documentation>Last two digits of the last conjunction document</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element minOccurs="0" name="LasConjuctionCheckDigit" type="xsd:string" />
      <xsd:element minOccurs="0" maxOccurs="4" name="ConjunctionCoupon" type="xsd:string" />
      <xsd:choice minOccurs="0">
        <xsd:element ref="CityCode" />
        <xsd:element name="IATACode" type="xsd:string">
          <xsd:annotation>
            <xsd:documentation>Agency IATA code.</xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:choice>
      <xsd:element name="DateOfIssue" type="xsd:date">
        <xsd:annotation>
          <xsd:documentation>Date of the document issuance: YYYY-MM-DD</xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
  <xsd:complexType name="Payment_Type">
    <xsd:annotation>
      <xsd:documentation>Name "Payment_Type" was chosen, because there is already a global element with name "PaymentType". Although this is valid in a schema, it causes an error, when generating code with JAXB.</xsd:documentation>
    </xsd:annotation>
    <xsd:choice>
      <xsd:element name="CreditCardInformation">
        <xsd:annotation>
          <xsd:documentation>Credit Card Payment</xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
          <xsd:complexContent mixed="false">
            <xsd:extension base="CreditCardInformationType" />
          </xsd:complexContent>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="Other">
        <xsd:annotation>
          <xsd:documentation>Other form Of Payment. Allowed values are: CA - CASH, CK- CHECK</xsd:documentation>
        </xsd:annotation>
        <xsd:simpleType>
          <xsd:restriction base="xsd:string">
            <xsd:enumeration value="CA" />
            <xsd:enumeration value="CK" />
          </xsd:restriction>
        </xsd:simpleType>
      </xsd:element>
    </xsd:choice>
  </xsd:complexType>
</xsd:schema>